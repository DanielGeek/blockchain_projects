{"abi":null,"bytecode":{"object":""},"assembly":"\t.text\n\t.file\t\"SendPackedUserOp.s.sol:SendPackedUserOp\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[6]\n\tadd\t128, r0, r9\n\tst.1\t64, r9\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.eq\t@.BB0_95\n\tsub.s!\t@CPI0_5[0], r2, r4\n\tjump.eq\t@.BB0_10\n\tsub.s!\t@CPI0_6[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_1[0], r2, r2\n\tor\t@CPI0_2[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_3[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_10:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t164, r3, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_9[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r2\n\tsub!\tr2, r3, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_10[0], r2, r6\n\tjump.ge\t@.BB0_15\n\tadd\t31, r2, r6\n\tsub.s\t32, r0, r7\n\tand\tr6, r7, r6\n\tadd\t63, r6, r6\n\tand\tr6, r7, r6\n\tsub.s!\t@CPI0_11[0], r6, r7\n\tjump.le\t@.BB0_18\n.BB0_15:\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_95:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t12, r0, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_7[0], r1, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_8[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_18:\n\tadd\t128, r6, r6\n\tst.1\t64, r6\n\tst.1\t128, r2\n\tadd\tr4, r2, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r3, r3\n\tjump.le\t@.BB0_19\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_19:\n\tadd\t32, r5, r3\n\tptr.add\tr1, r3, r3\n\tand\t31, r2, r4\n\tshr.s!\t5, r2, r5\n\tjump.eq\t@.BB0_105\n\tadd\tr0, r0, r6\n.BB0_21:\n\tshl.s\t5, r6, r7\n\tptr.add\tr3, r7, r8\n\tld\tr8, r8\n\tadd\t160, r7, r7\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_21\n.BB0_105:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_23\n\tshl.s\t5, r5, r5\n\tptr.add\tr3, r5, r3\n\tshl.s\t3, r4, r4\n\tadd\t160, r5, r5\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr3, r3\n\tsub\t256, r4, r4\n\tshr\tr3, r4, r3\n\tshl\tr3, r4, r3\n\tor\tr3, r6, r3\n\tst.1\tr5, r3\n.BB0_23:\n\tadd\t160, r2, r2\n\tst.1\tr2, r0\n\tld.1\t64, r5\n\tsub.s!\t@CPI0_12[0], r5, r2\n\tjump.gt\t@.BB0_15\n\tadd\t96, r5, r2\n\tst.1\t64, r2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tst.1.inc\tr5, r2, r2\n\tptr.add.s\t68, r1, r3\n\tld\tr3, r3\n\tsub.s!\t@CPI0_13[0], r3, r4\n\tjump.gt\t@.BB0_2\n\tst.1\tr2, r3\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t64, r5, r3\n\tadd\tr3, r0, stack-[6]\n\tst.1\tr3, r2\n\tptr.add.s\t132, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_13[0], r1, r2\n\tsub.s!\t@CPI0_13[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr2, r0, stack-[5]\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_14[0], r1, r2\n\tjump.gt\t@.BB0_15\n\tadd\tr5, r0, stack-[2]\n\tadd\tr9, r0, stack-[3]\n\tadd\t288, r1, r2\n\tst.1\t64, r2\n\tadd\t256, r1, r2\n\tadd\t96, r0, r3\n\tst.1\tr2, r3\n\tadd\t224, r1, r2\n\tst.1\tr2, r3\n\tadd\t96, r1, r2\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\tr3, r0, stack-[1]\n\tst.1\tr2, r3\n\tadd\t192, r1, r2\n\tst.1\tr2, r0\n\tadd\t160, r1, r2\n\tst.1\tr2, r0\n\tadd\t128, r1, r2\n\tst.1\tr2, r0\n\tadd\t32, r1, r2\n\tst.1\tr2, r0\n\tst.1\tr1, r0\n\tadd\t@CPI0_15[0], r0, r1\n\tld.1\t64, r4\n\tadd\tr4, r0, stack-[4]\n\tst.1\tr4, r1\n\tadd\t4, r4, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_16[0], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_104\n\tadd\tr0, r0, r7\n.BB0_31:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_31\n.BB0_104:\n\tadd\tr10, r0, r9\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_33\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tr9, r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_33:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_34\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tr2, r9, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_9[0], r1, r4\n\tjump.gt\t@.BB0_15\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_15\n\tst.1\t64, r1\n\tsub.s!\t32, r3, r2\n\tjump.lt\t@.BB0_2\n\tld.1\tr9, r2\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.ge\t@.BB0_2\n\tsub.s\t1, r2, r2\n\tsub.s!\t@CPI0_9[0], r2, r3\n\tjump.le\t@.BB0_45\n\tadd\t@CPI0_31[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_34:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_103\n\tadd\tr0, r0, r6\n.BB0_36:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_36\n.BB0_103:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_38\n.BB0_37:\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_38:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_45:\n\tsub.s!\t@CPI0_14[0], r1, r3\n\tadd\tstack-[3], r0, r5\n\tadd\tstack-[2], r0, r6\n\tjump.gt\t@.BB0_15\n\tadd\t288, r1, r3\n\tst.1\t64, r3\n\tadd\t256, r1, r3\n\tadd\tstack-[1], r0, r4\n\tst.1\tr3, r4\n\tadd\t224, r1, r3\n\tst.1\tr3, r4\n\tadd\t96, r1, r3\n\tst.1\tr3, r4\n\tadd\t64, r1, r3\n\tst.1\tr3, r4\n\tadd\t192, r1, r3\n\tst.1\tr3, r0\n\tadd\t160, r1, r3\n\tst.1\tr3, r0\n\tadd\t128, r1, r3\n\tst.1\tr3, r0\n\tadd\t32, r1, r3\n\tst.1\tr3, r0\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[4]\n\tsub.s!\t@CPI0_14[0], r1, r1\n\tjump.gt\t@.BB0_15\n\tadd\tstack-[4], r0, r3\n\tadd\t288, r3, r1\n\tst.1\t64, r1\n\tadd\t32, r3, r1\n\tst.1\tr1, r2\n\tadd\tstack-[5], r0, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.gt\t@.BB0_15\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tadd\tstack-[4], r0, r4\n\tadd\t192, r4, r2\n\tadd\t@CPI0_19[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t160, r4, r2\n\tadd\t@CPI0_20[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tadd\t@CPI0_21[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r4, r2\n\tst.1\tr2, r5\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.gt\t@.BB0_15\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tadd\tstack-[4], r0, r2\n\tadd\t224, r2, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub.s!\t@CPI0_18[0], r1, r2\n\tjump.gt\t@.BB0_15\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tadd\tstack-[4], r0, r2\n\tadd\t256, r2, r3\n\tadd\tr3, r0, stack-[1]\n\tst.1\tr3, r1\n\tld.1\tr6, r1\n\tadd\tr1, r0, stack-[3]\n\tld.1\t64, r3\n\tadd\t@CPI0_22[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tr3, r0, stack-[5]\n\tadd\t4, r3, r1\n\tnear_call\tr0, @abi_encode_struct_PackedUserOperation, @DEFAULT_UNWIND\n\tcontext.gas_left\tr3\n\tadd\tstack-[3], r0, r2\n\tand\t@CPI0_13[0], r2, r2\n\tsub.s!\t4, r2, r4\n\tjump.ne\t@.BB0_52\n\tadd\tstack[@returndatasize], r0, r4\n\tsub.s!\t32, r4, r1\n\tadd.ge\t32, r0, r4\n\tjump\t@.BB0_61\n.BB0_52:\n\tadd\tstack-[5], r0, r6\n\tsub\tr1, r6, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r6, r5\n\tadd\tr4, r0, r5\n\tadd.lt\tr6, r0, r5\n\tshl.s\t64, r5, r5\n\tsub.s!\t@CPI0_0[0], r1, r6\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r5, r1\n\tsub.s!\t@CPI0_0[0], r3, r5\n\tadd.ge\tr4, r0, r3\n\tshl.s\t192, r3, r3\n\tor\tr1, r3, r1\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_102\n\tadd\tr0, r0, r7\n.BB0_54:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_54\n.BB0_102:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_56\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[5], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_56:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_57\n.BB0_61:\n\tadd\t31, r4, r1\n\tand\t96, r1, r2\n\tadd\tstack-[5], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_9[0], r1, r3\n\tjump.gt\t@.BB0_15\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_15\n\tst.1\t64, r1\n\tsub.s!\t32, r4, r1\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tadd\t@CPI0_23[0], r0, r2\n\tst.1\t0, r2\n\tst.1\t28, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_24[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[3]\n\tadd\t@CPI0_25[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_66\n\tld.1\t64, r3\n\tadd\t36, r3, r2\n\tadd\tr3, r0, stack-[5]\n\tadd\t4, r3, r3\n\tld\tr1, r1\n\tsub.s!\t31337, r1, r1\n\tjump.ne\t@.BB0_69\n\tadd\t@CPI0_29[0], r0, r1\n\tadd\tstack-[5], r0, r4\n\tst.1\tr4, r1\n\tadd\t@CPI0_30[0], r0, r1\n\tst.1\tr3, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.lt\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_98\n\tadd\tr0, r0, r7\n.BB0_84:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_84\n.BB0_98:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_86\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[5], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_86:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_87\n\tadd\t31, r4, r1\n\tand\t224, r1, r2\n\tadd\tstack-[5], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_9[0], r1, r4\n\tjump.gt\t@.BB0_15\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_15\n\tjump\t@.BB0_80\n.BB0_57:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_101\n\tadd\tr0, r0, r6\n.BB0_59:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_59\n.BB0_101:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_38\n\tjump\t@.BB0_37\n.BB0_66:\n\trevert\n.BB0_69:\n\tadd\tstack-[6], r0, r1\n\tld.1\tr1, r1\n\tadd\t@CPI0_27[0], r0, r4\n\tadd\tstack-[5], r0, r5\n\tst.1\tr5, r4\n\tand\t@CPI0_13[0], r1, r1\n\tst.1\tr3, r1\n\tadd\tstack-[3], r0, r1\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tsub.s!\t@CPI0_0[0], r5, r3\n\tadd.lt\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_28[0], r1, r1\n\tadd\t@CPI0_17[0], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[5], r0, r10\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t96, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t96, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r6\n\tjump.eq\t@.BB0_100\n\tadd\tr0, r0, r7\n.BB0_71:\n\tshl.s\t5, r7, r8\n\tadd\tr10, r8, r9\n\tptr.add\tr1, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_71\n.BB0_100:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_73\n\tshl.s\t5, r6, r6\n\tptr.add\tr1, r6, r7\n\tadd\tstack-[5], r6, r6\n\tshl.s\t3, r5, r5\n\tld.1\tr6, r8\n\tshl\tr8, r5, r8\n\tshr\tr8, r5, r8\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r8, r5\n\tst.1\tr6, r5\n.BB0_73:\n\tadd\tr3, r0, stack[@returndatasize]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_74\n\tadd\t31, r4, r1\n\tand\t224, r1, r2\n\tadd\tstack-[5], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_9[0], r1, r4\n\tjump.gt\t@.BB0_15\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_15\n.BB0_80:\n\tst.1\t64, r1\n\tsub.s!\t96, r3, r2\n\tjump.lt\t@.BB0_2\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t255, r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[5], r0, r4\n\tadd\t32, r4, r3\n\tld.1\tr3, r3\n\tadd\t64, r4, r4\n\tld.1\tr4, r4\n\tshl.s\t248, r2, r2\n\tadd\t96, r1, r5\n\tst.1\tr5, r2\n\tadd\t64, r1, r2\n\tst.1\tr2, r4\n\tadd\t32, r1, r2\n\tst.1\tr2, r3\n\tadd\t65, r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_11[0], r1, r2\n\tjump.gt\t@.BB0_15\n\tadd\t128, r1, r2\n\tst.1\t64, r2\n\tadd\tstack-[1], r0, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[4], r0, r2\n\tnear_call\tr0, @abi_encode_struct_PackedUserOperation, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_87:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_97\n\tadd\tr0, r0, r6\n.BB0_89:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_89\n.BB0_97:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_38\n\tjump\t@.BB0_37\n.BB0_74:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_99\n\tadd\tr0, r0, r6\n.BB0_76:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_76\n.BB0_99:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_38\n\tjump\t@.BB0_37\n.func_end0:\n\nabi_encode_struct_PackedUserOperation:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r3\n\tld.1.inc\tr2, r4, r5\n\tand\t@CPI1_0[0], r4, r4\n\tst.1\tr3, r4\n\tld.1\tr5, r3\n\tadd\t64, r1, r4\n\tst.1\tr4, r3\n\tadd\t64, r2, r3\n\tld.1\tr3, r3\n\tadd\t96, r1, r4\n\tadd\t288, r0, r5\n\tst.1\tr4, r5\n\tadd\t320, r1, r4\n\tld.1.inc\tr3, r3, r5\n\tst.1\tr4, r3\n\tadd\t352, r1, r4\n\tsub!\tr3, r0, r6\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r6\n.BB1_2:\n\tadd\tr6, r4, r7\n\tadd\tr5, r6, r8\n\tld.1\tr8, r8\n\tst.1\tr7, r8\n\tadd\t32, r6, r6\n\tsub!\tr6, r3, r7\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr4, r3, r5\n\tst.1\tr5, r0\n\tadd\t31, r3, r5\n\tsub.s\t32, r0, r3\n\tand\tr5, r3, r5\n\tadd\tr4, r5, r4\n\tsub\tr4, r1, r5\n\tsub.s\t32, r5, r5\n\tadd\t96, r2, r6\n\tld.1\tr6, r6\n\tadd\t128, r1, r7\n\tst.1\tr7, r5\n\tld.1.inc\tr6, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB1_6\n\tadd\tr0, r0, r7\n.BB1_5:\n\tadd\tr7, r4, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB1_5\n.BB1_6:\n\tadd\tr4, r5, r6\n\tst.1\tr6, r0\n\tadd\t128, r2, r6\n\tld.1\tr6, r6\n\tadd\t160, r1, r7\n\tst.1\tr7, r6\n\tadd\t160, r2, r6\n\tld.1\tr6, r6\n\tadd\t192, r1, r7\n\tst.1\tr7, r6\n\tadd\t192, r2, r6\n\tld.1\tr6, r6\n\tadd\t224, r1, r7\n\tst.1\tr7, r6\n\tadd\t31, r5, r5\n\tand\tr5, r3, r5\n\tadd\tr4, r5, r4\n\tsub\tr4, r1, r5\n\tsub.s\t32, r5, r5\n\tadd\t256, r1, r6\n\tadd\t224, r2, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r5\n\tld.1.inc\tr7, r5, r6\n\tst.1.inc\tr4, r5, r4\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB1_9\n\tadd\tr0, r0, r7\n.BB1_8:\n\tadd\tr7, r4, r8\n\tadd\tr6, r7, r9\n\tld.1\tr9, r9\n\tst.1\tr8, r9\n\tadd\t32, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB1_8\n.BB1_9:\n\tadd\tr4, r5, r6\n\tst.1\tr6, r0\n\tadd\t31, r5, r5\n\tand\tr5, r3, r5\n\tadd\tr4, r5, r5\n\tsub\tr5, r1, r4\n\tsub.s\t32, r4, r4\n\tadd\t256, r2, r2\n\tld.1\tr2, r2\n\tadd\t288, r1, r1\n\tst.1\tr1, r4\n\tld.1.inc\tr2, r2, r4\n\tst.1.inc\tr5, r2, r1\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB1_12\n\tadd\tr0, r0, r5\n.BB1_11:\n\tadd\tr5, r1, r6\n\tadd\tr4, r5, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tadd\t32, r5, r5\n\tsub!\tr5, r2, r6\n\tjump.lt\t@.BB1_11\n.BB1_12:\n\tadd\tr1, r2, r4\n\tst.1\tr4, r0\n\tadd\t31, r2, r2\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\n__cxa_throw:\n.func_begin2:\n\trevert\n.func_end2:\n\n__staticcall:\n.func_begin3:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB3_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB3_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end3:\n\n\t.data\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell -16711936\nCPI0_2:\n\t.cell 65537\nCPI0_3:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_4:\n\t.cell 4174167879\nCPI0_5:\n\t.cell 3672176839\nCPI0_6:\n\t.cell 3225444902\nCPI0_7:\n\t.cell 16711680\nCPI0_8:\n\t.cell 2535301202817642044428229017600\nCPI0_9:\n\t.cell 18446744073709551615\nCPI0_10:\n\t.cell 18446744073709551616\nCPI0_11:\n\t.cell 18446744073709551487\nCPI0_12:\n\t.cell 18446744073709551519\nCPI0_13:\nCPI1_0:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_14:\n\t.cell 18446744073709551327\nCPI0_15:\n\t.cell 20359749130148582612428476031180930620585922044424978539360586139996071657472\nCPI0_16:\n\t.cell 2852213850513516153367582212096\nCPI0_17:\n\t.cell 645326474426547203313410069153905908525362434349\nCPI0_18:\n\t.cell 18446744073709551583\nCPI0_19:\n\t.cell 87112285931760246646623899502532662132992\nCPI0_20:\n\t.cell 16777216\nCPI0_21:\n\t.cell 5708990770823839524233143877797980545547763712\nCPI0_22:\n\t.cell 15742374736755560200867032344613233170649429379879687236804144291568011968512\nCPI0_23:\n\t.cell 11430537079145650693387304458692941425836787954612963690241153482819318579200\nCPI0_24:\n\t.cell 904625697166532776746648320380374280103671759954006657414122630674458345472\nCPI0_25:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI0_26:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_27:\n\t.cell -52421234194266749651649673443257628051379996772460400772143257257909722021888\nCPI0_28:\n\t.cell 5387515050969974956360988622848\nCPI0_29:\n\t.cell -13000608119627727876772300249704890262799149961116506745709105103651939024896\nCPI0_30:\n\t.cell -37977571911845989512430043814285979273712922650878732108812190966532310630528\nCPI0_31:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\n","methodIdentifiers":{"IS_SCRIPT()":"f8ccbf47","generateSignedUserOperation(bytes,(address,address,address),address)":"dae0f8c7","run()":"c0406226"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.3a2587f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"entryPoint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"usdc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"internalType\":\"struct HelperConfig.NetworkConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"minimalAccount\",\"type\":\"address\"}],\"name\":\"generateSignedUserOperation\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"accountGasLimits\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasFees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct PackedUserOperation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"script/SendPackedUserOp.s.sol\":\"SendPackedUserOp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-era-contracts/=lib/foundry-era-contracts/\",\":murky/=lib/foundry-era-contracts/lib/murky/\",\":openzeppelin-contracts-upgradeable/=lib/foundry-era-contracts/lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solpp/=lib/foundry-era-contracts/src/solpp/solpp-generated-contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/EntryPoint.sol\":{\"keccak256\":\"0x0eb1245b5541ff0fbc0f2a23c746e2b4eb9c46e801a4847f15d7d96d1cecc576\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b002e499336c8f6ec05230762cccd3b48d67a2ec547e2789cfb70132af0b430f\",\"dweb:/ipfs/QmfRGPNgBrfxmLt9PQUEjocVmC47Mx14Vie1tziTARRZfq\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x6247e011a6cb0b263b3aa098822977181674d91b62e5bdfe04c6e66f72da25d6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ca829a69b3fbc74fec8e140d42a2bf93bc3512609272f031c846470f61f0ab7e\",\"dweb:/ipfs/QmP3r3MBgAN39KeVB1rCGJWwcBcotNt26ALtAR54poQ1Jc\"]},\"lib/account-abstraction/contracts/core/NonceManager.sol\":{\"keccak256\":\"0x1f951786ce6f171e7ed0242fee73ee4a205c7523404ee6cffca48b8c64ea5fe9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a602bf2274d478dae7a532cca31f8179131808c324cc26ece5c7e87c5a1015a6\",\"dweb:/ipfs/QmaaSyw5GGbAWzUhAPCtsb38P3MmaVr1ngp61PYHCU2a5a\"]},\"lib/account-abstraction/contracts/core/SenderCreator.sol\":{\"keccak256\":\"0xeb95afb6e4cf921c1ed105ecb9f549ca46bee57f68acd1d2f4f84607ac0db5c5\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2ac91562f1fcabe4809a1b4256895efebcf46f89e08336a6c09ee2d29733238\",\"dweb:/ipfs/QmPsQnPcCzioPwVtUhxkbnwKPC1bnhHSbAwK9GXVpjN3mH\"]},\"lib/account-abstraction/contracts/core/StakeManager.sol\":{\"keccak256\":\"0x673eb19600058d8642605ca409c9e1d4cab13735564b856270b92c330ffb1b8d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://06599c57c7075ee8eb5f1710fccca3eb322876b968ec271e1fb34af41510ab2c\",\"dweb:/ipfs/QmVsDEjmZYtzgXa4AYKxbQEYQVh6NBq8GmFJCariBUqK4G\"]},\"lib/account-abstraction/contracts/core/UserOperationLib.sol\":{\"keccak256\":\"0x9d50ece985d35f82e33e5da417595c86fac10449e3d10895d08363d33aad454b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b1d11cc364c8bf7ed5388268c895b5ffed16e87dfbcb320ddeeba5e7974315dc\",\"dweb:/ipfs/QmYSpvjxEjweietQrYZagwQ52ipy7eXx4rwvnTzXKeGeMS\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x38710bec0cb20ff4ceef46a80475b5bdabc27b7efd2687fd473db68332f61b78\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dea7a723e1ef852e8764e69914a345d2e8bc5e13facfc9d5c29d791cb4ab0020\",\"dweb:/ipfs/QmU8dYgyF4DBJXFqjwLAtnE3q8q259ChfoEk9a6wyhHzEP\"]},\"lib/account-abstraction/contracts/interfaces/IAccountExecute.sol\":{\"keccak256\":\"0xd3dc32dde1add1fb6377f939ceff6be31c2e21343522311f7b88db666be9ee6c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5b8f065171bd32e23b306868189c730f849ce6147f753c59e396e7afcf384577\",\"dweb:/ipfs/QmZpDRNEZ9YNgGgyLQo5yM4bB1FNbtnfDABsChbgSQKXUh\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0xf100d6fcc0c3b450b13e979b6a42c628c292a1bc340eccc2e7796b80e3975588\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://192938b5b27234d35c8098a319e879363c79f750eea4d0e409dc889a8ce5b155\",\"dweb:/ipfs/QmURpaJFPqEtkKP2ngBsgZhAGN8wAWh5XQpYmCkiz4Urz5\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x1972a5fcb3a808b58c85af5741949ef6af11ab0debd3ae8c708171ae1ae0d0c4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://baa9837ae73b9e2362a47d42d081d7c0f3d8e878e5edb381117d94a6968949c9\",\"dweb:/ipfs/QmUmo6FUE7fv5z1WzW1YFjxp8PqaeN2JrEee9au59w3Xhe\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0xd575af0f6ebbd5f0b2933307d44cd7b4e03a69f4b817a67db5409bd3c89aeecb\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b1e2dea9b05cfba9d13339ed16d96457dc861013cc4f3f35b71a80f82448db3\",\"dweb:/ipfs/QmVaGy5uGDMSiU2SzyokTjoHFyb39VVG5wtaM9KTnHyZSk\"]},\"lib/account-abstraction/contracts/interfaces/IPaymaster.sol\":{\"keccak256\":\"0x49d8dbf8a85b006bcd89bbc40e4e9e113997cc016007de85263bdae70572d07f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bc0d83804c1b795d5c216b3518cd176c48f90db28550f267cbd89746d6b476c8\",\"dweb:/ipfs/QmNdCm4c6hnt7f6Q8q21QjtCNZWWRUaMVEYnQHEv68VnKt\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xbe5ca9e7f254d031687419e7b96ef48c9c63e9398bbe992dc72ffc6dc14e0a04\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://1fffec71c38627a26fabb423350148009579f092623fb02b471a12d973763a00\",\"dweb:/ipfs/QmRBi31QEYXHj3x1AnQ2jKa2eziZH1b9av396P3b4dw6bj\"]},\"lib/account-abstraction/contracts/interfaces/PackedUserOperation.sol\":{\"keccak256\":\"0x1129b46381db68eddbc5cb49e50664667b66b03c480453858e7b25eabe444359\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://499a948aba60480dba6e25c763b8d918f1c246eb7a3302e04f493e080f3295be\",\"dweb:/ipfs/QmeRhhswf4NACcBKam2PyjpTP2ddSm648kah5kkQJsvwz3\"]},\"lib/account-abstraction/contracts/utils/Exec.sol\":{\"keccak256\":\"0x86b1b1cd11158dddb9d381040c57fdc643c74b5e4eed3e7e036f32452672ad74\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://ad88663b6c76df73cf09a272cf333d038df7bb4c51281284b572bf9b46e1cd77\",\"dweb:/ipfs/QmVKxYF8avyPBtqejVhFCM2CuHsfpsCh7TsPqkBLtrgwJQ\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x2315be74cc2826f9da401bea3da46a10ad6a6efdf73176d79160b453286d0ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0d4dc826911d6cb4d6272ed5cbdb6950e1476141cca328e178b808d848789c\",\"dweb:/ipfs/QmV2ytjUEkV84VtdMs1nZqQTBoVE987cHboQMpiha5yo3e\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/mocks/token/ERC20Mock.sol\":{\"keccak256\":\"0x3ae81a443846c6d9bd387d6c6a5d7271a25095c83bb93817eefdaa22e13ca9e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f98462a56f254dc0046038e92527e3b7ee5bf0e03f60e3459fbd400c14be01a7\",\"dweb:/ipfs/QmevANfRaMrqy8Jh33LxEs5vP2xBPQspxtij8bsonw3GHM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c\",\"dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"script/HelperConfig.s.sol\":{\"keccak256\":\"0x65e4803da593d2dd6194d22d7eb617ffecf9b9e5579ae9dc9d2133c38cb51bbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70f88e77d6d8f78bf4259476494fc795cc8980603cd9dbd04f2b9bc2daa43c43\",\"dweb:/ipfs/QmbTpdbZrwaBwmniDZhiAobMB87qCKQeg6JkejZgKAnbh3\"]},\"script/SendPackedUserOp.s.sol\":{\"keccak256\":\"0x1ad44763554cd2bcb61309cd89c1cbc88dbc55a9b372bb1746e2d1c149cdb09f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4db12bc7be4c7df3101adc4f05b045a3dfefc564d23ab3d240558c70a448c832\",\"dweb:/ipfs/QmYbiTP5BK1Grcx28PYxQunQDxyXzqA3E87qsrukwaJWpR\"]}},\"version\":1}","solc_version":"0.8.24","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 18:\"lib/forge-std/src/StdChains.sol\", 19:\"lib/forge-std/src/StdCheats.sol\", 27:\"lib/forge-std/src/StdUtils.sol\", 80:\"script/SendPackedUserOp.s.sol\"\nobject \"SendPackedUserOp_50930\" {\n    code {\n        {\n            /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 18:3166:3170  \"true\" */ 0x0c, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ or(and(sload(/** @src 18:3166:3170  \"true\" */ 0x0c), /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ not(16711935)), 65537))\n            let _2 := datasize(\"SendPackedUserOp_50930_deployed\")\n            codecopy(_1, dataoffset(\"SendPackedUserOp_50930_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 15:\"lib/forge-std/src/Base.sol\", 16:\"lib/forge-std/src/Script.sol\", 73:\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\", 80:\"script/SendPackedUserOp.s.sol\"\n    object \"SendPackedUserOp_50930_deployed\" {\n        code {\n            {\n                /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    let _4 := 0\n                    switch shr(224, calldataload(_4))\n                    case 0xc0406226 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        return(_4, _4)\n                    }\n                    case 0xdae0f8c7 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(_4, _4) }\n                        let offset := calldataload(_3)\n                        let _5 := 0xffffffffffffffff\n                        if gt(offset, _5) { revert(_4, _4) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(_4, _4) }\n                        let _6 := calldataload(add(_3, offset))\n                        let _7 := 36\n                        if gt(_6, _5)\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, _7)\n                        }\n                        let _8 := 0x20\n                        finalize_allocation(_1, add(and(add(_6, 31), not(31)), _8))\n                        mstore(_1, _6)\n                        if gt(add(add(offset, _6), _7), calldatasize()) { revert(_4, _4) }\n                        calldatacopy(add(_1, _8), add(offset, _7), _6)\n                        mstore(add(add(_1, _6), _8), _4)\n                        let _9 := 0x60\n                        if slt(add(calldatasize(), not(35)), _9) { revert(_4, _4) }\n                        let memPtr := mload(_2)\n                        let newFreePtr := add(memPtr, _9)\n                        if or(gt(newFreePtr, _5), lt(newFreePtr, memPtr))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(_4, _7)\n                        }\n                        mstore(_2, newFreePtr)\n                        let value := calldataload(_7)\n                        let _10 := sub(shl(160, 1), 1)\n                        if iszero(eq(value, and(value, _10))) { revert(_4, _4) }\n                        mstore(memPtr, value)\n                        let value_1 := calldataload(68)\n                        if iszero(eq(value_1, and(value_1, _10))) { revert(_4, _4) }\n                        mstore(add(memPtr, _8), value_1)\n                        let value_2 := calldataload(100)\n                        if iszero(eq(value_2, and(value_2, _10))) { revert(_4, _4) }\n                        let _11 := add(memPtr, _2)\n                        mstore(_11, value_2)\n                        let value_3 := calldataload(132)\n                        let _12 := and(value_3, _10)\n                        if iszero(eq(value_3, _12)) { revert(_4, _4) }\n                        pop(allocate_and_zero_memory_struct_struct_PackedUserOperation())\n                        /// @src 80:870:897  \"vm.getNonce(minimalAccount)\"\n                        let _13 := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                        /// @src 80:870:897  \"vm.getNonce(minimalAccount)\"\n                        mstore(_13, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x2d0335ab))\n                        /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                        mstore(/** @src 80:870:897  \"vm.getNonce(minimalAccount)\" */ add(_13, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _3), _12)\n                        let _14 := 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d\n                        /// @src 80:870:897  \"vm.getNonce(minimalAccount)\"\n                        let _15 := staticcall(gas(), /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _14, /** @src 80:870:897  \"vm.getNonce(minimalAccount)\" */ _13, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _7, /** @src 80:870:897  \"vm.getNonce(minimalAccount)\" */ _13, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _8)\n                        /// @src 80:870:897  \"vm.getNonce(minimalAccount)\"\n                        if iszero(_15)\n                        {\n                            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 80:870:897  \"vm.getNonce(minimalAccount)\"\n                        let expr := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4\n                        /// @src 80:870:897  \"vm.getNonce(minimalAccount)\"\n                        if _15\n                        {\n                            let _16 := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _8\n                            /// @src 80:870:897  \"vm.getNonce(minimalAccount)\"\n                            if gt(/** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _8, /** @src 80:870:897  \"vm.getNonce(minimalAccount)\" */ returndatasize()) { _16 := returndatasize() }\n                            finalize_allocation(_13, _16)\n                            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                            if slt(sub(/** @src 80:870:897  \"vm.getNonce(minimalAccount)\" */ add(_13, _16), /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ _13), /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _8)\n                            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                            {\n                                /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                                revert(_4, _4)\n                            }\n                            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let value_4 := mload(_13)\n                            if iszero(eq(value_4, and(value_4, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _5)))\n                            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                            {\n                                revert(/** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4, _4)\n                            }\n                            /// @src 80:870:897  \"vm.getNonce(minimalAccount)\"\n                            expr := value_4\n                        }\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        let diff := add(and(expr, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _5), /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ not(0))\n                        if gt(diff, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _5)\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        {\n                            mstore(/** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4, shl(224, 0x4e487b71))\n                            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                            mstore(/** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _3, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ 0x11)\n                            revert(/** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4, _7)\n                        }\n                        pop(allocate_and_zero_memory_struct_struct_PackedUserOperation())\n                        let memPtr_1 := mload(_2)\n                        finalize_allocation_3789(memPtr_1)\n                        mstore(memPtr_1, _12)\n                        mstore(/** @src 80:2061:2543  \"PackedUserOperation({...\" */ add(memPtr_1, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _8), /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ and(diff, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _5))\n                        let memPtr_2 := mload(_2)\n                        finalize_allocation_5347(memPtr_2)\n                        mstore(memPtr_2, _4)\n                        mstore(/** @src 80:2061:2543  \"PackedUserOperation({...\" */ add(memPtr_1, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _2), memPtr_2)\n                        mstore(/** @src 80:2061:2543  \"PackedUserOperation({...\" */ add(memPtr_1, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _9), _1)\n                        mstore(/** @src 80:2061:2543  \"PackedUserOperation({...\" */ add(memPtr_1, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ 128), /** @src 80:2256:2307  \"uint256(verificationGasLimit) << 128 | callGasLimit\" */ 0x0100000000000000000000000000000001000000)\n                        /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                        mstore(/** @src 80:2061:2543  \"PackedUserOperation({...\" */ add(memPtr_1, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ 160), /** @src 80:1869:1877  \"16777216\" */ 0x01000000)\n                        /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                        mstore(/** @src 80:2061:2543  \"PackedUserOperation({...\" */ add(memPtr_1, 192), /** @src 80:2401:2452  \"uint256(maxPriorityFeePerGas) << 128 | maxFeePerGas\" */ 0x010000000000000000000000000000000100)\n                        /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                        let memPtr_3 := mload(_2)\n                        finalize_allocation_5347(memPtr_3)\n                        mstore(memPtr_3, _4)\n                        mstore(/** @src 80:2061:2543  \"PackedUserOperation({...\" */ add(memPtr_1, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ 224), memPtr_3)\n                        let memPtr_4 := mload(_2)\n                        finalize_allocation_5347(memPtr_4)\n                        mstore(memPtr_4, _4)\n                        /// @src 80:2061:2543  \"PackedUserOperation({...\"\n                        let _17 := add(memPtr_1, /** @src 80:1979:1982  \"256\" */ 0x0100)\n                        /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                        mstore(_17, memPtr_4)\n                        let cleaned := and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 80:1088:1105  \"config.entryPoint\" */ memPtr), /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _10)\n                        /// @src 80:1076:1128  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                        let _18 := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                        /// @src 80:1076:1128  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                        mstore(_18, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(226, 0x08b37793))\n                        /// @src 80:1076:1128  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                        let _19 := staticcall(gas(), cleaned, _18, sub(abi_encode_struct_PackedUserOperation(add(_18, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _3), /** @src 80:1076:1128  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\" */ memPtr_1), _18), _18, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _8)\n                        /// @src 80:1076:1128  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                        if iszero(_19)\n                        {\n                            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                            let pos_1 := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                            returndatacopy(pos_1, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                            revert(pos_1, returndatasize())\n                        }\n                        /// @src 80:1076:1128  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                        let expr_1 := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4\n                        /// @src 80:1076:1128  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                        if _19\n                        {\n                            let _20 := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _8\n                            /// @src 80:1076:1128  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                            if gt(/** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _8, /** @src 80:1076:1128  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\" */ returndatasize()) { _20 := returndatasize() }\n                            finalize_allocation(_18, _20)\n                            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                            if slt(sub(/** @src 80:1076:1128  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\" */ add(_18, _20), /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ _18), /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _8)\n                            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                            {\n                                /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                                revert(_4, _4)\n                            }\n                            /// @src 80:1076:1128  \"IEntryPoint(config.entryPoint).getUserOpHash(userOp)\"\n                            expr_1 := /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(_18)\n                        }\n                        /// @src 73:1367:1676  \"assembly {...\"\n                        mstore(/** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 73:1367:1676  \"assembly {...\" */ \"\\x19Ethereum Signed Message:\\n32\")\n                        mstore(0x1c, expr_1)\n                        let var_digest := keccak256(/** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 73:1367:1676  \"assembly {...\" */ 0x3c)\n                        /// @src 80:1231:1238  \"uint8 v\"\n                        let var_v := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4\n                        /// @src 80:1248:1257  \"bytes32 r\"\n                        let var_r := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4\n                        /// @src 80:1267:1276  \"bytes32 s\"\n                        let var_s := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4\n                        /// @src 80:1391:1564  \"if (block.chainid == 31337) {...\"\n                        switch /** @src 80:1395:1417  \"block.chainid == 31337\" */ eq(/** @src 80:1395:1408  \"block.chainid\" */ chainid(), /** @src 80:1412:1417  \"31337\" */ 0x7a69)\n                        case /** @src 80:1391:1564  \"if (block.chainid == 31337) {...\" */ 0 {\n                            /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                            let cleaned_1 := and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ mload(/** @src 80:1530:1544  \"config.account\" */ _11), /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _10)\n                            /// @src 80:1522:1553  \"vm.sign(config.account, digest)\"\n                            let _21 := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                            /// @src 80:1522:1553  \"vm.sign(config.account, digest)\"\n                            mstore(_21, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(224, 0x8c1aa205))\n                            /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                            mstore(/** @src 80:1522:1553  \"vm.sign(config.account, digest)\" */ add(_21, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _3), cleaned_1)\n                            mstore(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 80:1522:1553  \"vm.sign(config.account, digest)\" */ _21, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _7), var_digest)\n                            /// @src 80:1522:1553  \"vm.sign(config.account, digest)\"\n                            let _22 := staticcall(gas(), /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _14, /** @src 80:1522:1553  \"vm.sign(config.account, digest)\" */ _21, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ 68, /** @src 80:1522:1553  \"vm.sign(config.account, digest)\" */ _21, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _9)\n                            /// @src 80:1522:1553  \"vm.sign(config.account, digest)\"\n                            if iszero(_22)\n                            {\n                                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                                let pos_2 := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                                returndatacopy(pos_2, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                                revert(pos_2, returndatasize())\n                            }\n                            /// @src 80:1522:1553  \"vm.sign(config.account, digest)\"\n                            let expr_component := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4\n                            let expr_component_1 := _4\n                            let expr_component_2 := _4\n                            /// @src 80:1522:1553  \"vm.sign(config.account, digest)\"\n                            if _22\n                            {\n                                let _23 := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _9\n                                /// @src 80:1522:1553  \"vm.sign(config.account, digest)\"\n                                if gt(/** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _9, /** @src 80:1522:1553  \"vm.sign(config.account, digest)\" */ returndatasize()) { _23 := returndatasize() }\n                                finalize_allocation(_21, _23)\n                                let expr_component_3, expr_component_4, expr_component_5 := abi_decode_uint8t_bytes32t_bytes32_fromMemory(_21, add(_21, _23))\n                                expr_component := expr_component_3\n                                expr_component_1 := expr_component_4\n                                expr_component_2 := expr_component_5\n                            }\n                            /// @src 80:1510:1553  \"(v, r, s) = vm.sign(config.account, digest)\"\n                            var_s := expr_component_2\n                            var_r := expr_component_1\n                            var_v := expr_component\n                        }\n                        default /// @src 80:1391:1564  \"if (block.chainid == 31337) {...\"\n                        {\n                            /// @src 80:1445:1479  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            let _24 := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                            /// @src 80:1445:1479  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            mstore(_24, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ shl(226, 0x38d07aa9))\n                            /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                            mstore(/** @src 80:1445:1479  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ add(_24, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _3), /** @src 80:1315:1381  \"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\" */ 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80)\n                            /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                            mstore(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 80:1445:1479  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ _24, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _7), var_digest)\n                            /// @src 80:1445:1479  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            let _25 := staticcall(gas(), /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _14, /** @src 80:1445:1479  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ _24, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ 68, /** @src 80:1445:1479  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ _24, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _9)\n                            /// @src 80:1445:1479  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            if iszero(_25)\n                            {\n                                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                                let pos_3 := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                                returndatacopy(pos_3, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4, /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ returndatasize())\n                                revert(pos_3, returndatasize())\n                            }\n                            /// @src 80:1445:1479  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            let expr_component_6 := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _4\n                            let expr_component_7 := _4\n                            let expr_component_8 := _4\n                            /// @src 80:1445:1479  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            if _25\n                            {\n                                let _26 := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _9\n                                /// @src 80:1445:1479  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                                if gt(/** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _9, /** @src 80:1445:1479  \"vm.sign(ANVIL_DEFAULT_KEY, digest)\" */ returndatasize()) { _26 := returndatasize() }\n                                finalize_allocation(_24, _26)\n                                let expr_component_9, expr_component_10, expr_component_11 := abi_decode_uint8t_bytes32t_bytes32_fromMemory(_24, add(_24, _26))\n                                expr_component_6 := expr_component_9\n                                expr_component_7 := expr_component_10\n                                expr_component_8 := expr_component_11\n                            }\n                            /// @src 80:1433:1479  \"(v, r, s) = vm.sign(ANVIL_DEFAULT_KEY, digest)\"\n                            var_s := expr_component_8\n                            var_r := expr_component_7\n                            var_v := expr_component_6\n                        }\n                        /// @src 80:1592:1617  \"abi.encodePacked(r, s, v)\"\n                        let expr_mpos := /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ mload(_2)\n                        mstore(/** @src 80:1592:1617  \"abi.encodePacked(r, s, v)\" */ add(expr_mpos, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _8), var_r)\n                        mstore(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ add(/** @src 80:1592:1617  \"abi.encodePacked(r, s, v)\" */ expr_mpos, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _2), var_s)\n                        /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                        mstore(add(/** @src 80:1592:1617  \"abi.encodePacked(r, s, v)\" */ expr_mpos, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ _9), /** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ and(shl(248, var_v), shl(248, 255)))\n                        /// @src 80:1592:1617  \"abi.encodePacked(r, s, v)\"\n                        mstore(expr_mpos, 65)\n                        /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                        let newFreePtr_1 := add(expr_mpos, 128)\n                        if or(gt(newFreePtr_1, _5), lt(newFreePtr_1, expr_mpos))\n                        {\n                            mstore(_4, shl(224, 0x4e487b71))\n                            mstore(_3, /** @src 80:1592:1617  \"abi.encodePacked(r, s, v)\" */ 65)\n                            /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                            revert(_4, _7)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        /// @src 80:1573:1617  \"userOp.signature = abi.encodePacked(r, s, v)\"\n                        mstore(/** @src 80:1573:1589  \"userOp.signature\" */ _17, /** @src 80:1573:1617  \"userOp.signature = abi.encodePacked(r, s, v)\" */ expr_mpos)\n                        /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                        let memPos := mload(_2)\n                        return(memPos, sub(abi_encode_struct_PackedUserOperation(memPos, memPtr_1), memPos))\n                    }\n                    case 0xf8ccbf47 {\n                        if callvalue() { revert(_4, _4) }\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_4, _4) }\n                        let value_5 := and(shr(16, sload(/** @src 16:800:828  \"bool public IS_SCRIPT = true\" */ 12)), /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ 0xff)\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, iszero(iszero(value_5)))\n                        return(memPos_1, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation_3789(memPtr)\n            {\n                let newFreePtr := add(memPtr, 288)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_5347(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_encode_bytes(value, pos) -> end\n            {\n                let length := mload(value)\n                mstore(pos, length)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                for { } lt(i, length) { i := add(i, 0x20) }\n                {\n                    let _1 := 0x20\n                    mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n                }\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_struct_PackedUserOperation(headStart, value0) -> tail\n            {\n                mstore(headStart, 32)\n                mstore(add(headStart, 32), and(mload(value0), sub(shl(160, 1), 1)))\n                mstore(add(headStart, 64), mload(add(value0, 32)))\n                let memberValue0 := mload(add(value0, 64))\n                let _1 := 0x0120\n                mstore(add(headStart, 96), _1)\n                let tail_1 := abi_encode_bytes(memberValue0, add(headStart, 320))\n                let memberValue0_1 := mload(add(value0, 96))\n                let _2 := not(31)\n                mstore(add(headStart, 128), add(sub(tail_1, headStart), _2))\n                let tail_2 := abi_encode_bytes(memberValue0_1, tail_1)\n                mstore(add(headStart, 160), mload(add(value0, 128)))\n                mstore(add(headStart, 192), mload(add(value0, 160)))\n                mstore(add(headStart, 224), mload(add(value0, 192)))\n                let memberValue0_2 := mload(add(value0, 224))\n                let _3 := 256\n                mstore(add(headStart, _3), add(sub(tail_2, headStart), _2))\n                let tail_3 := abi_encode_bytes(memberValue0_2, tail_2)\n                let memberValue0_3 := mload(add(value0, _3))\n                mstore(add(headStart, _1), add(sub(tail_3, headStart), _2))\n                tail := abi_encode_bytes(memberValue0_3, tail_3)\n            }\n            function allocate_and_zero_memory_struct_struct_PackedUserOperation() -> memPtr\n            {\n                let memPtr_1 := mload(64)\n                finalize_allocation_3789(memPtr_1)\n                memPtr := memPtr_1\n                mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n                /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                mstore(add(memPtr_1, 32), /** @src -1:-1:-1 */ 0)\n                /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                mstore(add(memPtr_1, 64), 96)\n                mstore(add(memPtr_1, 96), 96)\n                mstore(add(memPtr_1, 128), /** @src -1:-1:-1 */ 0)\n                /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                mstore(add(memPtr_1, 160), /** @src -1:-1:-1 */ 0)\n                /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                mstore(add(memPtr_1, 192), /** @src -1:-1:-1 */ 0)\n                /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                mstore(add(memPtr_1, 224), 96)\n                mstore(add(memPtr_1, 256), 96)\n            }\n            /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n            function abi_decode_uint8t_bytes32t_bytes32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n            {\n                if slt(sub(dataEnd, headStart), 96)\n                {\n                    /// @src 80:453:2556  \"contract SendPackedUserOp is Script {...\"\n                    revert(0, 0)\n                }\n                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                let value := mload(headStart)\n                if iszero(eq(value, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ and(/** @src 15:1590:1604  \"Vm(VM_ADDRESS)\" */ value, /** @src 80:453:2556  \"contract SendPackedUserOp is Script {...\" */ 0xff)))\n                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 15:1590:1604  \"Vm(VM_ADDRESS)\"\n                value0 := value\n                value1 := mload(add(headStart, 32))\n                value2 := mload(add(headStart, 64))\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000818000a\"\n    }\n}\n","hash":"010000f19f57bca9a645a5833b8765e33c6acdc508c121955c0b837a583003f9","factoryDependencies":{},"id":80}