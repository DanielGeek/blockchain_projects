{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectRevert()":"f4844814","expectRevert(bytes)":"f28dceb3","expectRevert(bytes4)":"c31eb0e0","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","projectRoot()":"d930a0e6","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(uint256,bytes32)":"e341eaa4","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Using the address that calls the test contract, has the next call (at this call depth only) create a transaction that can later be signed and sent onchain.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top of the test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Using the address that calls the test contract, has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x30d73c4fea34a791ad7334dd701df60fbb565c643556aadd6621e49e48895d1f\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://be9cf80e55eff0f49ad0ab3c44214e56a3e53b5ecafe311a521f5472fa4bbf59\",\"dweb:/ipfs/QmQHrZZoscvkfKSD2m6jhktrh8ieSLV2fg9DHGDHJiBkjT\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Using the address that calls the test contract, has the next call (at this call depth only) create a transaction that can later be signed and sent onchain."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get a `Wallet`'s nonce."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"revertTo(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"revertToAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top of the test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Using the address that calls the test contract, has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/","ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x30d73c4fea34a791ad7334dd701df60fbb565c643556aadd6621e49e48895d1f","urls":["bzz-raw://be9cf80e55eff0f49ad0ab3c44214e56a3e53b5ecafe311a521f5472fa4bbf59","dweb:/ipfs/QmQHrZZoscvkfKSD2m6jhktrh8ieSLV2fg9DHGDHJiBkjT"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":15759,"exportedSymbols":{"Vm":[15758],"VmSafe":[15183]},"nodeType":"SourceUnit","src":"117:84979:15","nodes":[{"id":12114,"nodeType":"PragmaDirective","src":"117:31:15","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":12115,"nodeType":"PragmaDirective","src":"149:33:15","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":15183,"nodeType":"ContractDefinition","src":"409:70923:15","nodes":[{"id":12123,"nodeType":"EnumDefinition","src":"529:533:15","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":12117,"nodeType":"StructuredDocumentation","src":"432:92:15","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":12118,"name":"None","nameLocation":"610:4:15","nodeType":"EnumValue","src":"610:4:15"},{"id":12119,"name":"Broadcast","nameLocation":"714:9:15","nodeType":"EnumValue","src":"714:9:15"},{"id":12120,"name":"RecurrentBroadcast","nameLocation":"829:18:15","nodeType":"EnumValue","src":"829:18:15"},{"id":12121,"name":"Prank","nameLocation":"939:5:15","nodeType":"EnumValue","src":"939:5:15"},{"id":12122,"name":"RecurrentPrank","nameLocation":"1042:14:15","nodeType":"EnumValue","src":"1042:14:15"}],"name":"CallerMode","nameLocation":"534:10:15"},{"id":12136,"nodeType":"EnumDefinition","src":"1118:791:15","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":12124,"nodeType":"StructuredDocumentation","src":"1068:45:15","text":"The kind of account access that occurred."},"members":[{"id":12125,"name":"Call","nameLocation":"1186:4:15","nodeType":"EnumValue","src":"1186:4:15"},{"id":12126,"name":"DelegateCall","nameLocation":"1252:12:15","nodeType":"EnumValue","src":"1252:12:15"},{"id":12127,"name":"CallCode","nameLocation":"1322:8:15","nodeType":"EnumValue","src":"1322:8:15"},{"id":12128,"name":"StaticCall","nameLocation":"1390:10:15","nodeType":"EnumValue","src":"1390:10:15"},{"id":12129,"name":"Create","nameLocation":"1446:6:15","nodeType":"EnumValue","src":"1446:6:15"},{"id":12130,"name":"SelfDestruct","nameLocation":"1505:12:15","nodeType":"EnumValue","src":"1505:12:15"},{"id":12131,"name":"Resume","nameLocation":"1644:6:15","nodeType":"EnumValue","src":"1644:6:15"},{"id":12132,"name":"Balance","nameLocation":"1703:7:15","nodeType":"EnumValue","src":"1703:7:15"},{"id":12133,"name":"Extcodesize","nameLocation":"1764:11:15","nodeType":"EnumValue","src":"1764:11:15"},{"id":12134,"name":"Extcodehash","nameLocation":"1829:11:15","nodeType":"EnumValue","src":"1829:11:15"},{"id":12135,"name":"Extcodecopy","nameLocation":"1892:11:15","nodeType":"EnumValue","src":"1892:11:15"}],"name":"AccountAccessKind","nameLocation":"1123:17:15"},{"id":12145,"nodeType":"StructDefinition","src":"1971:237:15","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":12137,"nodeType":"StructuredDocumentation","src":"1915:51:15","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":12140,"mutability":"mutable","name":"topics","nameLocation":"2069:6:15","nodeType":"VariableDeclaration","scope":12145,"src":"2059:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2059:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12139,"nodeType":"ArrayTypeName","src":"2059:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12142,"mutability":"mutable","name":"data","nameLocation":"2127:4:15","nodeType":"VariableDeclaration","scope":12145,"src":"2121:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12141,"name":"bytes","nodeType":"ElementaryTypeName","src":"2121:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12144,"mutability":"mutable","name":"emitter","nameLocation":"2194:7:15","nodeType":"VariableDeclaration","scope":12145,"src":"2186:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12143,"name":"address","nodeType":"ElementaryTypeName","src":"2186:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"1978:3:15","scope":15183,"visibility":"public"},{"id":12151,"nodeType":"StructDefinition","src":"2277:119:15","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":12146,"nodeType":"StructuredDocumentation","src":"2214:58:15","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":12148,"mutability":"mutable","name":"key","nameLocation":"2342:3:15","nodeType":"VariableDeclaration","scope":12151,"src":"2335:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12147,"name":"string","nodeType":"ElementaryTypeName","src":"2335:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12150,"mutability":"mutable","name":"url","nameLocation":"2386:3:15","nodeType":"VariableDeclaration","scope":12151,"src":"2379:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12149,"name":"string","nodeType":"ElementaryTypeName","src":"2379:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"2284:3:15","scope":15183,"visibility":"public"},{"id":12172,"nodeType":"StructDefinition","src":"2456:615:15","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":12152,"nodeType":"StructuredDocumentation","src":"2402:49:15","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":12154,"mutability":"mutable","name":"emitter","nameLocation":"2537:7:15","nodeType":"VariableDeclaration","scope":12172,"src":"2529:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12153,"name":"address","nodeType":"ElementaryTypeName","src":"2529:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12157,"mutability":"mutable","name":"topics","nameLocation":"2631:6:15","nodeType":"VariableDeclaration","scope":12172,"src":"2621:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12155,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2621:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12156,"nodeType":"ArrayTypeName","src":"2621:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12159,"mutability":"mutable","name":"data","nameLocation":"2689:4:15","nodeType":"VariableDeclaration","scope":12172,"src":"2683:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12158,"name":"bytes","nodeType":"ElementaryTypeName","src":"2683:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12161,"mutability":"mutable","name":"blockHash","nameLocation":"2738:9:15","nodeType":"VariableDeclaration","scope":12172,"src":"2730:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12160,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2730:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12163,"mutability":"mutable","name":"blockNumber","nameLocation":"2793:11:15","nodeType":"VariableDeclaration","scope":12172,"src":"2786:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12162,"name":"uint64","nodeType":"ElementaryTypeName","src":"2786:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12165,"mutability":"mutable","name":"transactionHash","nameLocation":"2855:15:15","nodeType":"VariableDeclaration","scope":12172,"src":"2847:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12167,"mutability":"mutable","name":"transactionIndex","nameLocation":"2934:16:15","nodeType":"VariableDeclaration","scope":12172,"src":"2927:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12166,"name":"uint64","nodeType":"ElementaryTypeName","src":"2927:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12169,"mutability":"mutable","name":"logIndex","nameLocation":"2994:8:15","nodeType":"VariableDeclaration","scope":12172,"src":"2986:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12168,"name":"uint256","nodeType":"ElementaryTypeName","src":"2986:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12171,"mutability":"mutable","name":"removed","nameLocation":"3057:7:15","nodeType":"VariableDeclaration","scope":12172,"src":"3052:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12170,"name":"bool","nodeType":"ElementaryTypeName","src":"3052:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"2463:10:15","scope":15183,"visibility":"public"},{"id":12184,"nodeType":"StructDefinition","src":"3147:334:15","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":12173,"nodeType":"StructuredDocumentation","src":"3077:65:15","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":12175,"mutability":"mutable","name":"errorMessage","nameLocation":"3218:12:15","nodeType":"VariableDeclaration","scope":12184,"src":"3211:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12174,"name":"string","nodeType":"ElementaryTypeName","src":"3211:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12177,"mutability":"mutable","name":"path","nameLocation":"3281:4:15","nodeType":"VariableDeclaration","scope":12184,"src":"3274:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12176,"name":"string","nodeType":"ElementaryTypeName","src":"3274:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12179,"mutability":"mutable","name":"depth","nameLocation":"3337:5:15","nodeType":"VariableDeclaration","scope":12184,"src":"3330:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12178,"name":"uint64","nodeType":"ElementaryTypeName","src":"3330:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12181,"mutability":"mutable","name":"isDir","nameLocation":"3402:5:15","nodeType":"VariableDeclaration","scope":12184,"src":"3397:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12180,"name":"bool","nodeType":"ElementaryTypeName","src":"3397:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12183,"mutability":"mutable","name":"isSymlink","nameLocation":"3465:9:15","nodeType":"VariableDeclaration","scope":12184,"src":"3460:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12182,"name":"bool","nodeType":"ElementaryTypeName","src":"3460:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3154:8:15","scope":15183,"visibility":"public"},{"id":12200,"nodeType":"StructDefinition","src":"3711:599:15","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":12185,"nodeType":"StructuredDocumentation","src":"3487:219:15","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":12187,"mutability":"mutable","name":"isDir","nameLocation":"3797:5:15","nodeType":"VariableDeclaration","scope":12200,"src":"3792:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12186,"name":"bool","nodeType":"ElementaryTypeName","src":"3792:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12189,"mutability":"mutable","name":"isSymlink","nameLocation":"3868:9:15","nodeType":"VariableDeclaration","scope":12200,"src":"3863:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12188,"name":"bool","nodeType":"ElementaryTypeName","src":"3863:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12191,"mutability":"mutable","name":"length","nameLocation":"3960:6:15","nodeType":"VariableDeclaration","scope":12200,"src":"3952:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12190,"name":"uint256","nodeType":"ElementaryTypeName","src":"3952:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12193,"mutability":"mutable","name":"readOnly","nameLocation":"4051:8:15","nodeType":"VariableDeclaration","scope":12200,"src":"4046:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12192,"name":"bool","nodeType":"ElementaryTypeName","src":"4046:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12195,"mutability":"mutable","name":"modified","nameLocation":"4140:8:15","nodeType":"VariableDeclaration","scope":12200,"src":"4132:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12194,"name":"uint256","nodeType":"ElementaryTypeName","src":"4132:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12197,"mutability":"mutable","name":"accessed","nameLocation":"4216:8:15","nodeType":"VariableDeclaration","scope":12200,"src":"4208:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12196,"name":"uint256","nodeType":"ElementaryTypeName","src":"4208:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12199,"mutability":"mutable","name":"created","nameLocation":"4296:7:15","nodeType":"VariableDeclaration","scope":12200,"src":"4288:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12198,"name":"uint256","nodeType":"ElementaryTypeName","src":"4288:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"3718:10:15","scope":15183,"visibility":"public"},{"id":12210,"nodeType":"StructDefinition","src":"4364:277:15","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":12201,"nodeType":"StructuredDocumentation","src":"4316:43:15","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":12203,"mutability":"mutable","name":"addr","nameLocation":"4429:4:15","nodeType":"VariableDeclaration","scope":12210,"src":"4421:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12202,"name":"address","nodeType":"ElementaryTypeName","src":"4421:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12205,"mutability":"mutable","name":"publicKeyX","nameLocation":"4491:10:15","nodeType":"VariableDeclaration","scope":12210,"src":"4483:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12204,"name":"uint256","nodeType":"ElementaryTypeName","src":"4483:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12207,"mutability":"mutable","name":"publicKeyY","nameLocation":"4559:10:15","nodeType":"VariableDeclaration","scope":12210,"src":"4551:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12206,"name":"uint256","nodeType":"ElementaryTypeName","src":"4551:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12209,"mutability":"mutable","name":"privateKey","nameLocation":"4624:10:15","nodeType":"VariableDeclaration","scope":12210,"src":"4616:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12208,"name":"uint256","nodeType":"ElementaryTypeName","src":"4616:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"4371:6:15","scope":15183,"visibility":"public"},{"id":12218,"nodeType":"StructDefinition","src":"4686:213:15","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":12211,"nodeType":"StructuredDocumentation","src":"4647:34:15","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":12213,"mutability":"mutable","name":"exitCode","nameLocation":"4757:8:15","nodeType":"VariableDeclaration","scope":12218,"src":"4751:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":12212,"name":"int32","nodeType":"ElementaryTypeName","src":"4751:5:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":12215,"mutability":"mutable","name":"stdout","nameLocation":"4834:6:15","nodeType":"VariableDeclaration","scope":12218,"src":"4828:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12214,"name":"bytes","nodeType":"ElementaryTypeName","src":"4828:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12217,"mutability":"mutable","name":"stderr","nameLocation":"4886:6:15","nodeType":"VariableDeclaration","scope":12218,"src":"4880:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12216,"name":"bytes","nodeType":"ElementaryTypeName","src":"4880:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"4693:9:15","scope":15183,"visibility":"public"},{"id":12224,"nodeType":"StructDefinition","src":"4948:184:15","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":12219,"nodeType":"StructuredDocumentation","src":"4905:38:15","text":"Information on the chain and fork."},"members":[{"constant":false,"id":12221,"mutability":"mutable","name":"forkId","nameLocation":"5049:6:15","nodeType":"VariableDeclaration","scope":12224,"src":"5041:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12220,"name":"uint256","nodeType":"ElementaryTypeName","src":"5041:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12223,"mutability":"mutable","name":"chainId","nameLocation":"5118:7:15","nodeType":"VariableDeclaration","scope":12224,"src":"5110:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12222,"name":"uint256","nodeType":"ElementaryTypeName","src":"5110:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"4955:9:15","scope":15183,"visibility":"public"},{"id":12256,"nodeType":"StructDefinition","src":"5193:1837:15","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":12225,"nodeType":"StructuredDocumentation","src":"5138:50:15","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":12228,"mutability":"mutable","name":"chainInfo","nameLocation":"5285:9:15","nodeType":"VariableDeclaration","scope":12256,"src":"5275:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12224_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":12227,"nodeType":"UserDefinedTypeName","pathNode":{"id":12226,"name":"ChainInfo","nameLocations":["5275:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":12224,"src":"5275:9:15"},"referencedDeclaration":12224,"src":"5275:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$12224_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":12231,"mutability":"mutable","name":"kind","nameLocation":"5748:4:15","nodeType":"VariableDeclaration","scope":12256,"src":"5730:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12136","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":12230,"nodeType":"UserDefinedTypeName","pathNode":{"id":12229,"name":"AccountAccessKind","nameLocations":["5730:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":12136,"src":"5730:17:15"},"referencedDeclaration":12136,"src":"5730:17:15","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12136","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":12233,"mutability":"mutable","name":"account","nameLocation":"5925:7:15","nodeType":"VariableDeclaration","scope":12256,"src":"5917:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12232,"name":"address","nodeType":"ElementaryTypeName","src":"5917:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12235,"mutability":"mutable","name":"accessor","nameLocation":"5988:8:15","nodeType":"VariableDeclaration","scope":12256,"src":"5980:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12234,"name":"address","nodeType":"ElementaryTypeName","src":"5980:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12237,"mutability":"mutable","name":"initialized","nameLocation":"6199:11:15","nodeType":"VariableDeclaration","scope":12256,"src":"6194:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12236,"name":"bool","nodeType":"ElementaryTypeName","src":"6194:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12239,"mutability":"mutable","name":"oldBalance","nameLocation":"6285:10:15","nodeType":"VariableDeclaration","scope":12256,"src":"6277:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12238,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12241,"mutability":"mutable","name":"newBalance","nameLocation":"6460:10:15","nodeType":"VariableDeclaration","scope":12256,"src":"6452:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12240,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12243,"mutability":"mutable","name":"deployedCode","nameLocation":"6537:12:15","nodeType":"VariableDeclaration","scope":12256,"src":"6531:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12242,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12245,"mutability":"mutable","name":"value","nameLocation":"6621:5:15","nodeType":"VariableDeclaration","scope":12256,"src":"6613:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12244,"name":"uint256","nodeType":"ElementaryTypeName","src":"6613:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12247,"mutability":"mutable","name":"data","nameLocation":"6695:4:15","nodeType":"VariableDeclaration","scope":12256,"src":"6689:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12246,"name":"bytes","nodeType":"ElementaryTypeName","src":"6689:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12249,"mutability":"mutable","name":"reverted","nameLocation":"6790:8:15","nodeType":"VariableDeclaration","scope":12256,"src":"6785:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12248,"name":"bool","nodeType":"ElementaryTypeName","src":"6785:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12253,"mutability":"mutable","name":"storageAccesses","nameLocation":"6912:15:15","nodeType":"VariableDeclaration","scope":12256,"src":"6896:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12270_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":12251,"nodeType":"UserDefinedTypeName","pathNode":{"id":12250,"name":"StorageAccess","nameLocations":["6896:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":12270,"src":"6896:13:15"},"referencedDeclaration":12270,"src":"6896:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$12270_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":12252,"nodeType":"ArrayTypeName","src":"6896:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$12270_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":12255,"mutability":"mutable","name":"depth","nameLocation":"7018:5:15","nodeType":"VariableDeclaration","scope":12256,"src":"7011:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12254,"name":"uint64","nodeType":"ElementaryTypeName","src":"7011:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5200:13:15","scope":15183,"visibility":"public"},{"id":12270,"nodeType":"StructDefinition","src":"7092:425:15","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":12257,"nodeType":"StructuredDocumentation","src":"7036:51:15","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":12259,"mutability":"mutable","name":"account","nameLocation":"7182:7:15","nodeType":"VariableDeclaration","scope":12270,"src":"7174:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12258,"name":"address","nodeType":"ElementaryTypeName","src":"7174:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12261,"mutability":"mutable","name":"slot","nameLocation":"7246:4:15","nodeType":"VariableDeclaration","scope":12270,"src":"7238:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7238:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12263,"mutability":"mutable","name":"isWrite","nameLocation":"7303:7:15","nodeType":"VariableDeclaration","scope":12270,"src":"7298:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12262,"name":"bool","nodeType":"ElementaryTypeName","src":"7298:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12265,"mutability":"mutable","name":"previousValue","nameLocation":"7371:13:15","nodeType":"VariableDeclaration","scope":12270,"src":"7363:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7363:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12267,"mutability":"mutable","name":"newValue","nameLocation":"7440:8:15","nodeType":"VariableDeclaration","scope":12270,"src":"7432:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7432:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12269,"mutability":"mutable","name":"reverted","nameLocation":"7502:8:15","nodeType":"VariableDeclaration","scope":12270,"src":"7497:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12268,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7099:13:15","scope":15183,"visibility":"public"},{"id":12278,"nodeType":"FunctionDefinition","src":"7704:80:15","nodes":[],"documentation":{"id":12271,"nodeType":"StructuredDocumentation","src":"7561:138:15","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"7713:10:15","parameters":{"id":12274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12273,"mutability":"mutable","name":"name","nameLocation":"7740:4:15","nodeType":"VariableDeclaration","scope":12278,"src":"7724:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12272,"name":"string","nodeType":"ElementaryTypeName","src":"7724:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7723:22:15"},"returnParameters":{"id":12277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12276,"mutability":"mutable","name":"value","nameLocation":"7777:5:15","nodeType":"VariableDeclaration","scope":12278,"src":"7769:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12275,"name":"address","nodeType":"ElementaryTypeName","src":"7769:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7768:15:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12289,"nodeType":"FunctionDefinition","src":"7967:112:15","nodes":[],"documentation":{"id":12279,"nodeType":"StructuredDocumentation","src":"7790:172:15","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"7976:10:15","parameters":{"id":12284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12281,"mutability":"mutable","name":"name","nameLocation":"8003:4:15","nodeType":"VariableDeclaration","scope":12289,"src":"7987:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12280,"name":"string","nodeType":"ElementaryTypeName","src":"7987:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12283,"mutability":"mutable","name":"delim","nameLocation":"8025:5:15","nodeType":"VariableDeclaration","scope":12289,"src":"8009:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12282,"name":"string","nodeType":"ElementaryTypeName","src":"8009:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7986:45:15"},"returnParameters":{"id":12288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12287,"mutability":"mutable","name":"value","nameLocation":"8072:5:15","nodeType":"VariableDeclaration","scope":12289,"src":"8055:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12285,"name":"address","nodeType":"ElementaryTypeName","src":"8055:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12286,"nodeType":"ArrayTypeName","src":"8055:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"8054:24:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12297,"nodeType":"FunctionDefinition","src":"8225:74:15","nodes":[],"documentation":{"id":12290,"nodeType":"StructuredDocumentation","src":"8085:135:15","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"8234:7:15","parameters":{"id":12293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12292,"mutability":"mutable","name":"name","nameLocation":"8258:4:15","nodeType":"VariableDeclaration","scope":12297,"src":"8242:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12291,"name":"string","nodeType":"ElementaryTypeName","src":"8242:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8241:22:15"},"returnParameters":{"id":12296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12295,"mutability":"mutable","name":"value","nameLocation":"8292:5:15","nodeType":"VariableDeclaration","scope":12297,"src":"8287:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12294,"name":"bool","nodeType":"ElementaryTypeName","src":"8287:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8286:12:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12308,"nodeType":"FunctionDefinition","src":"8479:106:15","nodes":[],"documentation":{"id":12298,"nodeType":"StructuredDocumentation","src":"8305:169:15","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"8488:7:15","parameters":{"id":12303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12300,"mutability":"mutable","name":"name","nameLocation":"8512:4:15","nodeType":"VariableDeclaration","scope":12308,"src":"8496:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12299,"name":"string","nodeType":"ElementaryTypeName","src":"8496:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12302,"mutability":"mutable","name":"delim","nameLocation":"8534:5:15","nodeType":"VariableDeclaration","scope":12308,"src":"8518:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12301,"name":"string","nodeType":"ElementaryTypeName","src":"8518:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8495:45:15"},"returnParameters":{"id":12307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12306,"mutability":"mutable","name":"value","nameLocation":"8578:5:15","nodeType":"VariableDeclaration","scope":12308,"src":"8564:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12304,"name":"bool","nodeType":"ElementaryTypeName","src":"8564:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12305,"nodeType":"ArrayTypeName","src":"8564:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"8563:21:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12316,"nodeType":"FunctionDefinition","src":"8734:80:15","nodes":[],"documentation":{"id":12309,"nodeType":"StructuredDocumentation","src":"8591:138:15","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"8743:10:15","parameters":{"id":12312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12311,"mutability":"mutable","name":"name","nameLocation":"8770:4:15","nodeType":"VariableDeclaration","scope":12316,"src":"8754:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12310,"name":"string","nodeType":"ElementaryTypeName","src":"8754:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8753:22:15"},"returnParameters":{"id":12315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12314,"mutability":"mutable","name":"value","nameLocation":"8807:5:15","nodeType":"VariableDeclaration","scope":12316,"src":"8799:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8799:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8798:15:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12327,"nodeType":"FunctionDefinition","src":"8997:112:15","nodes":[],"documentation":{"id":12317,"nodeType":"StructuredDocumentation","src":"8820:172:15","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"9006:10:15","parameters":{"id":12322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12319,"mutability":"mutable","name":"name","nameLocation":"9033:4:15","nodeType":"VariableDeclaration","scope":12327,"src":"9017:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12318,"name":"string","nodeType":"ElementaryTypeName","src":"9017:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12321,"mutability":"mutable","name":"delim","nameLocation":"9055:5:15","nodeType":"VariableDeclaration","scope":12327,"src":"9039:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12320,"name":"string","nodeType":"ElementaryTypeName","src":"9039:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9016:45:15"},"returnParameters":{"id":12326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12325,"mutability":"mutable","name":"value","nameLocation":"9102:5:15","nodeType":"VariableDeclaration","scope":12327,"src":"9085:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9085:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12324,"nodeType":"ArrayTypeName","src":"9085:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"9084:24:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12335,"nodeType":"FunctionDefinition","src":"9256:83:15","nodes":[],"documentation":{"id":12328,"nodeType":"StructuredDocumentation","src":"9115:136:15","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"9265:8:15","parameters":{"id":12331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12330,"mutability":"mutable","name":"name","nameLocation":"9290:4:15","nodeType":"VariableDeclaration","scope":12335,"src":"9274:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12329,"name":"string","nodeType":"ElementaryTypeName","src":"9274:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9273:22:15"},"returnParameters":{"id":12334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12333,"mutability":"mutable","name":"value","nameLocation":"9332:5:15","nodeType":"VariableDeclaration","scope":12335,"src":"9319:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12332,"name":"bytes","nodeType":"ElementaryTypeName","src":"9319:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9318:20:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12346,"nodeType":"FunctionDefinition","src":"9520:108:15","nodes":[],"documentation":{"id":12336,"nodeType":"StructuredDocumentation","src":"9345:170:15","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"9529:8:15","parameters":{"id":12341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12338,"mutability":"mutable","name":"name","nameLocation":"9554:4:15","nodeType":"VariableDeclaration","scope":12346,"src":"9538:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12337,"name":"string","nodeType":"ElementaryTypeName","src":"9538:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12340,"mutability":"mutable","name":"delim","nameLocation":"9576:5:15","nodeType":"VariableDeclaration","scope":12346,"src":"9560:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12339,"name":"string","nodeType":"ElementaryTypeName","src":"9560:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9537:45:15"},"returnParameters":{"id":12345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12344,"mutability":"mutable","name":"value","nameLocation":"9621:5:15","nodeType":"VariableDeclaration","scope":12346,"src":"9606:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12342,"name":"bytes","nodeType":"ElementaryTypeName","src":"9606:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12343,"nodeType":"ArrayTypeName","src":"9606:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"9605:22:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12354,"nodeType":"FunctionDefinition","src":"9776:75:15","nodes":[],"documentation":{"id":12347,"nodeType":"StructuredDocumentation","src":"9634:137:15","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"9785:6:15","parameters":{"id":12350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12349,"mutability":"mutable","name":"name","nameLocation":"9808:4:15","nodeType":"VariableDeclaration","scope":12354,"src":"9792:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12348,"name":"string","nodeType":"ElementaryTypeName","src":"9792:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9791:22:15"},"returnParameters":{"id":12353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12352,"mutability":"mutable","name":"value","nameLocation":"9844:5:15","nodeType":"VariableDeclaration","scope":12354,"src":"9837:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12351,"name":"int256","nodeType":"ElementaryTypeName","src":"9837:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9836:14:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12365,"nodeType":"FunctionDefinition","src":"10033:107:15","nodes":[],"documentation":{"id":12355,"nodeType":"StructuredDocumentation","src":"9857:171:15","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"10042:6:15","parameters":{"id":12360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12357,"mutability":"mutable","name":"name","nameLocation":"10065:4:15","nodeType":"VariableDeclaration","scope":12365,"src":"10049:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12356,"name":"string","nodeType":"ElementaryTypeName","src":"10049:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12359,"mutability":"mutable","name":"delim","nameLocation":"10087:5:15","nodeType":"VariableDeclaration","scope":12365,"src":"10071:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12358,"name":"string","nodeType":"ElementaryTypeName","src":"10071:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10048:45:15"},"returnParameters":{"id":12364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12363,"mutability":"mutable","name":"value","nameLocation":"10133:5:15","nodeType":"VariableDeclaration","scope":12365,"src":"10117:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12361,"name":"int256","nodeType":"ElementaryTypeName","src":"10117:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12362,"nodeType":"ArrayTypeName","src":"10117:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"10116:23:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12375,"nodeType":"FunctionDefinition","src":"10331:91:15","nodes":[],"documentation":{"id":12366,"nodeType":"StructuredDocumentation","src":"10146:180:15","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"10340:5:15","parameters":{"id":12371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12368,"mutability":"mutable","name":"name","nameLocation":"10362:4:15","nodeType":"VariableDeclaration","scope":12375,"src":"10346:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12367,"name":"string","nodeType":"ElementaryTypeName","src":"10346:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12370,"mutability":"mutable","name":"defaultValue","nameLocation":"10373:12:15","nodeType":"VariableDeclaration","scope":12375,"src":"10368:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12369,"name":"bool","nodeType":"ElementaryTypeName","src":"10368:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10345:41:15"},"returnParameters":{"id":12374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12373,"mutability":"mutable","name":"value","nameLocation":"10415:5:15","nodeType":"VariableDeclaration","scope":12375,"src":"10410:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12372,"name":"bool","nodeType":"ElementaryTypeName","src":"10410:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10409:12:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12385,"nodeType":"FunctionDefinition","src":"10616:97:15","nodes":[],"documentation":{"id":12376,"nodeType":"StructuredDocumentation","src":"10428:183:15","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"10625:5:15","parameters":{"id":12381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12378,"mutability":"mutable","name":"name","nameLocation":"10647:4:15","nodeType":"VariableDeclaration","scope":12385,"src":"10631:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12377,"name":"string","nodeType":"ElementaryTypeName","src":"10631:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12380,"mutability":"mutable","name":"defaultValue","nameLocation":"10661:12:15","nodeType":"VariableDeclaration","scope":12385,"src":"10653:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12379,"name":"uint256","nodeType":"ElementaryTypeName","src":"10653:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10630:44:15"},"returnParameters":{"id":12384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12383,"mutability":"mutable","name":"value","nameLocation":"10706:5:15","nodeType":"VariableDeclaration","scope":12385,"src":"10698:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12382,"name":"uint256","nodeType":"ElementaryTypeName","src":"10698:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10697:15:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12399,"nodeType":"FunctionDefinition","src":"10941:164:15","nodes":[],"documentation":{"id":12386,"nodeType":"StructuredDocumentation","src":"10719:217:15","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"10950:5:15","parameters":{"id":12394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12388,"mutability":"mutable","name":"name","nameLocation":"10972:4:15","nodeType":"VariableDeclaration","scope":12399,"src":"10956:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12387,"name":"string","nodeType":"ElementaryTypeName","src":"10956:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12390,"mutability":"mutable","name":"delim","nameLocation":"10994:5:15","nodeType":"VariableDeclaration","scope":12399,"src":"10978:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12389,"name":"string","nodeType":"ElementaryTypeName","src":"10978:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12393,"mutability":"mutable","name":"defaultValue","nameLocation":"11020:12:15","nodeType":"VariableDeclaration","scope":12399,"src":"11001:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12391,"name":"address","nodeType":"ElementaryTypeName","src":"11001:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12392,"nodeType":"ArrayTypeName","src":"11001:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10955:78:15"},"returnParameters":{"id":12398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12397,"mutability":"mutable","name":"value","nameLocation":"11098:5:15","nodeType":"VariableDeclaration","scope":12399,"src":"11081:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":12395,"name":"address","nodeType":"ElementaryTypeName","src":"11081:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":12396,"nodeType":"ArrayTypeName","src":"11081:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"11080:24:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12413,"nodeType":"FunctionDefinition","src":"11333:164:15","nodes":[],"documentation":{"id":12400,"nodeType":"StructuredDocumentation","src":"11111:217:15","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11342:5:15","parameters":{"id":12408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12402,"mutability":"mutable","name":"name","nameLocation":"11364:4:15","nodeType":"VariableDeclaration","scope":12413,"src":"11348:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12401,"name":"string","nodeType":"ElementaryTypeName","src":"11348:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12404,"mutability":"mutable","name":"delim","nameLocation":"11386:5:15","nodeType":"VariableDeclaration","scope":12413,"src":"11370:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12403,"name":"string","nodeType":"ElementaryTypeName","src":"11370:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12407,"mutability":"mutable","name":"defaultValue","nameLocation":"11412:12:15","nodeType":"VariableDeclaration","scope":12413,"src":"11393:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11393:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12406,"nodeType":"ArrayTypeName","src":"11393:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"11347:78:15"},"returnParameters":{"id":12412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12411,"mutability":"mutable","name":"value","nameLocation":"11490:5:15","nodeType":"VariableDeclaration","scope":12413,"src":"11473:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12409,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11473:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12410,"nodeType":"ArrayTypeName","src":"11473:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"11472:24:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12427,"nodeType":"FunctionDefinition","src":"11724:162:15","nodes":[],"documentation":{"id":12414,"nodeType":"StructuredDocumentation","src":"11503:216:15","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11733:5:15","parameters":{"id":12422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12416,"mutability":"mutable","name":"name","nameLocation":"11755:4:15","nodeType":"VariableDeclaration","scope":12427,"src":"11739:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12415,"name":"string","nodeType":"ElementaryTypeName","src":"11739:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12418,"mutability":"mutable","name":"delim","nameLocation":"11777:5:15","nodeType":"VariableDeclaration","scope":12427,"src":"11761:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12417,"name":"string","nodeType":"ElementaryTypeName","src":"11761:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12421,"mutability":"mutable","name":"defaultValue","nameLocation":"11802:12:15","nodeType":"VariableDeclaration","scope":12427,"src":"11784:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12419,"name":"string","nodeType":"ElementaryTypeName","src":"11784:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12420,"nodeType":"ArrayTypeName","src":"11784:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"11738:77:15"},"returnParameters":{"id":12426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12425,"mutability":"mutable","name":"value","nameLocation":"11879:5:15","nodeType":"VariableDeclaration","scope":12427,"src":"11863:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12423,"name":"string","nodeType":"ElementaryTypeName","src":"11863:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12424,"nodeType":"ArrayTypeName","src":"11863:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"11862:23:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12441,"nodeType":"FunctionDefinition","src":"12112:160:15","nodes":[],"documentation":{"id":12428,"nodeType":"StructuredDocumentation","src":"11892:215:15","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12121:5:15","parameters":{"id":12436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12430,"mutability":"mutable","name":"name","nameLocation":"12143:4:15","nodeType":"VariableDeclaration","scope":12441,"src":"12127:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12429,"name":"string","nodeType":"ElementaryTypeName","src":"12127:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12432,"mutability":"mutable","name":"delim","nameLocation":"12165:5:15","nodeType":"VariableDeclaration","scope":12441,"src":"12149:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12431,"name":"string","nodeType":"ElementaryTypeName","src":"12149:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12435,"mutability":"mutable","name":"defaultValue","nameLocation":"12189:12:15","nodeType":"VariableDeclaration","scope":12441,"src":"12172:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12433,"name":"bytes","nodeType":"ElementaryTypeName","src":"12172:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12434,"nodeType":"ArrayTypeName","src":"12172:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12126:76:15"},"returnParameters":{"id":12440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12439,"mutability":"mutable","name":"value","nameLocation":"12265:5:15","nodeType":"VariableDeclaration","scope":12441,"src":"12250:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":12437,"name":"bytes","nodeType":"ElementaryTypeName","src":"12250:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":12438,"nodeType":"ArrayTypeName","src":"12250:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"12249:22:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12451,"nodeType":"FunctionDefinition","src":"12465:95:15","nodes":[],"documentation":{"id":12442,"nodeType":"StructuredDocumentation","src":"12278:182:15","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12474:5:15","parameters":{"id":12447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12444,"mutability":"mutable","name":"name","nameLocation":"12496:4:15","nodeType":"VariableDeclaration","scope":12451,"src":"12480:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12443,"name":"string","nodeType":"ElementaryTypeName","src":"12480:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12446,"mutability":"mutable","name":"defaultValue","nameLocation":"12509:12:15","nodeType":"VariableDeclaration","scope":12451,"src":"12502:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12445,"name":"int256","nodeType":"ElementaryTypeName","src":"12502:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"12479:43:15"},"returnParameters":{"id":12450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12449,"mutability":"mutable","name":"value","nameLocation":"12553:5:15","nodeType":"VariableDeclaration","scope":12451,"src":"12546:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":12448,"name":"int256","nodeType":"ElementaryTypeName","src":"12546:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"12545:14:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12461,"nodeType":"FunctionDefinition","src":"12754:97:15","nodes":[],"documentation":{"id":12452,"nodeType":"StructuredDocumentation","src":"12566:183:15","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12763:5:15","parameters":{"id":12457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12454,"mutability":"mutable","name":"name","nameLocation":"12785:4:15","nodeType":"VariableDeclaration","scope":12461,"src":"12769:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12453,"name":"string","nodeType":"ElementaryTypeName","src":"12769:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12456,"mutability":"mutable","name":"defaultValue","nameLocation":"12799:12:15","nodeType":"VariableDeclaration","scope":12461,"src":"12791:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12455,"name":"address","nodeType":"ElementaryTypeName","src":"12791:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12768:44:15"},"returnParameters":{"id":12460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12459,"mutability":"mutable","name":"value","nameLocation":"12844:5:15","nodeType":"VariableDeclaration","scope":12461,"src":"12836:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12458,"name":"address","nodeType":"ElementaryTypeName","src":"12836:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12835:15:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12471,"nodeType":"FunctionDefinition","src":"13045:97:15","nodes":[],"documentation":{"id":12462,"nodeType":"StructuredDocumentation","src":"12857:183:15","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13054:5:15","parameters":{"id":12467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12464,"mutability":"mutable","name":"name","nameLocation":"13076:4:15","nodeType":"VariableDeclaration","scope":12471,"src":"13060:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12463,"name":"string","nodeType":"ElementaryTypeName","src":"13060:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12466,"mutability":"mutable","name":"defaultValue","nameLocation":"13090:12:15","nodeType":"VariableDeclaration","scope":12471,"src":"13082:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13082:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13059:44:15"},"returnParameters":{"id":12470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12469,"mutability":"mutable","name":"value","nameLocation":"13135:5:15","nodeType":"VariableDeclaration","scope":12471,"src":"13127:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13127:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"13126:15:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12481,"nodeType":"FunctionDefinition","src":"13335:111:15","nodes":[],"documentation":{"id":12472,"nodeType":"StructuredDocumentation","src":"13148:182:15","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13344:5:15","parameters":{"id":12477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12474,"mutability":"mutable","name":"name","nameLocation":"13366:4:15","nodeType":"VariableDeclaration","scope":12481,"src":"13350:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12473,"name":"string","nodeType":"ElementaryTypeName","src":"13350:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12476,"mutability":"mutable","name":"defaultValue","nameLocation":"13388:12:15","nodeType":"VariableDeclaration","scope":12481,"src":"13372:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12475,"name":"string","nodeType":"ElementaryTypeName","src":"13372:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13349:52:15"},"returnParameters":{"id":12480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12479,"mutability":"mutable","name":"value","nameLocation":"13439:5:15","nodeType":"VariableDeclaration","scope":12481,"src":"13425:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12478,"name":"string","nodeType":"ElementaryTypeName","src":"13425:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13424:21:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12491,"nodeType":"FunctionDefinition","src":"13638:109:15","nodes":[],"documentation":{"id":12482,"nodeType":"StructuredDocumentation","src":"13452:181:15","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13647:5:15","parameters":{"id":12487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12484,"mutability":"mutable","name":"name","nameLocation":"13669:4:15","nodeType":"VariableDeclaration","scope":12491,"src":"13653:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12483,"name":"string","nodeType":"ElementaryTypeName","src":"13653:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12486,"mutability":"mutable","name":"defaultValue","nameLocation":"13690:12:15","nodeType":"VariableDeclaration","scope":12491,"src":"13675:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12485,"name":"bytes","nodeType":"ElementaryTypeName","src":"13675:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13652:51:15"},"returnParameters":{"id":12490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12489,"mutability":"mutable","name":"value","nameLocation":"13740:5:15","nodeType":"VariableDeclaration","scope":12491,"src":"13727:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12488,"name":"bytes","nodeType":"ElementaryTypeName","src":"13727:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13726:20:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12505,"nodeType":"FunctionDefinition","src":"13972:158:15","nodes":[],"documentation":{"id":12492,"nodeType":"StructuredDocumentation","src":"13753:214:15","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13981:5:15","parameters":{"id":12500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12494,"mutability":"mutable","name":"name","nameLocation":"14003:4:15","nodeType":"VariableDeclaration","scope":12505,"src":"13987:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12493,"name":"string","nodeType":"ElementaryTypeName","src":"13987:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12496,"mutability":"mutable","name":"delim","nameLocation":"14025:5:15","nodeType":"VariableDeclaration","scope":12505,"src":"14009:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12495,"name":"string","nodeType":"ElementaryTypeName","src":"14009:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12499,"mutability":"mutable","name":"defaultValue","nameLocation":"14048:12:15","nodeType":"VariableDeclaration","scope":12505,"src":"14032:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12497,"name":"bool","nodeType":"ElementaryTypeName","src":"14032:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12498,"nodeType":"ArrayTypeName","src":"14032:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"13986:75:15"},"returnParameters":{"id":12504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12503,"mutability":"mutable","name":"value","nameLocation":"14123:5:15","nodeType":"VariableDeclaration","scope":12505,"src":"14109:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":12501,"name":"bool","nodeType":"ElementaryTypeName","src":"14109:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":12502,"nodeType":"ArrayTypeName","src":"14109:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"14108:21:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12519,"nodeType":"FunctionDefinition","src":"14358:164:15","nodes":[],"documentation":{"id":12506,"nodeType":"StructuredDocumentation","src":"14136:217:15","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14367:5:15","parameters":{"id":12514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12508,"mutability":"mutable","name":"name","nameLocation":"14389:4:15","nodeType":"VariableDeclaration","scope":12519,"src":"14373:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12507,"name":"string","nodeType":"ElementaryTypeName","src":"14373:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12510,"mutability":"mutable","name":"delim","nameLocation":"14411:5:15","nodeType":"VariableDeclaration","scope":12519,"src":"14395:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12509,"name":"string","nodeType":"ElementaryTypeName","src":"14395:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12513,"mutability":"mutable","name":"defaultValue","nameLocation":"14437:12:15","nodeType":"VariableDeclaration","scope":12519,"src":"14418:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12511,"name":"uint256","nodeType":"ElementaryTypeName","src":"14418:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12512,"nodeType":"ArrayTypeName","src":"14418:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14372:78:15"},"returnParameters":{"id":12518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12517,"mutability":"mutable","name":"value","nameLocation":"14515:5:15","nodeType":"VariableDeclaration","scope":12519,"src":"14498:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12515,"name":"uint256","nodeType":"ElementaryTypeName","src":"14498:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12516,"nodeType":"ArrayTypeName","src":"14498:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"14497:24:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12533,"nodeType":"FunctionDefinition","src":"14749:162:15","nodes":[],"documentation":{"id":12520,"nodeType":"StructuredDocumentation","src":"14528:216:15","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14758:5:15","parameters":{"id":12528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12522,"mutability":"mutable","name":"name","nameLocation":"14780:4:15","nodeType":"VariableDeclaration","scope":12533,"src":"14764:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12521,"name":"string","nodeType":"ElementaryTypeName","src":"14764:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12524,"mutability":"mutable","name":"delim","nameLocation":"14802:5:15","nodeType":"VariableDeclaration","scope":12533,"src":"14786:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12523,"name":"string","nodeType":"ElementaryTypeName","src":"14786:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12527,"mutability":"mutable","name":"defaultValue","nameLocation":"14827:12:15","nodeType":"VariableDeclaration","scope":12533,"src":"14809:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12525,"name":"int256","nodeType":"ElementaryTypeName","src":"14809:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12526,"nodeType":"ArrayTypeName","src":"14809:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"14763:77:15"},"returnParameters":{"id":12532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12531,"mutability":"mutable","name":"value","nameLocation":"14904:5:15","nodeType":"VariableDeclaration","scope":12533,"src":"14888:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":12529,"name":"int256","nodeType":"ElementaryTypeName","src":"14888:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":12530,"nodeType":"ArrayTypeName","src":"14888:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"14887:23:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12541,"nodeType":"FunctionDefinition","src":"15059:85:15","nodes":[],"documentation":{"id":12534,"nodeType":"StructuredDocumentation","src":"14917:137:15","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"15068:9:15","parameters":{"id":12537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12536,"mutability":"mutable","name":"name","nameLocation":"15094:4:15","nodeType":"VariableDeclaration","scope":12541,"src":"15078:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12535,"name":"string","nodeType":"ElementaryTypeName","src":"15078:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15077:22:15"},"returnParameters":{"id":12540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12539,"mutability":"mutable","name":"value","nameLocation":"15137:5:15","nodeType":"VariableDeclaration","scope":12541,"src":"15123:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12538,"name":"string","nodeType":"ElementaryTypeName","src":"15123:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15122:21:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12552,"nodeType":"FunctionDefinition","src":"15326:110:15","nodes":[],"documentation":{"id":12542,"nodeType":"StructuredDocumentation","src":"15150:171:15","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"15335:9:15","parameters":{"id":12547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12544,"mutability":"mutable","name":"name","nameLocation":"15361:4:15","nodeType":"VariableDeclaration","scope":12552,"src":"15345:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12543,"name":"string","nodeType":"ElementaryTypeName","src":"15345:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12546,"mutability":"mutable","name":"delim","nameLocation":"15383:5:15","nodeType":"VariableDeclaration","scope":12552,"src":"15367:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12545,"name":"string","nodeType":"ElementaryTypeName","src":"15367:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15344:45:15"},"returnParameters":{"id":12551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12550,"mutability":"mutable","name":"value","nameLocation":"15429:5:15","nodeType":"VariableDeclaration","scope":12552,"src":"15413:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12548,"name":"string","nodeType":"ElementaryTypeName","src":"15413:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12549,"nodeType":"ArrayTypeName","src":"15413:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"15412:23:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12560,"nodeType":"FunctionDefinition","src":"15585:77:15","nodes":[],"documentation":{"id":12553,"nodeType":"StructuredDocumentation","src":"15442:138:15","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"15594:7:15","parameters":{"id":12556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12555,"mutability":"mutable","name":"name","nameLocation":"15618:4:15","nodeType":"VariableDeclaration","scope":12560,"src":"15602:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12554,"name":"string","nodeType":"ElementaryTypeName","src":"15602:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15601:22:15"},"returnParameters":{"id":12559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12558,"mutability":"mutable","name":"value","nameLocation":"15655:5:15","nodeType":"VariableDeclaration","scope":12560,"src":"15647:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12557,"name":"uint256","nodeType":"ElementaryTypeName","src":"15647:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15646:15:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12571,"nodeType":"FunctionDefinition","src":"15845:109:15","nodes":[],"documentation":{"id":12561,"nodeType":"StructuredDocumentation","src":"15668:172:15","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"15854:7:15","parameters":{"id":12566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12563,"mutability":"mutable","name":"name","nameLocation":"15878:4:15","nodeType":"VariableDeclaration","scope":12571,"src":"15862:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12562,"name":"string","nodeType":"ElementaryTypeName","src":"15862:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12565,"mutability":"mutable","name":"delim","nameLocation":"15900:5:15","nodeType":"VariableDeclaration","scope":12571,"src":"15884:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12564,"name":"string","nodeType":"ElementaryTypeName","src":"15884:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"15861:45:15"},"returnParameters":{"id":12570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12569,"mutability":"mutable","name":"value","nameLocation":"15947:5:15","nodeType":"VariableDeclaration","scope":12571,"src":"15930:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":12567,"name":"uint256","nodeType":"ElementaryTypeName","src":"15930:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":12568,"nodeType":"ArrayTypeName","src":"15930:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15929:24:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12579,"nodeType":"FunctionDefinition","src":"15996:70:15","nodes":[],"documentation":{"id":12572,"nodeType":"StructuredDocumentation","src":"15960:31:15","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"16005:6:15","parameters":{"id":12577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12574,"mutability":"mutable","name":"name","nameLocation":"16028:4:15","nodeType":"VariableDeclaration","scope":12579,"src":"16012:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12573,"name":"string","nodeType":"ElementaryTypeName","src":"16012:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12576,"mutability":"mutable","name":"value","nameLocation":"16050:5:15","nodeType":"VariableDeclaration","scope":12579,"src":"16034:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12575,"name":"string","nodeType":"ElementaryTypeName","src":"16034:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16011:45:15"},"returnParameters":{"id":12578,"nodeType":"ParameterList","parameters":[],"src":"16065:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12591,"nodeType":"FunctionDefinition","src":"16198:109:15","nodes":[],"documentation":{"id":12580,"nodeType":"StructuredDocumentation","src":"16102:91:15","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"16207:8:15","parameters":{"id":12583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12582,"mutability":"mutable","name":"target","nameLocation":"16224:6:15","nodeType":"VariableDeclaration","scope":12591,"src":"16216:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12581,"name":"address","nodeType":"ElementaryTypeName","src":"16216:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16215:16:15"},"returnParameters":{"id":12590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12586,"mutability":"mutable","name":"readSlots","nameLocation":"16267:9:15","nodeType":"VariableDeclaration","scope":12591,"src":"16250:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16250:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12585,"nodeType":"ArrayTypeName","src":"16250:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12589,"mutability":"mutable","name":"writeSlots","nameLocation":"16295:10:15","nodeType":"VariableDeclaration","scope":12591,"src":"16278:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16278:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12588,"nodeType":"ArrayTypeName","src":"16278:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16249:57:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12599,"nodeType":"FunctionDefinition","src":"16363:74:15","nodes":[],"documentation":{"id":12592,"nodeType":"StructuredDocumentation","src":"16313:45:15","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"16372:4:15","parameters":{"id":12595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12594,"mutability":"mutable","name":"privateKey","nameLocation":"16385:10:15","nodeType":"VariableDeclaration","scope":12599,"src":"16377:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12593,"name":"uint256","nodeType":"ElementaryTypeName","src":"16377:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16376:20:15"},"returnParameters":{"id":12598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12597,"mutability":"mutable","name":"keyAddr","nameLocation":"16428:7:15","nodeType":"VariableDeclaration","scope":12599,"src":"16420:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12596,"name":"address","nodeType":"ElementaryTypeName","src":"16420:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16419:17:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12616,"nodeType":"FunctionDefinition","src":"16500:160:15","nodes":[],"documentation":{"id":12600,"nodeType":"StructuredDocumentation","src":"16443:52:15","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"16509:11:15","parameters":{"id":12610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12602,"mutability":"mutable","name":"fromBlock","nameLocation":"16529:9:15","nodeType":"VariableDeclaration","scope":12616,"src":"16521:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12601,"name":"uint256","nodeType":"ElementaryTypeName","src":"16521:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12604,"mutability":"mutable","name":"toBlock","nameLocation":"16548:7:15","nodeType":"VariableDeclaration","scope":12616,"src":"16540:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12603,"name":"uint256","nodeType":"ElementaryTypeName","src":"16540:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12606,"mutability":"mutable","name":"target","nameLocation":"16565:6:15","nodeType":"VariableDeclaration","scope":12616,"src":"16557:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12605,"name":"address","nodeType":"ElementaryTypeName","src":"16557:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12609,"mutability":"mutable","name":"topics","nameLocation":"16592:6:15","nodeType":"VariableDeclaration","scope":12616,"src":"16573:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12607,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16573:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12608,"nodeType":"ArrayTypeName","src":"16573:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"16520:79:15"},"returnParameters":{"id":12615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12614,"mutability":"mutable","name":"logs","nameLocation":"16654:4:15","nodeType":"VariableDeclaration","scope":12616,"src":"16634:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12172_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":12612,"nodeType":"UserDefinedTypeName","pathNode":{"id":12611,"name":"EthGetLogs","nameLocations":["16634:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":12172,"src":"16634:10:15"},"referencedDeclaration":12172,"src":"16634:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$12172_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":12613,"nodeType":"ArrayTypeName","src":"16634:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12172_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"16633:26:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12622,"nodeType":"FunctionDefinition","src":"16975:65:15","nodes":[],"documentation":{"id":12617,"nodeType":"StructuredDocumentation","src":"16666:304:15","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"16984:14:15","parameters":{"id":12618,"nodeType":"ParameterList","parameters":[],"src":"16998:2:15"},"returnParameters":{"id":12621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12620,"mutability":"mutable","name":"height","nameLocation":"17032:6:15","nodeType":"VariableDeclaration","scope":12622,"src":"17024:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12619,"name":"uint256","nodeType":"ElementaryTypeName","src":"17024:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17023:16:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12628,"nodeType":"FunctionDefinition","src":"17364:71:15","nodes":[],"documentation":{"id":12623,"nodeType":"StructuredDocumentation","src":"17046:313:15","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"17373:17:15","parameters":{"id":12624,"nodeType":"ParameterList","parameters":[],"src":"17390:2:15"},"returnParameters":{"id":12627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12626,"mutability":"mutable","name":"timestamp","nameLocation":"17424:9:15","nodeType":"VariableDeclaration","scope":12628,"src":"17416:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12625,"name":"uint256","nodeType":"ElementaryTypeName","src":"17416:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17415:19:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12642,"nodeType":"FunctionDefinition","src":"17528:146:15","nodes":[],"documentation":{"id":12629,"nodeType":"StructuredDocumentation","src":"17441:82:15","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"17537:24:15","parameters":{"id":12634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12631,"mutability":"mutable","name":"target","nameLocation":"17570:6:15","nodeType":"VariableDeclaration","scope":12642,"src":"17562:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12630,"name":"address","nodeType":"ElementaryTypeName","src":"17562:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12633,"mutability":"mutable","name":"elementSlot","nameLocation":"17586:11:15","nodeType":"VariableDeclaration","scope":12642,"src":"17578:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12632,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17578:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17561:37:15"},"returnParameters":{"id":12641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12636,"mutability":"mutable","name":"found","nameLocation":"17638:5:15","nodeType":"VariableDeclaration","scope":12642,"src":"17633:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12635,"name":"bool","nodeType":"ElementaryTypeName","src":"17633:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12638,"mutability":"mutable","name":"key","nameLocation":"17653:3:15","nodeType":"VariableDeclaration","scope":12642,"src":"17645:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12637,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17645:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12640,"mutability":"mutable","name":"parent","nameLocation":"17666:6:15","nodeType":"VariableDeclaration","scope":12642,"src":"17658:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12639,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17658:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17632:41:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12652,"nodeType":"FunctionDefinition","src":"17771:97:15","nodes":[],"documentation":{"id":12643,"nodeType":"StructuredDocumentation","src":"17680:86:15","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"17780:16:15","parameters":{"id":12648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12645,"mutability":"mutable","name":"target","nameLocation":"17805:6:15","nodeType":"VariableDeclaration","scope":12652,"src":"17797:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12644,"name":"address","nodeType":"ElementaryTypeName","src":"17797:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12647,"mutability":"mutable","name":"mappingSlot","nameLocation":"17821:11:15","nodeType":"VariableDeclaration","scope":12652,"src":"17813:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12646,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17813:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17796:37:15"},"returnParameters":{"id":12651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12650,"mutability":"mutable","name":"length","nameLocation":"17860:6:15","nodeType":"VariableDeclaration","scope":12652,"src":"17852:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12649,"name":"uint256","nodeType":"ElementaryTypeName","src":"17852:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17851:16:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12664,"nodeType":"FunctionDefinition","src":"18072:109:15","nodes":[],"documentation":{"id":12653,"nodeType":"StructuredDocumentation","src":"17874:193:15","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"18081:16:15","parameters":{"id":12660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12655,"mutability":"mutable","name":"target","nameLocation":"18106:6:15","nodeType":"VariableDeclaration","scope":12664,"src":"18098:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12654,"name":"address","nodeType":"ElementaryTypeName","src":"18098:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12657,"mutability":"mutable","name":"mappingSlot","nameLocation":"18122:11:15","nodeType":"VariableDeclaration","scope":12664,"src":"18114:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18114:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12659,"mutability":"mutable","name":"idx","nameLocation":"18143:3:15","nodeType":"VariableDeclaration","scope":12664,"src":"18135:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12658,"name":"uint256","nodeType":"ElementaryTypeName","src":"18135:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18097:50:15"},"returnParameters":{"id":12663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12662,"mutability":"mutable","name":"value","nameLocation":"18174:5:15","nodeType":"VariableDeclaration","scope":12664,"src":"18166:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18166:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18165:15:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12672,"nodeType":"FunctionDefinition","src":"18225:72:15","nodes":[],"documentation":{"id":12665,"nodeType":"StructuredDocumentation","src":"18187:33:15","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"18234:8:15","parameters":{"id":12668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12667,"mutability":"mutable","name":"account","nameLocation":"18251:7:15","nodeType":"VariableDeclaration","scope":12672,"src":"18243:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12666,"name":"address","nodeType":"ElementaryTypeName","src":"18243:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18242:17:15"},"returnParameters":{"id":12671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12670,"mutability":"mutable","name":"nonce","nameLocation":"18290:5:15","nodeType":"VariableDeclaration","scope":12672,"src":"18283:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12669,"name":"uint64","nodeType":"ElementaryTypeName","src":"18283:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"18282:14:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12680,"nodeType":"FunctionDefinition","src":"18339:64:15","nodes":[],"documentation":{"id":12673,"nodeType":"StructuredDocumentation","src":"18303:31:15","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"18348:15:15","parameters":{"id":12674,"nodeType":"ParameterList","parameters":[],"src":"18363:2:15"},"returnParameters":{"id":12679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12678,"mutability":"mutable","name":"logs","nameLocation":"18397:4:15","nodeType":"VariableDeclaration","scope":12680,"src":"18384:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12145_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":12676,"nodeType":"UserDefinedTypeName","pathNode":{"id":12675,"name":"Log","nameLocations":["18384:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":12145,"src":"18384:3:15"},"referencedDeclaration":12145,"src":"18384:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$12145_storage_ptr","typeString":"struct VmSafe.Log"}},"id":12677,"nodeType":"ArrayTypeName","src":"18384:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12145_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"18383:19:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12690,"nodeType":"FunctionDefinition","src":"18455:81:15","nodes":[],"documentation":{"id":12681,"nodeType":"StructuredDocumentation","src":"18409:41:15","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"18464:4:15","parameters":{"id":12686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12683,"mutability":"mutable","name":"target","nameLocation":"18477:6:15","nodeType":"VariableDeclaration","scope":12690,"src":"18469:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12682,"name":"address","nodeType":"ElementaryTypeName","src":"18469:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12685,"mutability":"mutable","name":"slot","nameLocation":"18493:4:15","nodeType":"VariableDeclaration","scope":12690,"src":"18485:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18485:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18468:30:15"},"returnParameters":{"id":12689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12688,"mutability":"mutable","name":"data","nameLocation":"18530:4:15","nodeType":"VariableDeclaration","scope":12690,"src":"18522:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12687,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18522:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"18521:14:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12694,"nodeType":"FunctionDefinition","src":"18627:37:15","nodes":[],"documentation":{"id":12691,"nodeType":"StructuredDocumentation","src":"18542:80:15","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"18636:16:15","parameters":{"id":12692,"nodeType":"ParameterList","parameters":[],"src":"18652:2:15"},"returnParameters":{"id":12693,"nodeType":"ParameterList","parameters":[],"src":"18663:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12698,"nodeType":"FunctionDefinition","src":"18716:27:15","nodes":[],"documentation":{"id":12695,"nodeType":"StructuredDocumentation","src":"18670:41:15","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"18725:6:15","parameters":{"id":12696,"nodeType":"ParameterList","parameters":[],"src":"18731:2:15"},"returnParameters":{"id":12697,"nodeType":"ParameterList","parameters":[],"src":"18742:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12702,"nodeType":"FunctionDefinition","src":"18790:31:15","nodes":[],"documentation":{"id":12699,"nodeType":"StructuredDocumentation","src":"18749:36:15","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"18799:10:15","parameters":{"id":12700,"nodeType":"ParameterList","parameters":[],"src":"18809:2:15"},"returnParameters":{"id":12701,"nodeType":"ParameterList","parameters":[],"src":"18820:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12706,"nodeType":"FunctionDefinition","src":"18911:38:15","nodes":[],"documentation":{"id":12703,"nodeType":"StructuredDocumentation","src":"18827:79:15","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"18920:17:15","parameters":{"id":12704,"nodeType":"ParameterList","parameters":[],"src":"18937:2:15"},"returnParameters":{"id":12705,"nodeType":"ParameterList","parameters":[],"src":"18948:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12716,"nodeType":"FunctionDefinition","src":"19026:98:15","nodes":[],"documentation":{"id":12707,"nodeType":"StructuredDocumentation","src":"18955:66:15","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"19035:3:15","parameters":{"id":12712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12709,"mutability":"mutable","name":"method","nameLocation":"19055:6:15","nodeType":"VariableDeclaration","scope":12716,"src":"19039:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12708,"name":"string","nodeType":"ElementaryTypeName","src":"19039:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12711,"mutability":"mutable","name":"params","nameLocation":"19079:6:15","nodeType":"VariableDeclaration","scope":12716,"src":"19063:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12710,"name":"string","nodeType":"ElementaryTypeName","src":"19063:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"19038:48:15"},"returnParameters":{"id":12715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12714,"mutability":"mutable","name":"data","nameLocation":"19118:4:15","nodeType":"VariableDeclaration","scope":12716,"src":"19105:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12713,"name":"bytes","nodeType":"ElementaryTypeName","src":"19105:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19104:19:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12728,"nodeType":"FunctionDefinition","src":"19198:99:15","nodes":[],"documentation":{"id":12717,"nodeType":"StructuredDocumentation","src":"19130:63:15","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"19207:8:15","parameters":{"id":12722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12719,"mutability":"mutable","name":"privateKey","nameLocation":"19224:10:15","nodeType":"VariableDeclaration","scope":12728,"src":"19216:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12718,"name":"uint256","nodeType":"ElementaryTypeName","src":"19216:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12721,"mutability":"mutable","name":"digest","nameLocation":"19244:6:15","nodeType":"VariableDeclaration","scope":12728,"src":"19236:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12720,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19236:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19215:36:15"},"returnParameters":{"id":12727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12724,"mutability":"mutable","name":"r","nameLocation":"19283:1:15","nodeType":"VariableDeclaration","scope":12728,"src":"19275:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12723,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19275:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12726,"mutability":"mutable","name":"s","nameLocation":"19294:1:15","nodeType":"VariableDeclaration","scope":12728,"src":"19286:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12725,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19286:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19274:22:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12742,"nodeType":"FunctionDefinition","src":"19371:104:15","nodes":[],"documentation":{"id":12729,"nodeType":"StructuredDocumentation","src":"19303:63:15","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"19380:4:15","parameters":{"id":12734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12731,"mutability":"mutable","name":"privateKey","nameLocation":"19393:10:15","nodeType":"VariableDeclaration","scope":12742,"src":"19385:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12730,"name":"uint256","nodeType":"ElementaryTypeName","src":"19385:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12733,"mutability":"mutable","name":"digest","nameLocation":"19413:6:15","nodeType":"VariableDeclaration","scope":12742,"src":"19405:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19405:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19384:36:15"},"returnParameters":{"id":12741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12736,"mutability":"mutable","name":"v","nameLocation":"19450:1:15","nodeType":"VariableDeclaration","scope":12742,"src":"19444:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":12735,"name":"uint8","nodeType":"ElementaryTypeName","src":"19444:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":12738,"mutability":"mutable","name":"r","nameLocation":"19461:1:15","nodeType":"VariableDeclaration","scope":12742,"src":"19453:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12737,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19453:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12740,"mutability":"mutable","name":"s","nameLocation":"19472:1:15","nodeType":"VariableDeclaration","scope":12742,"src":"19464:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12739,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19464:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19443:31:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":12746,"nodeType":"FunctionDefinition","src":"19543:42:15","nodes":[],"documentation":{"id":12743,"nodeType":"StructuredDocumentation","src":"19481:57:15","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"19552:21:15","parameters":{"id":12744,"nodeType":"ParameterList","parameters":[],"src":"19573:2:15"},"returnParameters":{"id":12745,"nodeType":"ParameterList","parameters":[],"src":"19584:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12750,"nodeType":"FunctionDefinition","src":"19729:44:15","nodes":[],"documentation":{"id":12747,"nodeType":"StructuredDocumentation","src":"19591:133:15","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"19738:23:15","parameters":{"id":12748,"nodeType":"ParameterList","parameters":[],"src":"19761:2:15"},"returnParameters":{"id":12749,"nodeType":"ParameterList","parameters":[],"src":"19772:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12758,"nodeType":"FunctionDefinition","src":"19881:92:15","nodes":[],"documentation":{"id":12751,"nodeType":"StructuredDocumentation","src":"19779:97:15","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"19890:22:15","parameters":{"id":12752,"nodeType":"ParameterList","parameters":[],"src":"19912:2:15"},"returnParameters":{"id":12757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12756,"mutability":"mutable","name":"accountAccesses","nameLocation":"19956:15:15","nodeType":"VariableDeclaration","scope":12758,"src":"19933:38:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12256_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":12754,"nodeType":"UserDefinedTypeName","pathNode":{"id":12753,"name":"AccountAccess","nameLocations":["19933:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":12256,"src":"19933:13:15"},"referencedDeclaration":12256,"src":"19933:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$12256_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":12755,"nodeType":"ArrayTypeName","src":"19933:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$12256_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"19932:40:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12762,"nodeType":"FunctionDefinition","src":"20069:41:15","nodes":[],"documentation":{"id":12759,"nodeType":"StructuredDocumentation","src":"19979:85:15","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"20078:20:15","parameters":{"id":12760,"nodeType":"ParameterList","parameters":[],"src":"20098:2:15"},"returnParameters":{"id":12761,"nodeType":"ParameterList","parameters":[],"src":"20109:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12768,"nodeType":"FunctionDefinition","src":"20309:50:15","nodes":[],"documentation":{"id":12763,"nodeType":"StructuredDocumentation","src":"20153:151:15","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"20318:9:15","parameters":{"id":12766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12765,"mutability":"mutable","name":"path","nameLocation":"20344:4:15","nodeType":"VariableDeclaration","scope":12768,"src":"20328:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12764,"name":"string","nodeType":"ElementaryTypeName","src":"20328:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20327:22:15"},"returnParameters":{"id":12767,"nodeType":"ParameterList","parameters":[],"src":"20358:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12778,"nodeType":"FunctionDefinition","src":"20674:93:15","nodes":[],"documentation":{"id":12769,"nodeType":"StructuredDocumentation","src":"20365:304:15","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"20683:8:15","parameters":{"id":12774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12771,"mutability":"mutable","name":"from","nameLocation":"20708:4:15","nodeType":"VariableDeclaration","scope":12778,"src":"20692:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12770,"name":"string","nodeType":"ElementaryTypeName","src":"20692:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12773,"mutability":"mutable","name":"to","nameLocation":"20730:2:15","nodeType":"VariableDeclaration","scope":12778,"src":"20714:18:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12772,"name":"string","nodeType":"ElementaryTypeName","src":"20714:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"20691:42:15"},"returnParameters":{"id":12777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12776,"mutability":"mutable","name":"copied","nameLocation":"20759:6:15","nodeType":"VariableDeclaration","scope":12778,"src":"20752:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12775,"name":"uint64","nodeType":"ElementaryTypeName","src":"20752:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"20751:15:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12786,"nodeType":"FunctionDefinition","src":"21172:66:15","nodes":[],"documentation":{"id":12779,"nodeType":"StructuredDocumentation","src":"20773:394:15","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"21181:9:15","parameters":{"id":12784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12781,"mutability":"mutable","name":"path","nameLocation":"21207:4:15","nodeType":"VariableDeclaration","scope":12786,"src":"21191:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12780,"name":"string","nodeType":"ElementaryTypeName","src":"21191:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12783,"mutability":"mutable","name":"recursive","nameLocation":"21218:9:15","nodeType":"VariableDeclaration","scope":12786,"src":"21213:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12782,"name":"bool","nodeType":"ElementaryTypeName","src":"21213:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21190:38:15"},"returnParameters":{"id":12785,"nodeType":"ParameterList","parameters":[],"src":"21237:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12794,"nodeType":"FunctionDefinition","src":"21333:69:15","nodes":[],"documentation":{"id":12787,"nodeType":"StructuredDocumentation","src":"21244:84:15","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"21342:6:15","parameters":{"id":12790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12789,"mutability":"mutable","name":"path","nameLocation":"21365:4:15","nodeType":"VariableDeclaration","scope":12794,"src":"21349:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12788,"name":"string","nodeType":"ElementaryTypeName","src":"21349:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21348:22:15"},"returnParameters":{"id":12793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12792,"mutability":"mutable","name":"result","nameLocation":"21394:6:15","nodeType":"VariableDeclaration","scope":12794,"src":"21389:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12791,"name":"bool","nodeType":"ElementaryTypeName","src":"21389:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21388:13:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12803,"nodeType":"FunctionDefinition","src":"21467:84:15","nodes":[],"documentation":{"id":12795,"nodeType":"StructuredDocumentation","src":"21408:54:15","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"21476:3:15","parameters":{"id":12799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12798,"mutability":"mutable","name":"commandInput","nameLocation":"21498:12:15","nodeType":"VariableDeclaration","scope":12803,"src":"21480:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12796,"name":"string","nodeType":"ElementaryTypeName","src":"21480:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12797,"nodeType":"ArrayTypeName","src":"21480:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"21479:32:15"},"returnParameters":{"id":12802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12801,"mutability":"mutable","name":"result","nameLocation":"21543:6:15","nodeType":"VariableDeclaration","scope":12803,"src":"21530:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12800,"name":"bytes","nodeType":"ElementaryTypeName","src":"21530:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21529:21:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12812,"nodeType":"FunctionDefinition","src":"21650:93:15","nodes":[],"documentation":{"id":12804,"nodeType":"StructuredDocumentation","src":"21557:88:15","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"21659:10:15","parameters":{"id":12807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12806,"mutability":"mutable","name":"path","nameLocation":"21686:4:15","nodeType":"VariableDeclaration","scope":12812,"src":"21670:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12805,"name":"string","nodeType":"ElementaryTypeName","src":"21670:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21669:22:15"},"returnParameters":{"id":12811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12810,"mutability":"mutable","name":"metadata","nameLocation":"21733:8:15","nodeType":"VariableDeclaration","scope":12812,"src":"21715:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$12200_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":12809,"nodeType":"UserDefinedTypeName","pathNode":{"id":12808,"name":"FsMetadata","nameLocations":["21715:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":12200,"src":"21715:10:15"},"referencedDeclaration":12200,"src":"21715:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$12200_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"21714:28:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12820,"nodeType":"FunctionDefinition","src":"21852:101:15","nodes":[],"documentation":{"id":12813,"nodeType":"StructuredDocumentation","src":"21749:98:15","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"21861:7:15","parameters":{"id":12816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12815,"mutability":"mutable","name":"artifactPath","nameLocation":"21885:12:15","nodeType":"VariableDeclaration","scope":12820,"src":"21869:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12814,"name":"string","nodeType":"ElementaryTypeName","src":"21869:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21868:30:15"},"returnParameters":{"id":12819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12818,"mutability":"mutable","name":"creationBytecode","nameLocation":"21935:16:15","nodeType":"VariableDeclaration","scope":12820,"src":"21922:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12817,"name":"bytes","nodeType":"ElementaryTypeName","src":"21922:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21921:31:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12828,"nodeType":"FunctionDefinition","src":"22062:108:15","nodes":[],"documentation":{"id":12821,"nodeType":"StructuredDocumentation","src":"21959:98:15","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"22071:15:15","parameters":{"id":12824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12823,"mutability":"mutable","name":"artifactPath","nameLocation":"22103:12:15","nodeType":"VariableDeclaration","scope":12828,"src":"22087:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12822,"name":"string","nodeType":"ElementaryTypeName","src":"22087:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22086:30:15"},"returnParameters":{"id":12827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12826,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"22153:15:15","nodeType":"VariableDeclaration","scope":12828,"src":"22140:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12825,"name":"bytes","nodeType":"ElementaryTypeName","src":"22140:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"22139:30:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12836,"nodeType":"FunctionDefinition","src":"22276:68:15","nodes":[],"documentation":{"id":12829,"nodeType":"StructuredDocumentation","src":"22176:95:15","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"22285:5:15","parameters":{"id":12832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12831,"mutability":"mutable","name":"path","nameLocation":"22307:4:15","nodeType":"VariableDeclaration","scope":12836,"src":"22291:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12830,"name":"string","nodeType":"ElementaryTypeName","src":"22291:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22290:22:15"},"returnParameters":{"id":12835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12834,"mutability":"mutable","name":"result","nameLocation":"22336:6:15","nodeType":"VariableDeclaration","scope":12836,"src":"22331:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12833,"name":"bool","nodeType":"ElementaryTypeName","src":"22331:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22330:13:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12844,"nodeType":"FunctionDefinition","src":"22453:69:15","nodes":[],"documentation":{"id":12837,"nodeType":"StructuredDocumentation","src":"22350:98:15","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"22462:6:15","parameters":{"id":12840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12839,"mutability":"mutable","name":"path","nameLocation":"22485:4:15","nodeType":"VariableDeclaration","scope":12844,"src":"22469:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12838,"name":"string","nodeType":"ElementaryTypeName","src":"22469:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22468:22:15"},"returnParameters":{"id":12843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12842,"mutability":"mutable","name":"result","nameLocation":"22514:6:15","nodeType":"VariableDeclaration","scope":12844,"src":"22509:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12841,"name":"bool","nodeType":"ElementaryTypeName","src":"22509:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"22508:13:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12850,"nodeType":"FunctionDefinition","src":"22578:66:15","nodes":[],"documentation":{"id":12845,"nodeType":"StructuredDocumentation","src":"22528:45:15","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"22587:11:15","parameters":{"id":12846,"nodeType":"ParameterList","parameters":[],"src":"22598:2:15"},"returnParameters":{"id":12849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12848,"mutability":"mutable","name":"path","nameLocation":"22638:4:15","nodeType":"VariableDeclaration","scope":12850,"src":"22624:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12847,"name":"string","nodeType":"ElementaryTypeName","src":"22624:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22623:20:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12860,"nodeType":"FunctionDefinition","src":"22892:89:15","nodes":[],"documentation":{"id":12851,"nodeType":"StructuredDocumentation","src":"22650:237:15","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"22901:7:15","parameters":{"id":12854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12853,"mutability":"mutable","name":"path","nameLocation":"22925:4:15","nodeType":"VariableDeclaration","scope":12860,"src":"22909:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12852,"name":"string","nodeType":"ElementaryTypeName","src":"22909:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"22908:22:15"},"returnParameters":{"id":12859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12858,"mutability":"mutable","name":"entries","nameLocation":"22972:7:15","nodeType":"VariableDeclaration","scope":12860,"src":"22954:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12184_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":12856,"nodeType":"UserDefinedTypeName","pathNode":{"id":12855,"name":"DirEntry","nameLocations":["22954:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":12184,"src":"22954:8:15"},"referencedDeclaration":12184,"src":"22954:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12184_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":12857,"nodeType":"ArrayTypeName","src":"22954:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12184_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"22953:27:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12872,"nodeType":"FunctionDefinition","src":"23018:106:15","nodes":[],"documentation":{"id":12861,"nodeType":"StructuredDocumentation","src":"22987:26:15","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"23027:7:15","parameters":{"id":12866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12863,"mutability":"mutable","name":"path","nameLocation":"23051:4:15","nodeType":"VariableDeclaration","scope":12872,"src":"23035:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12862,"name":"string","nodeType":"ElementaryTypeName","src":"23035:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12865,"mutability":"mutable","name":"maxDepth","nameLocation":"23064:8:15","nodeType":"VariableDeclaration","scope":12872,"src":"23057:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12864,"name":"uint64","nodeType":"ElementaryTypeName","src":"23057:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"23034:39:15"},"returnParameters":{"id":12871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12870,"mutability":"mutable","name":"entries","nameLocation":"23115:7:15","nodeType":"VariableDeclaration","scope":12872,"src":"23097:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12184_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":12868,"nodeType":"UserDefinedTypeName","pathNode":{"id":12867,"name":"DirEntry","nameLocations":["23097:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":12184,"src":"23097:8:15"},"referencedDeclaration":12184,"src":"23097:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12184_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":12869,"nodeType":"ArrayTypeName","src":"23097:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12184_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"23096:27:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12886,"nodeType":"FunctionDefinition","src":"23161:148:15","nodes":[],"documentation":{"id":12873,"nodeType":"StructuredDocumentation","src":"23130:26:15","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"23170:7:15","parameters":{"id":12880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12875,"mutability":"mutable","name":"path","nameLocation":"23194:4:15","nodeType":"VariableDeclaration","scope":12886,"src":"23178:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12874,"name":"string","nodeType":"ElementaryTypeName","src":"23178:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12877,"mutability":"mutable","name":"maxDepth","nameLocation":"23207:8:15","nodeType":"VariableDeclaration","scope":12886,"src":"23200:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12876,"name":"uint64","nodeType":"ElementaryTypeName","src":"23200:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12879,"mutability":"mutable","name":"followLinks","nameLocation":"23222:11:15","nodeType":"VariableDeclaration","scope":12886,"src":"23217:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12878,"name":"bool","nodeType":"ElementaryTypeName","src":"23217:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23177:57:15"},"returnParameters":{"id":12885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12884,"mutability":"mutable","name":"entries","nameLocation":"23300:7:15","nodeType":"VariableDeclaration","scope":12886,"src":"23282:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12184_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":12882,"nodeType":"UserDefinedTypeName","pathNode":{"id":12881,"name":"DirEntry","nameLocations":["23282:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":12184,"src":"23282:8:15"},"referencedDeclaration":12184,"src":"23282:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12184_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":12883,"nodeType":"ArrayTypeName","src":"23282:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12184_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"23281:27:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12894,"nodeType":"FunctionDefinition","src":"23407:83:15","nodes":[],"documentation":{"id":12887,"nodeType":"StructuredDocumentation","src":"23315:87:15","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"23416:8:15","parameters":{"id":12890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12889,"mutability":"mutable","name":"path","nameLocation":"23441:4:15","nodeType":"VariableDeclaration","scope":12894,"src":"23425:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12888,"name":"string","nodeType":"ElementaryTypeName","src":"23425:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23424:22:15"},"returnParameters":{"id":12893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12892,"mutability":"mutable","name":"data","nameLocation":"23484:4:15","nodeType":"VariableDeclaration","scope":12894,"src":"23470:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12891,"name":"string","nodeType":"ElementaryTypeName","src":"23470:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23469:20:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12902,"nodeType":"FunctionDefinition","src":"23588:88:15","nodes":[],"documentation":{"id":12895,"nodeType":"StructuredDocumentation","src":"23496:87:15","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"23597:14:15","parameters":{"id":12898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12897,"mutability":"mutable","name":"path","nameLocation":"23628:4:15","nodeType":"VariableDeclaration","scope":12902,"src":"23612:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12896,"name":"string","nodeType":"ElementaryTypeName","src":"23612:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23611:22:15"},"returnParameters":{"id":12901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12900,"mutability":"mutable","name":"data","nameLocation":"23670:4:15","nodeType":"VariableDeclaration","scope":12902,"src":"23657:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":12899,"name":"bytes","nodeType":"ElementaryTypeName","src":"23657:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"23656:19:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12910,"nodeType":"FunctionDefinition","src":"23725:83:15","nodes":[],"documentation":{"id":12903,"nodeType":"StructuredDocumentation","src":"23682:38:15","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"23734:8:15","parameters":{"id":12906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12905,"mutability":"mutable","name":"path","nameLocation":"23759:4:15","nodeType":"VariableDeclaration","scope":12910,"src":"23743:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12904,"name":"string","nodeType":"ElementaryTypeName","src":"23743:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23742:22:15"},"returnParameters":{"id":12909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12908,"mutability":"mutable","name":"line","nameLocation":"23802:4:15","nodeType":"VariableDeclaration","scope":12910,"src":"23788:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12907,"name":"string","nodeType":"ElementaryTypeName","src":"23788:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23787:20:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12918,"nodeType":"FunctionDefinition","src":"24067:93:15","nodes":[],"documentation":{"id":12911,"nodeType":"StructuredDocumentation","src":"23814:248:15","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"24076:8:15","parameters":{"id":12914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12913,"mutability":"mutable","name":"linkPath","nameLocation":"24101:8:15","nodeType":"VariableDeclaration","scope":12918,"src":"24085:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12912,"name":"string","nodeType":"ElementaryTypeName","src":"24085:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24084:26:15"},"returnParameters":{"id":12917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12916,"mutability":"mutable","name":"targetPath","nameLocation":"24148:10:15","nodeType":"VariableDeclaration","scope":12918,"src":"24134:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":12915,"name":"string","nodeType":"ElementaryTypeName","src":"24134:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24133:26:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12926,"nodeType":"FunctionDefinition","src":"24550:66:15","nodes":[],"documentation":{"id":12919,"nodeType":"StructuredDocumentation","src":"24166:379:15","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"24559:9:15","parameters":{"id":12924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12921,"mutability":"mutable","name":"path","nameLocation":"24585:4:15","nodeType":"VariableDeclaration","scope":12926,"src":"24569:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12920,"name":"string","nodeType":"ElementaryTypeName","src":"24569:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12923,"mutability":"mutable","name":"recursive","nameLocation":"24596:9:15","nodeType":"VariableDeclaration","scope":12926,"src":"24591:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12922,"name":"bool","nodeType":"ElementaryTypeName","src":"24591:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24568:38:15"},"returnParameters":{"id":12925,"nodeType":"ParameterList","parameters":[],"src":"24615:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12932,"nodeType":"FunctionDefinition","src":"24949:51:15","nodes":[],"documentation":{"id":12927,"nodeType":"StructuredDocumentation","src":"24622:322:15","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"24958:10:15","parameters":{"id":12930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12929,"mutability":"mutable","name":"path","nameLocation":"24985:4:15","nodeType":"VariableDeclaration","scope":12932,"src":"24969:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12928,"name":"string","nodeType":"ElementaryTypeName","src":"24969:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24968:22:15"},"returnParameters":{"id":12931,"nodeType":"ParameterList","parameters":[],"src":"24999:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12942,"nodeType":"FunctionDefinition","src":"25107:91:15","nodes":[],"documentation":{"id":12933,"nodeType":"StructuredDocumentation","src":"25006:96:15","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"25116:6:15","parameters":{"id":12937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12936,"mutability":"mutable","name":"commandInput","nameLocation":"25141:12:15","nodeType":"VariableDeclaration","scope":12942,"src":"25123:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":12934,"name":"string","nodeType":"ElementaryTypeName","src":"25123:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":12935,"nodeType":"ArrayTypeName","src":"25123:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"25122:32:15"},"returnParameters":{"id":12941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12940,"mutability":"mutable","name":"result","nameLocation":"25190:6:15","nodeType":"VariableDeclaration","scope":12942,"src":"25173:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$12218_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":12939,"nodeType":"UserDefinedTypeName","pathNode":{"id":12938,"name":"FfiResult","nameLocations":["25173:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":12218,"src":"25173:9:15"},"referencedDeclaration":12218,"src":"25173:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$12218_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"25172:25:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12948,"nodeType":"FunctionDefinition","src":"25263:60:15","nodes":[],"documentation":{"id":12943,"nodeType":"StructuredDocumentation","src":"25204:54:15","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"25272:8:15","parameters":{"id":12944,"nodeType":"ParameterList","parameters":[],"src":"25280:2:15"},"returnParameters":{"id":12947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12946,"mutability":"mutable","name":"milliseconds","nameLocation":"25309:12:15","nodeType":"VariableDeclaration","scope":12948,"src":"25301:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12945,"name":"uint256","nodeType":"ElementaryTypeName","src":"25301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25300:22:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12956,"nodeType":"FunctionDefinition","src":"25492:72:15","nodes":[],"documentation":{"id":12949,"nodeType":"StructuredDocumentation","src":"25329:158:15","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"25501:9:15","parameters":{"id":12954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12951,"mutability":"mutable","name":"path","nameLocation":"25527:4:15","nodeType":"VariableDeclaration","scope":12956,"src":"25511:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12950,"name":"string","nodeType":"ElementaryTypeName","src":"25511:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12953,"mutability":"mutable","name":"data","nameLocation":"25549:4:15","nodeType":"VariableDeclaration","scope":12956,"src":"25533:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12952,"name":"string","nodeType":"ElementaryTypeName","src":"25533:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25510:44:15"},"returnParameters":{"id":12955,"nodeType":"ParameterList","parameters":[],"src":"25563:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12964,"nodeType":"FunctionDefinition","src":"25742:77:15","nodes":[],"documentation":{"id":12957,"nodeType":"StructuredDocumentation","src":"25570:167:15","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"25751:15:15","parameters":{"id":12962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12959,"mutability":"mutable","name":"path","nameLocation":"25783:4:15","nodeType":"VariableDeclaration","scope":12964,"src":"25767:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12958,"name":"string","nodeType":"ElementaryTypeName","src":"25767:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12961,"mutability":"mutable","name":"data","nameLocation":"25804:4:15","nodeType":"VariableDeclaration","scope":12964,"src":"25789:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":12960,"name":"bytes","nodeType":"ElementaryTypeName","src":"25789:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25766:43:15"},"returnParameters":{"id":12963,"nodeType":"ParameterList","parameters":[],"src":"25818:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12972,"nodeType":"FunctionDefinition","src":"25940:72:15","nodes":[],"documentation":{"id":12965,"nodeType":"StructuredDocumentation","src":"25825:110:15","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"25949:9:15","parameters":{"id":12970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12967,"mutability":"mutable","name":"path","nameLocation":"25975:4:15","nodeType":"VariableDeclaration","scope":12972,"src":"25959:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12966,"name":"string","nodeType":"ElementaryTypeName","src":"25959:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12969,"mutability":"mutable","name":"data","nameLocation":"25997:4:15","nodeType":"VariableDeclaration","scope":12972,"src":"25981:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12968,"name":"string","nodeType":"ElementaryTypeName","src":"25981:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25958:44:15"},"returnParameters":{"id":12971,"nodeType":"ParameterList","parameters":[],"src":"26011:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":12982,"nodeType":"FunctionDefinition","src":"26205:91:15","nodes":[],"documentation":{"id":12973,"nodeType":"StructuredDocumentation","src":"26049:151:15","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"26214:9:15","parameters":{"id":12978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12975,"mutability":"mutable","name":"json","nameLocation":"26240:4:15","nodeType":"VariableDeclaration","scope":12982,"src":"26224:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12974,"name":"string","nodeType":"ElementaryTypeName","src":"26224:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12977,"mutability":"mutable","name":"key","nameLocation":"26262:3:15","nodeType":"VariableDeclaration","scope":12982,"src":"26246:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12976,"name":"string","nodeType":"ElementaryTypeName","src":"26246:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26223:43:15"},"returnParameters":{"id":12981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12982,"src":"26290:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12979,"name":"bool","nodeType":"ElementaryTypeName","src":"26290:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26289:6:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":12992,"nodeType":"FunctionDefinition","src":"26351:95:15","nodes":[],"documentation":{"id":12983,"nodeType":"StructuredDocumentation","src":"26302:44:15","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"26360:13:15","parameters":{"id":12988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12985,"mutability":"mutable","name":"json","nameLocation":"26390:4:15","nodeType":"VariableDeclaration","scope":12992,"src":"26374:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12984,"name":"string","nodeType":"ElementaryTypeName","src":"26374:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12987,"mutability":"mutable","name":"key","nameLocation":"26412:3:15","nodeType":"VariableDeclaration","scope":12992,"src":"26396:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12986,"name":"string","nodeType":"ElementaryTypeName","src":"26396:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26373:43:15"},"returnParameters":{"id":12991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":12992,"src":"26440:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12989,"name":"bool","nodeType":"ElementaryTypeName","src":"26440:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26439:6:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13002,"nodeType":"FunctionDefinition","src":"26527:101:15","nodes":[],"documentation":{"id":12993,"nodeType":"StructuredDocumentation","src":"26452:70:15","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"26536:16:15","parameters":{"id":12998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":12995,"mutability":"mutable","name":"json","nameLocation":"26569:4:15","nodeType":"VariableDeclaration","scope":13002,"src":"26553:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12994,"name":"string","nodeType":"ElementaryTypeName","src":"26553:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12997,"mutability":"mutable","name":"key","nameLocation":"26591:3:15","nodeType":"VariableDeclaration","scope":13002,"src":"26575:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":12996,"name":"string","nodeType":"ElementaryTypeName","src":"26575:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26552:43:15"},"returnParameters":{"id":13001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13002,"src":"26619:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12999,"name":"address","nodeType":"ElementaryTypeName","src":"26619:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"26618:9:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13013,"nodeType":"FunctionDefinition","src":"26711:139:15","nodes":[],"documentation":{"id":13003,"nodeType":"StructuredDocumentation","src":"26634:72:15","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"26720:21:15","parameters":{"id":13008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13005,"mutability":"mutable","name":"json","nameLocation":"26758:4:15","nodeType":"VariableDeclaration","scope":13013,"src":"26742:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13004,"name":"string","nodeType":"ElementaryTypeName","src":"26742:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13007,"mutability":"mutable","name":"key","nameLocation":"26780:3:15","nodeType":"VariableDeclaration","scope":13013,"src":"26764:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13006,"name":"string","nodeType":"ElementaryTypeName","src":"26764:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26741:43:15"},"returnParameters":{"id":13012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13011,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13013,"src":"26832:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13009,"name":"address","nodeType":"ElementaryTypeName","src":"26832:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13010,"nodeType":"ArrayTypeName","src":"26832:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"26831:18:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13023,"nodeType":"FunctionDefinition","src":"26928:95:15","nodes":[],"documentation":{"id":13014,"nodeType":"StructuredDocumentation","src":"26856:67:15","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"26937:13:15","parameters":{"id":13019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13016,"mutability":"mutable","name":"json","nameLocation":"26967:4:15","nodeType":"VariableDeclaration","scope":13023,"src":"26951:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13015,"name":"string","nodeType":"ElementaryTypeName","src":"26951:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13018,"mutability":"mutable","name":"key","nameLocation":"26989:3:15","nodeType":"VariableDeclaration","scope":13023,"src":"26973:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13017,"name":"string","nodeType":"ElementaryTypeName","src":"26973:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26950:43:15"},"returnParameters":{"id":13022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13023,"src":"27017:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13020,"name":"bool","nodeType":"ElementaryTypeName","src":"27017:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"27016:6:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13034,"nodeType":"FunctionDefinition","src":"27103:109:15","nodes":[],"documentation":{"id":13024,"nodeType":"StructuredDocumentation","src":"27029:69:15","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"27112:18:15","parameters":{"id":13029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13026,"mutability":"mutable","name":"json","nameLocation":"27147:4:15","nodeType":"VariableDeclaration","scope":13034,"src":"27131:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13025,"name":"string","nodeType":"ElementaryTypeName","src":"27131:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13028,"mutability":"mutable","name":"key","nameLocation":"27169:3:15","nodeType":"VariableDeclaration","scope":13034,"src":"27153:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13027,"name":"string","nodeType":"ElementaryTypeName","src":"27153:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27130:43:15"},"returnParameters":{"id":13033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13034,"src":"27197:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13030,"name":"bool","nodeType":"ElementaryTypeName","src":"27197:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13031,"nodeType":"ArrayTypeName","src":"27197:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"27196:15:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13044,"nodeType":"FunctionDefinition","src":"27291:104:15","nodes":[],"documentation":{"id":13035,"nodeType":"StructuredDocumentation","src":"27218:68:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"27300:14:15","parameters":{"id":13040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13037,"mutability":"mutable","name":"json","nameLocation":"27331:4:15","nodeType":"VariableDeclaration","scope":13044,"src":"27315:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13036,"name":"string","nodeType":"ElementaryTypeName","src":"27315:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13039,"mutability":"mutable","name":"key","nameLocation":"27353:3:15","nodeType":"VariableDeclaration","scope":13044,"src":"27337:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13038,"name":"string","nodeType":"ElementaryTypeName","src":"27337:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27314:43:15"},"returnParameters":{"id":13043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13044,"src":"27381:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13041,"name":"bytes","nodeType":"ElementaryTypeName","src":"27381:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27380:14:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13054,"nodeType":"FunctionDefinition","src":"27476:101:15","nodes":[],"documentation":{"id":13045,"nodeType":"StructuredDocumentation","src":"27401:70:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"27485:16:15","parameters":{"id":13050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13047,"mutability":"mutable","name":"json","nameLocation":"27518:4:15","nodeType":"VariableDeclaration","scope":13054,"src":"27502:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13046,"name":"string","nodeType":"ElementaryTypeName","src":"27502:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13049,"mutability":"mutable","name":"key","nameLocation":"27540:3:15","nodeType":"VariableDeclaration","scope":13054,"src":"27524:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13048,"name":"string","nodeType":"ElementaryTypeName","src":"27524:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27501:43:15"},"returnParameters":{"id":13053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13054,"src":"27568:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13051,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27568:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"27567:9:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13065,"nodeType":"FunctionDefinition","src":"27660:139:15","nodes":[],"documentation":{"id":13055,"nodeType":"StructuredDocumentation","src":"27583:72:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"27669:21:15","parameters":{"id":13060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13057,"mutability":"mutable","name":"json","nameLocation":"27707:4:15","nodeType":"VariableDeclaration","scope":13065,"src":"27691:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13056,"name":"string","nodeType":"ElementaryTypeName","src":"27691:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13059,"mutability":"mutable","name":"key","nameLocation":"27729:3:15","nodeType":"VariableDeclaration","scope":13065,"src":"27713:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13058,"name":"string","nodeType":"ElementaryTypeName","src":"27713:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27690:43:15"},"returnParameters":{"id":13064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13063,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13065,"src":"27781:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"27781:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13062,"nodeType":"ArrayTypeName","src":"27781:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"27780:18:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13076,"nodeType":"FunctionDefinition","src":"27880:111:15","nodes":[],"documentation":{"id":13066,"nodeType":"StructuredDocumentation","src":"27805:70:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"27889:19:15","parameters":{"id":13071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13068,"mutability":"mutable","name":"json","nameLocation":"27925:4:15","nodeType":"VariableDeclaration","scope":13076,"src":"27909:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13067,"name":"string","nodeType":"ElementaryTypeName","src":"27909:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13070,"mutability":"mutable","name":"key","nameLocation":"27947:3:15","nodeType":"VariableDeclaration","scope":13076,"src":"27931:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13069,"name":"string","nodeType":"ElementaryTypeName","src":"27931:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27908:43:15"},"returnParameters":{"id":13075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13076,"src":"27975:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13072,"name":"bytes","nodeType":"ElementaryTypeName","src":"27975:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13073,"nodeType":"ArrayTypeName","src":"27975:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"27974:16:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13086,"nodeType":"FunctionDefinition","src":"28071:96:15","nodes":[],"documentation":{"id":13077,"nodeType":"StructuredDocumentation","src":"27997:69:15","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"28080:12:15","parameters":{"id":13082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13079,"mutability":"mutable","name":"json","nameLocation":"28109:4:15","nodeType":"VariableDeclaration","scope":13086,"src":"28093:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13078,"name":"string","nodeType":"ElementaryTypeName","src":"28093:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13081,"mutability":"mutable","name":"key","nameLocation":"28131:3:15","nodeType":"VariableDeclaration","scope":13086,"src":"28115:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13080,"name":"string","nodeType":"ElementaryTypeName","src":"28115:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28092:43:15"},"returnParameters":{"id":13085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13086,"src":"28159:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13083,"name":"int256","nodeType":"ElementaryTypeName","src":"28159:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28158:8:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13097,"nodeType":"FunctionDefinition","src":"28249:110:15","nodes":[],"documentation":{"id":13087,"nodeType":"StructuredDocumentation","src":"28173:71:15","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"28258:17:15","parameters":{"id":13092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13089,"mutability":"mutable","name":"json","nameLocation":"28292:4:15","nodeType":"VariableDeclaration","scope":13097,"src":"28276:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13088,"name":"string","nodeType":"ElementaryTypeName","src":"28276:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13091,"mutability":"mutable","name":"key","nameLocation":"28314:3:15","nodeType":"VariableDeclaration","scope":13097,"src":"28298:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13090,"name":"string","nodeType":"ElementaryTypeName","src":"28298:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28275:43:15"},"returnParameters":{"id":13096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13095,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13097,"src":"28342:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13093,"name":"int256","nodeType":"ElementaryTypeName","src":"28342:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13094,"nodeType":"ArrayTypeName","src":"28342:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"28341:17:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13108,"nodeType":"FunctionDefinition","src":"28424:111:15","nodes":[],"documentation":{"id":13098,"nodeType":"StructuredDocumentation","src":"28365:54:15","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"28433:13:15","parameters":{"id":13103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13100,"mutability":"mutable","name":"json","nameLocation":"28463:4:15","nodeType":"VariableDeclaration","scope":13108,"src":"28447:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13099,"name":"string","nodeType":"ElementaryTypeName","src":"28447:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13102,"mutability":"mutable","name":"key","nameLocation":"28485:3:15","nodeType":"VariableDeclaration","scope":13108,"src":"28469:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13101,"name":"string","nodeType":"ElementaryTypeName","src":"28469:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28446:43:15"},"returnParameters":{"id":13107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13106,"mutability":"mutable","name":"keys","nameLocation":"28529:4:15","nodeType":"VariableDeclaration","scope":13108,"src":"28513:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13104,"name":"string","nodeType":"ElementaryTypeName","src":"28513:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13105,"nodeType":"ArrayTypeName","src":"28513:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"28512:22:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13118,"nodeType":"FunctionDefinition","src":"28615:106:15","nodes":[],"documentation":{"id":13109,"nodeType":"StructuredDocumentation","src":"28541:69:15","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"28624:15:15","parameters":{"id":13114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13111,"mutability":"mutable","name":"json","nameLocation":"28656:4:15","nodeType":"VariableDeclaration","scope":13118,"src":"28640:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13110,"name":"string","nodeType":"ElementaryTypeName","src":"28640:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13113,"mutability":"mutable","name":"key","nameLocation":"28678:3:15","nodeType":"VariableDeclaration","scope":13118,"src":"28662:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13112,"name":"string","nodeType":"ElementaryTypeName","src":"28662:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28639:43:15"},"returnParameters":{"id":13117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13118,"src":"28706:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13115,"name":"string","nodeType":"ElementaryTypeName","src":"28706:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28705:15:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13129,"nodeType":"FunctionDefinition","src":"28803:113:15","nodes":[],"documentation":{"id":13119,"nodeType":"StructuredDocumentation","src":"28727:71:15","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"28812:20:15","parameters":{"id":13124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13121,"mutability":"mutable","name":"json","nameLocation":"28849:4:15","nodeType":"VariableDeclaration","scope":13129,"src":"28833:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13120,"name":"string","nodeType":"ElementaryTypeName","src":"28833:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13123,"mutability":"mutable","name":"key","nameLocation":"28871:3:15","nodeType":"VariableDeclaration","scope":13129,"src":"28855:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13122,"name":"string","nodeType":"ElementaryTypeName","src":"28855:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28832:43:15"},"returnParameters":{"id":13128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13129,"src":"28899:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13125,"name":"string","nodeType":"ElementaryTypeName","src":"28899:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13126,"nodeType":"ArrayTypeName","src":"28899:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"28898:17:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13139,"nodeType":"FunctionDefinition","src":"28997:98:15","nodes":[],"documentation":{"id":13130,"nodeType":"StructuredDocumentation","src":"28922:70:15","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"29006:13:15","parameters":{"id":13135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13132,"mutability":"mutable","name":"json","nameLocation":"29036:4:15","nodeType":"VariableDeclaration","scope":13139,"src":"29020:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13131,"name":"string","nodeType":"ElementaryTypeName","src":"29020:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13134,"mutability":"mutable","name":"key","nameLocation":"29058:3:15","nodeType":"VariableDeclaration","scope":13139,"src":"29042:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13133,"name":"string","nodeType":"ElementaryTypeName","src":"29042:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29019:43:15"},"returnParameters":{"id":13138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13137,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13139,"src":"29086:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13136,"name":"uint256","nodeType":"ElementaryTypeName","src":"29086:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29085:9:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13150,"nodeType":"FunctionDefinition","src":"29178:112:15","nodes":[],"documentation":{"id":13140,"nodeType":"StructuredDocumentation","src":"29101:72:15","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"29187:18:15","parameters":{"id":13145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13142,"mutability":"mutable","name":"json","nameLocation":"29222:4:15","nodeType":"VariableDeclaration","scope":13150,"src":"29206:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13141,"name":"string","nodeType":"ElementaryTypeName","src":"29206:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13144,"mutability":"mutable","name":"key","nameLocation":"29244:3:15","nodeType":"VariableDeclaration","scope":13150,"src":"29228:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13143,"name":"string","nodeType":"ElementaryTypeName","src":"29228:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29205:43:15"},"returnParameters":{"id":13149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13150,"src":"29272:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13146,"name":"uint256","nodeType":"ElementaryTypeName","src":"29272:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13147,"nodeType":"ArrayTypeName","src":"29272:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"29271:18:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13158,"nodeType":"FunctionDefinition","src":"29331:93:15","nodes":[],"documentation":{"id":13151,"nodeType":"StructuredDocumentation","src":"29296:30:15","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"29340:9:15","parameters":{"id":13154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13153,"mutability":"mutable","name":"json","nameLocation":"29366:4:15","nodeType":"VariableDeclaration","scope":13158,"src":"29350:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13152,"name":"string","nodeType":"ElementaryTypeName","src":"29350:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29349:22:15"},"returnParameters":{"id":13157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13156,"mutability":"mutable","name":"abiEncodedData","nameLocation":"29408:14:15","nodeType":"VariableDeclaration","scope":13158,"src":"29395:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13155,"name":"bytes","nodeType":"ElementaryTypeName","src":"29395:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29394:29:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13168,"nodeType":"FunctionDefinition","src":"29474:114:15","nodes":[],"documentation":{"id":13159,"nodeType":"StructuredDocumentation","src":"29430:39:15","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"29483:9:15","parameters":{"id":13164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13161,"mutability":"mutable","name":"json","nameLocation":"29509:4:15","nodeType":"VariableDeclaration","scope":13168,"src":"29493:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13160,"name":"string","nodeType":"ElementaryTypeName","src":"29493:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13163,"mutability":"mutable","name":"key","nameLocation":"29531:3:15","nodeType":"VariableDeclaration","scope":13168,"src":"29515:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13162,"name":"string","nodeType":"ElementaryTypeName","src":"29515:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29492:43:15"},"returnParameters":{"id":13167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13166,"mutability":"mutable","name":"abiEncodedData","nameLocation":"29572:14:15","nodeType":"VariableDeclaration","scope":13168,"src":"29559:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13165,"name":"bytes","nodeType":"ElementaryTypeName","src":"29559:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29558:29:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13180,"nodeType":"FunctionDefinition","src":"29623:148:15","nodes":[],"documentation":{"id":13169,"nodeType":"StructuredDocumentation","src":"29594:24:15","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"29632:16:15","parameters":{"id":13176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13171,"mutability":"mutable","name":"objectKey","nameLocation":"29665:9:15","nodeType":"VariableDeclaration","scope":13180,"src":"29649:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13170,"name":"string","nodeType":"ElementaryTypeName","src":"29649:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13173,"mutability":"mutable","name":"valueKey","nameLocation":"29692:8:15","nodeType":"VariableDeclaration","scope":13180,"src":"29676:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13172,"name":"string","nodeType":"ElementaryTypeName","src":"29676:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13175,"mutability":"mutable","name":"value","nameLocation":"29710:5:15","nodeType":"VariableDeclaration","scope":13180,"src":"29702:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13174,"name":"address","nodeType":"ElementaryTypeName","src":"29702:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29648:68:15"},"returnParameters":{"id":13179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13178,"mutability":"mutable","name":"json","nameLocation":"29765:4:15","nodeType":"VariableDeclaration","scope":13180,"src":"29751:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13177,"name":"string","nodeType":"ElementaryTypeName","src":"29751:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29750:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13193,"nodeType":"FunctionDefinition","src":"29806:160:15","nodes":[],"documentation":{"id":13181,"nodeType":"StructuredDocumentation","src":"29777:24:15","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"29815:16:15","parameters":{"id":13189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13183,"mutability":"mutable","name":"objectKey","nameLocation":"29848:9:15","nodeType":"VariableDeclaration","scope":13193,"src":"29832:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13182,"name":"string","nodeType":"ElementaryTypeName","src":"29832:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13185,"mutability":"mutable","name":"valueKey","nameLocation":"29875:8:15","nodeType":"VariableDeclaration","scope":13193,"src":"29859:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13184,"name":"string","nodeType":"ElementaryTypeName","src":"29859:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13188,"mutability":"mutable","name":"values","nameLocation":"29904:6:15","nodeType":"VariableDeclaration","scope":13193,"src":"29885:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13186,"name":"address","nodeType":"ElementaryTypeName","src":"29885:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13187,"nodeType":"ArrayTypeName","src":"29885:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"29831:80:15"},"returnParameters":{"id":13192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13191,"mutability":"mutable","name":"json","nameLocation":"29960:4:15","nodeType":"VariableDeclaration","scope":13193,"src":"29946:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13190,"name":"string","nodeType":"ElementaryTypeName","src":"29946:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29945:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13205,"nodeType":"FunctionDefinition","src":"30001:142:15","nodes":[],"documentation":{"id":13194,"nodeType":"StructuredDocumentation","src":"29972:24:15","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"30010:13:15","parameters":{"id":13201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13196,"mutability":"mutable","name":"objectKey","nameLocation":"30040:9:15","nodeType":"VariableDeclaration","scope":13205,"src":"30024:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13195,"name":"string","nodeType":"ElementaryTypeName","src":"30024:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13198,"mutability":"mutable","name":"valueKey","nameLocation":"30067:8:15","nodeType":"VariableDeclaration","scope":13205,"src":"30051:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13197,"name":"string","nodeType":"ElementaryTypeName","src":"30051:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13200,"mutability":"mutable","name":"value","nameLocation":"30082:5:15","nodeType":"VariableDeclaration","scope":13205,"src":"30077:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13199,"name":"bool","nodeType":"ElementaryTypeName","src":"30077:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"30023:65:15"},"returnParameters":{"id":13204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13203,"mutability":"mutable","name":"json","nameLocation":"30137:4:15","nodeType":"VariableDeclaration","scope":13205,"src":"30123:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13202,"name":"string","nodeType":"ElementaryTypeName","src":"30123:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30122:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13218,"nodeType":"FunctionDefinition","src":"30178:154:15","nodes":[],"documentation":{"id":13206,"nodeType":"StructuredDocumentation","src":"30149:24:15","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"30187:13:15","parameters":{"id":13214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13208,"mutability":"mutable","name":"objectKey","nameLocation":"30217:9:15","nodeType":"VariableDeclaration","scope":13218,"src":"30201:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13207,"name":"string","nodeType":"ElementaryTypeName","src":"30201:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13210,"mutability":"mutable","name":"valueKey","nameLocation":"30244:8:15","nodeType":"VariableDeclaration","scope":13218,"src":"30228:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13209,"name":"string","nodeType":"ElementaryTypeName","src":"30228:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13213,"mutability":"mutable","name":"values","nameLocation":"30270:6:15","nodeType":"VariableDeclaration","scope":13218,"src":"30254:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13211,"name":"bool","nodeType":"ElementaryTypeName","src":"30254:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13212,"nodeType":"ArrayTypeName","src":"30254:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"30200:77:15"},"returnParameters":{"id":13217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13216,"mutability":"mutable","name":"json","nameLocation":"30326:4:15","nodeType":"VariableDeclaration","scope":13218,"src":"30312:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13215,"name":"string","nodeType":"ElementaryTypeName","src":"30312:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30311:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13230,"nodeType":"FunctionDefinition","src":"30367:148:15","nodes":[],"documentation":{"id":13219,"nodeType":"StructuredDocumentation","src":"30338:24:15","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"30376:16:15","parameters":{"id":13226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13221,"mutability":"mutable","name":"objectKey","nameLocation":"30409:9:15","nodeType":"VariableDeclaration","scope":13230,"src":"30393:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13220,"name":"string","nodeType":"ElementaryTypeName","src":"30393:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13223,"mutability":"mutable","name":"valueKey","nameLocation":"30436:8:15","nodeType":"VariableDeclaration","scope":13230,"src":"30420:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13222,"name":"string","nodeType":"ElementaryTypeName","src":"30420:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13225,"mutability":"mutable","name":"value","nameLocation":"30454:5:15","nodeType":"VariableDeclaration","scope":13230,"src":"30446:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13224,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30446:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"30392:68:15"},"returnParameters":{"id":13229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13228,"mutability":"mutable","name":"json","nameLocation":"30509:4:15","nodeType":"VariableDeclaration","scope":13230,"src":"30495:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13227,"name":"string","nodeType":"ElementaryTypeName","src":"30495:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30494:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13243,"nodeType":"FunctionDefinition","src":"30550:160:15","nodes":[],"documentation":{"id":13231,"nodeType":"StructuredDocumentation","src":"30521:24:15","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"30559:16:15","parameters":{"id":13239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13233,"mutability":"mutable","name":"objectKey","nameLocation":"30592:9:15","nodeType":"VariableDeclaration","scope":13243,"src":"30576:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13232,"name":"string","nodeType":"ElementaryTypeName","src":"30576:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13235,"mutability":"mutable","name":"valueKey","nameLocation":"30619:8:15","nodeType":"VariableDeclaration","scope":13243,"src":"30603:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13234,"name":"string","nodeType":"ElementaryTypeName","src":"30603:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13238,"mutability":"mutable","name":"values","nameLocation":"30648:6:15","nodeType":"VariableDeclaration","scope":13243,"src":"30629:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"30629:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13237,"nodeType":"ArrayTypeName","src":"30629:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"30575:80:15"},"returnParameters":{"id":13242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13241,"mutability":"mutable","name":"json","nameLocation":"30704:4:15","nodeType":"VariableDeclaration","scope":13243,"src":"30690:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13240,"name":"string","nodeType":"ElementaryTypeName","src":"30690:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30689:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13255,"nodeType":"FunctionDefinition","src":"30745:153:15","nodes":[],"documentation":{"id":13244,"nodeType":"StructuredDocumentation","src":"30716:24:15","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"30754:14:15","parameters":{"id":13251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13246,"mutability":"mutable","name":"objectKey","nameLocation":"30785:9:15","nodeType":"VariableDeclaration","scope":13255,"src":"30769:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13245,"name":"string","nodeType":"ElementaryTypeName","src":"30769:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13248,"mutability":"mutable","name":"valueKey","nameLocation":"30812:8:15","nodeType":"VariableDeclaration","scope":13255,"src":"30796:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13247,"name":"string","nodeType":"ElementaryTypeName","src":"30796:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13250,"mutability":"mutable","name":"value","nameLocation":"30837:5:15","nodeType":"VariableDeclaration","scope":13255,"src":"30822:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13249,"name":"bytes","nodeType":"ElementaryTypeName","src":"30822:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30768:75:15"},"returnParameters":{"id":13254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13253,"mutability":"mutable","name":"json","nameLocation":"30892:4:15","nodeType":"VariableDeclaration","scope":13255,"src":"30878:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13252,"name":"string","nodeType":"ElementaryTypeName","src":"30878:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30877:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13268,"nodeType":"FunctionDefinition","src":"30933:156:15","nodes":[],"documentation":{"id":13256,"nodeType":"StructuredDocumentation","src":"30904:24:15","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"30942:14:15","parameters":{"id":13264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13258,"mutability":"mutable","name":"objectKey","nameLocation":"30973:9:15","nodeType":"VariableDeclaration","scope":13268,"src":"30957:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13257,"name":"string","nodeType":"ElementaryTypeName","src":"30957:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13260,"mutability":"mutable","name":"valueKey","nameLocation":"31000:8:15","nodeType":"VariableDeclaration","scope":13268,"src":"30984:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13259,"name":"string","nodeType":"ElementaryTypeName","src":"30984:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13263,"mutability":"mutable","name":"values","nameLocation":"31027:6:15","nodeType":"VariableDeclaration","scope":13268,"src":"31010:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13261,"name":"bytes","nodeType":"ElementaryTypeName","src":"31010:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13262,"nodeType":"ArrayTypeName","src":"31010:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"30956:78:15"},"returnParameters":{"id":13267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13266,"mutability":"mutable","name":"json","nameLocation":"31083:4:15","nodeType":"VariableDeclaration","scope":13268,"src":"31069:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13265,"name":"string","nodeType":"ElementaryTypeName","src":"31069:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31068:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13280,"nodeType":"FunctionDefinition","src":"31124:143:15","nodes":[],"documentation":{"id":13269,"nodeType":"StructuredDocumentation","src":"31095:24:15","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"31133:12:15","parameters":{"id":13276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13271,"mutability":"mutable","name":"objectKey","nameLocation":"31162:9:15","nodeType":"VariableDeclaration","scope":13280,"src":"31146:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13270,"name":"string","nodeType":"ElementaryTypeName","src":"31146:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13273,"mutability":"mutable","name":"valueKey","nameLocation":"31189:8:15","nodeType":"VariableDeclaration","scope":13280,"src":"31173:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13272,"name":"string","nodeType":"ElementaryTypeName","src":"31173:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13275,"mutability":"mutable","name":"value","nameLocation":"31206:5:15","nodeType":"VariableDeclaration","scope":13280,"src":"31199:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13274,"name":"int256","nodeType":"ElementaryTypeName","src":"31199:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31145:67:15"},"returnParameters":{"id":13279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13278,"mutability":"mutable","name":"json","nameLocation":"31261:4:15","nodeType":"VariableDeclaration","scope":13280,"src":"31247:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13277,"name":"string","nodeType":"ElementaryTypeName","src":"31247:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31246:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13293,"nodeType":"FunctionDefinition","src":"31302:155:15","nodes":[],"documentation":{"id":13281,"nodeType":"StructuredDocumentation","src":"31273:24:15","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"31311:12:15","parameters":{"id":13289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13283,"mutability":"mutable","name":"objectKey","nameLocation":"31340:9:15","nodeType":"VariableDeclaration","scope":13293,"src":"31324:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13282,"name":"string","nodeType":"ElementaryTypeName","src":"31324:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13285,"mutability":"mutable","name":"valueKey","nameLocation":"31367:8:15","nodeType":"VariableDeclaration","scope":13293,"src":"31351:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13284,"name":"string","nodeType":"ElementaryTypeName","src":"31351:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13288,"mutability":"mutable","name":"values","nameLocation":"31395:6:15","nodeType":"VariableDeclaration","scope":13293,"src":"31377:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13286,"name":"int256","nodeType":"ElementaryTypeName","src":"31377:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13287,"nodeType":"ArrayTypeName","src":"31377:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"31323:79:15"},"returnParameters":{"id":13292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13291,"mutability":"mutable","name":"json","nameLocation":"31451:4:15","nodeType":"VariableDeclaration","scope":13293,"src":"31437:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13290,"name":"string","nodeType":"ElementaryTypeName","src":"31437:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31436:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13303,"nodeType":"FunctionDefinition","src":"31654:111:15","nodes":[],"documentation":{"id":13294,"nodeType":"StructuredDocumentation","src":"31463:186:15","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"31663:13:15","parameters":{"id":13299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13296,"mutability":"mutable","name":"objectKey","nameLocation":"31693:9:15","nodeType":"VariableDeclaration","scope":13303,"src":"31677:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13295,"name":"string","nodeType":"ElementaryTypeName","src":"31677:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13298,"mutability":"mutable","name":"value","nameLocation":"31720:5:15","nodeType":"VariableDeclaration","scope":13303,"src":"31704:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13297,"name":"string","nodeType":"ElementaryTypeName","src":"31704:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31676:50:15"},"returnParameters":{"id":13302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13301,"mutability":"mutable","name":"json","nameLocation":"31759:4:15","nodeType":"VariableDeclaration","scope":13303,"src":"31745:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13300,"name":"string","nodeType":"ElementaryTypeName","src":"31745:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31744:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13315,"nodeType":"FunctionDefinition","src":"31800:155:15","nodes":[],"documentation":{"id":13304,"nodeType":"StructuredDocumentation","src":"31771:24:15","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"31809:15:15","parameters":{"id":13311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13306,"mutability":"mutable","name":"objectKey","nameLocation":"31841:9:15","nodeType":"VariableDeclaration","scope":13315,"src":"31825:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13305,"name":"string","nodeType":"ElementaryTypeName","src":"31825:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13308,"mutability":"mutable","name":"valueKey","nameLocation":"31868:8:15","nodeType":"VariableDeclaration","scope":13315,"src":"31852:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13307,"name":"string","nodeType":"ElementaryTypeName","src":"31852:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13310,"mutability":"mutable","name":"value","nameLocation":"31894:5:15","nodeType":"VariableDeclaration","scope":13315,"src":"31878:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13309,"name":"string","nodeType":"ElementaryTypeName","src":"31878:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31824:76:15"},"returnParameters":{"id":13314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13313,"mutability":"mutable","name":"json","nameLocation":"31949:4:15","nodeType":"VariableDeclaration","scope":13315,"src":"31935:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13312,"name":"string","nodeType":"ElementaryTypeName","src":"31935:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31934:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13328,"nodeType":"FunctionDefinition","src":"31990:158:15","nodes":[],"documentation":{"id":13316,"nodeType":"StructuredDocumentation","src":"31961:24:15","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"31999:15:15","parameters":{"id":13324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13318,"mutability":"mutable","name":"objectKey","nameLocation":"32031:9:15","nodeType":"VariableDeclaration","scope":13328,"src":"32015:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13317,"name":"string","nodeType":"ElementaryTypeName","src":"32015:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13320,"mutability":"mutable","name":"valueKey","nameLocation":"32058:8:15","nodeType":"VariableDeclaration","scope":13328,"src":"32042:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13319,"name":"string","nodeType":"ElementaryTypeName","src":"32042:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13323,"mutability":"mutable","name":"values","nameLocation":"32086:6:15","nodeType":"VariableDeclaration","scope":13328,"src":"32068:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13321,"name":"string","nodeType":"ElementaryTypeName","src":"32068:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13322,"nodeType":"ArrayTypeName","src":"32068:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"32014:79:15"},"returnParameters":{"id":13327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13326,"mutability":"mutable","name":"json","nameLocation":"32142:4:15","nodeType":"VariableDeclaration","scope":13328,"src":"32128:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13325,"name":"string","nodeType":"ElementaryTypeName","src":"32128:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32127:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13340,"nodeType":"FunctionDefinition","src":"32183:145:15","nodes":[],"documentation":{"id":13329,"nodeType":"StructuredDocumentation","src":"32154:24:15","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"32192:13:15","parameters":{"id":13336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13331,"mutability":"mutable","name":"objectKey","nameLocation":"32222:9:15","nodeType":"VariableDeclaration","scope":13340,"src":"32206:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13330,"name":"string","nodeType":"ElementaryTypeName","src":"32206:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13333,"mutability":"mutable","name":"valueKey","nameLocation":"32249:8:15","nodeType":"VariableDeclaration","scope":13340,"src":"32233:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13332,"name":"string","nodeType":"ElementaryTypeName","src":"32233:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13335,"mutability":"mutable","name":"value","nameLocation":"32267:5:15","nodeType":"VariableDeclaration","scope":13340,"src":"32259:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13334,"name":"uint256","nodeType":"ElementaryTypeName","src":"32259:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"32205:68:15"},"returnParameters":{"id":13339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13338,"mutability":"mutable","name":"json","nameLocation":"32322:4:15","nodeType":"VariableDeclaration","scope":13340,"src":"32308:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13337,"name":"string","nodeType":"ElementaryTypeName","src":"32308:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32307:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13353,"nodeType":"FunctionDefinition","src":"32363:157:15","nodes":[],"documentation":{"id":13341,"nodeType":"StructuredDocumentation","src":"32334:24:15","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"32372:13:15","parameters":{"id":13349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13343,"mutability":"mutable","name":"objectKey","nameLocation":"32402:9:15","nodeType":"VariableDeclaration","scope":13353,"src":"32386:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13342,"name":"string","nodeType":"ElementaryTypeName","src":"32386:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13345,"mutability":"mutable","name":"valueKey","nameLocation":"32429:8:15","nodeType":"VariableDeclaration","scope":13353,"src":"32413:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13344,"name":"string","nodeType":"ElementaryTypeName","src":"32413:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13348,"mutability":"mutable","name":"values","nameLocation":"32458:6:15","nodeType":"VariableDeclaration","scope":13353,"src":"32439:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13346,"name":"uint256","nodeType":"ElementaryTypeName","src":"32439:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13347,"nodeType":"ArrayTypeName","src":"32439:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"32385:80:15"},"returnParameters":{"id":13352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13351,"mutability":"mutable","name":"json","nameLocation":"32514:4:15","nodeType":"VariableDeclaration","scope":13353,"src":"32500:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13350,"name":"string","nodeType":"ElementaryTypeName","src":"32500:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32499:20:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13361,"nodeType":"FunctionDefinition","src":"32620:72:15","nodes":[],"documentation":{"id":13354,"nodeType":"StructuredDocumentation","src":"32526:89:15","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"32629:9:15","parameters":{"id":13359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13356,"mutability":"mutable","name":"json","nameLocation":"32655:4:15","nodeType":"VariableDeclaration","scope":13361,"src":"32639:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13355,"name":"string","nodeType":"ElementaryTypeName","src":"32639:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13358,"mutability":"mutable","name":"path","nameLocation":"32677:4:15","nodeType":"VariableDeclaration","scope":13361,"src":"32661:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13357,"name":"string","nodeType":"ElementaryTypeName","src":"32661:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32638:44:15"},"returnParameters":{"id":13360,"nodeType":"ParameterList","parameters":[],"src":"32691:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13371,"nodeType":"FunctionDefinition","src":"32918:98:15","nodes":[],"documentation":{"id":13362,"nodeType":"StructuredDocumentation","src":"32698:215:15","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"32927:9:15","parameters":{"id":13369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13364,"mutability":"mutable","name":"json","nameLocation":"32953:4:15","nodeType":"VariableDeclaration","scope":13371,"src":"32937:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13363,"name":"string","nodeType":"ElementaryTypeName","src":"32937:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13366,"mutability":"mutable","name":"path","nameLocation":"32975:4:15","nodeType":"VariableDeclaration","scope":13371,"src":"32959:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13365,"name":"string","nodeType":"ElementaryTypeName","src":"32959:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13368,"mutability":"mutable","name":"valueKey","nameLocation":"32997:8:15","nodeType":"VariableDeclaration","scope":13371,"src":"32981:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13367,"name":"string","nodeType":"ElementaryTypeName","src":"32981:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32936:70:15"},"returnParameters":{"id":13370,"nodeType":"ParameterList","parameters":[],"src":"33015:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13375,"nodeType":"FunctionDefinition","src":"33230:30:15","nodes":[],"documentation":{"id":13372,"nodeType":"StructuredDocumentation","src":"33058:167:15","text":"Using the address that calls the test contract, has the next call (at this call depth only)\n create a transaction that can later be signed and sent onchain."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"33239:9:15","parameters":{"id":13373,"nodeType":"ParameterList","parameters":[],"src":"33248:2:15"},"returnParameters":{"id":13374,"nodeType":"ParameterList","parameters":[],"src":"33259:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13381,"nodeType":"FunctionDefinition","src":"33430:44:15","nodes":[],"documentation":{"id":13376,"nodeType":"StructuredDocumentation","src":"33266:159:15","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"33439:9:15","parameters":{"id":13379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13378,"mutability":"mutable","name":"signer","nameLocation":"33457:6:15","nodeType":"VariableDeclaration","scope":13381,"src":"33449:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13377,"name":"address","nodeType":"ElementaryTypeName","src":"33449:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33448:16:15"},"returnParameters":{"id":13380,"nodeType":"ParameterList","parameters":[],"src":"33473:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13387,"nodeType":"FunctionDefinition","src":"33648:48:15","nodes":[],"documentation":{"id":13382,"nodeType":"StructuredDocumentation","src":"33480:163:15","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"33657:9:15","parameters":{"id":13385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13384,"mutability":"mutable","name":"privateKey","nameLocation":"33675:10:15","nodeType":"VariableDeclaration","scope":13387,"src":"33667:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13383,"name":"uint256","nodeType":"ElementaryTypeName","src":"33667:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33666:20:15"},"returnParameters":{"id":13386,"nodeType":"ParameterList","parameters":[],"src":"33695:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13391,"nodeType":"FunctionDefinition","src":"33880:35:15","nodes":[],"documentation":{"id":13388,"nodeType":"StructuredDocumentation","src":"33702:173:15","text":"Using the address that calls the test contract, has all subsequent calls\n (at this call depth only) create transactions that can later be signed and sent onchain."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"33889:14:15","parameters":{"id":13389,"nodeType":"ParameterList","parameters":[],"src":"33903:2:15"},"returnParameters":{"id":13390,"nodeType":"ParameterList","parameters":[],"src":"33914:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13397,"nodeType":"FunctionDefinition","src":"34077:49:15","nodes":[],"documentation":{"id":13392,"nodeType":"StructuredDocumentation","src":"33921:151:15","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"34086:14:15","parameters":{"id":13395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13394,"mutability":"mutable","name":"signer","nameLocation":"34109:6:15","nodeType":"VariableDeclaration","scope":13397,"src":"34101:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13393,"name":"address","nodeType":"ElementaryTypeName","src":"34101:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34100:16:15"},"returnParameters":{"id":13396,"nodeType":"ParameterList","parameters":[],"src":"34125:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13403,"nodeType":"FunctionDefinition","src":"34292:53:15","nodes":[],"documentation":{"id":13398,"nodeType":"StructuredDocumentation","src":"34132:155:15","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"34301:14:15","parameters":{"id":13401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13400,"mutability":"mutable","name":"privateKey","nameLocation":"34324:10:15","nodeType":"VariableDeclaration","scope":13403,"src":"34316:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13399,"name":"uint256","nodeType":"ElementaryTypeName","src":"34316:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34315:20:15"},"returnParameters":{"id":13402,"nodeType":"ParameterList","parameters":[],"src":"34344:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13407,"nodeType":"FunctionDefinition","src":"34398:34:15","nodes":[],"documentation":{"id":13404,"nodeType":"StructuredDocumentation","src":"34351:42:15","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"34407:13:15","parameters":{"id":13405,"nodeType":"ParameterList","parameters":[],"src":"34420:2:15"},"returnParameters":{"id":13406,"nodeType":"ParameterList","parameters":[],"src":"34431:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13415,"nodeType":"FunctionDefinition","src":"34524:100:15","nodes":[],"documentation":{"id":13408,"nodeType":"StructuredDocumentation","src":"34471:48:15","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"34533:12:15","parameters":{"id":13411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13410,"mutability":"mutable","name":"stringifiedValue","nameLocation":"34562:16:15","nodeType":"VariableDeclaration","scope":13415,"src":"34546:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13409,"name":"string","nodeType":"ElementaryTypeName","src":"34546:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34545:34:15"},"returnParameters":{"id":13414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13413,"mutability":"mutable","name":"parsedValue","nameLocation":"34611:11:15","nodeType":"VariableDeclaration","scope":13415,"src":"34603:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13412,"name":"address","nodeType":"ElementaryTypeName","src":"34603:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"34602:21:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13423,"nodeType":"FunctionDefinition","src":"34679:94:15","nodes":[],"documentation":{"id":13416,"nodeType":"StructuredDocumentation","src":"34630:44:15","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"34688:9:15","parameters":{"id":13419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13418,"mutability":"mutable","name":"stringifiedValue","nameLocation":"34714:16:15","nodeType":"VariableDeclaration","scope":13423,"src":"34698:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13417,"name":"string","nodeType":"ElementaryTypeName","src":"34698:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34697:34:15"},"returnParameters":{"id":13422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13421,"mutability":"mutable","name":"parsedValue","nameLocation":"34760:11:15","nodeType":"VariableDeclaration","scope":13423,"src":"34755:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13420,"name":"bool","nodeType":"ElementaryTypeName","src":"34755:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34754:18:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13431,"nodeType":"FunctionDefinition","src":"34827:103:15","nodes":[],"documentation":{"id":13424,"nodeType":"StructuredDocumentation","src":"34779:43:15","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"34836:10:15","parameters":{"id":13427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13426,"mutability":"mutable","name":"stringifiedValue","nameLocation":"34863:16:15","nodeType":"VariableDeclaration","scope":13431,"src":"34847:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13425,"name":"string","nodeType":"ElementaryTypeName","src":"34847:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34846:34:15"},"returnParameters":{"id":13430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13429,"mutability":"mutable","name":"parsedValue","nameLocation":"34917:11:15","nodeType":"VariableDeclaration","scope":13431,"src":"34904:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13428,"name":"bytes","nodeType":"ElementaryTypeName","src":"34904:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34903:26:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13439,"nodeType":"FunctionDefinition","src":"34988:100:15","nodes":[],"documentation":{"id":13432,"nodeType":"StructuredDocumentation","src":"34936:47:15","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"34997:12:15","parameters":{"id":13435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13434,"mutability":"mutable","name":"stringifiedValue","nameLocation":"35026:16:15","nodeType":"VariableDeclaration","scope":13439,"src":"35010:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13433,"name":"string","nodeType":"ElementaryTypeName","src":"35010:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35009:34:15"},"returnParameters":{"id":13438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13437,"mutability":"mutable","name":"parsedValue","nameLocation":"35075:11:15","nodeType":"VariableDeclaration","scope":13439,"src":"35067:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"35067:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"35066:21:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13447,"nodeType":"FunctionDefinition","src":"35145:95:15","nodes":[],"documentation":{"id":13440,"nodeType":"StructuredDocumentation","src":"35094:46:15","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"35154:8:15","parameters":{"id":13443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13442,"mutability":"mutable","name":"stringifiedValue","nameLocation":"35179:16:15","nodeType":"VariableDeclaration","scope":13447,"src":"35163:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13441,"name":"string","nodeType":"ElementaryTypeName","src":"35163:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35162:34:15"},"returnParameters":{"id":13446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13445,"mutability":"mutable","name":"parsedValue","nameLocation":"35227:11:15","nodeType":"VariableDeclaration","scope":13447,"src":"35220:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13444,"name":"int256","nodeType":"ElementaryTypeName","src":"35220:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"35219:20:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13455,"nodeType":"FunctionDefinition","src":"35298:97:15","nodes":[],"documentation":{"id":13448,"nodeType":"StructuredDocumentation","src":"35246:47:15","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"35307:9:15","parameters":{"id":13451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13450,"mutability":"mutable","name":"stringifiedValue","nameLocation":"35333:16:15","nodeType":"VariableDeclaration","scope":13455,"src":"35317:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13449,"name":"string","nodeType":"ElementaryTypeName","src":"35317:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35316:34:15"},"returnParameters":{"id":13454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13453,"mutability":"mutable","name":"parsedValue","nameLocation":"35382:11:15","nodeType":"VariableDeclaration","scope":13455,"src":"35374:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13452,"name":"uint256","nodeType":"ElementaryTypeName","src":"35374:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"35373:21:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13467,"nodeType":"FunctionDefinition","src":"35473:151:15","nodes":[],"documentation":{"id":13456,"nodeType":"StructuredDocumentation","src":"35401:67:15","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"35482:7:15","parameters":{"id":13463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13458,"mutability":"mutable","name":"input","nameLocation":"35506:5:15","nodeType":"VariableDeclaration","scope":13467,"src":"35490:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13457,"name":"string","nodeType":"ElementaryTypeName","src":"35490:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13460,"mutability":"mutable","name":"from","nameLocation":"35529:4:15","nodeType":"VariableDeclaration","scope":13467,"src":"35513:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13459,"name":"string","nodeType":"ElementaryTypeName","src":"35513:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13462,"mutability":"mutable","name":"to","nameLocation":"35551:2:15","nodeType":"VariableDeclaration","scope":13467,"src":"35535:18:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13461,"name":"string","nodeType":"ElementaryTypeName","src":"35535:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35489:65:15"},"returnParameters":{"id":13466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13465,"mutability":"mutable","name":"output","nameLocation":"35616:6:15","nodeType":"VariableDeclaration","scope":13467,"src":"35602:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13464,"name":"string","nodeType":"ElementaryTypeName","src":"35602:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35601:22:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13478,"nodeType":"FunctionDefinition","src":"35717:113:15","nodes":[],"documentation":{"id":13468,"nodeType":"StructuredDocumentation","src":"35630:82:15","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"35726:5:15","parameters":{"id":13473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13470,"mutability":"mutable","name":"input","nameLocation":"35748:5:15","nodeType":"VariableDeclaration","scope":13478,"src":"35732:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13469,"name":"string","nodeType":"ElementaryTypeName","src":"35732:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13472,"mutability":"mutable","name":"delimiter","nameLocation":"35771:9:15","nodeType":"VariableDeclaration","scope":13478,"src":"35755:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13471,"name":"string","nodeType":"ElementaryTypeName","src":"35755:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35731:50:15"},"returnParameters":{"id":13477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13476,"mutability":"mutable","name":"outputs","nameLocation":"35821:7:15","nodeType":"VariableDeclaration","scope":13478,"src":"35805:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13474,"name":"string","nodeType":"ElementaryTypeName","src":"35805:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13475,"nodeType":"ArrayTypeName","src":"35805:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"35804:25:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13486,"nodeType":"FunctionDefinition","src":"35892:89:15","nodes":[],"documentation":{"id":13479,"nodeType":"StructuredDocumentation","src":"35836:51:15","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"35901:11:15","parameters":{"id":13482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13481,"mutability":"mutable","name":"input","nameLocation":"35929:5:15","nodeType":"VariableDeclaration","scope":13486,"src":"35913:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13480,"name":"string","nodeType":"ElementaryTypeName","src":"35913:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35912:23:15"},"returnParameters":{"id":13485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13484,"mutability":"mutable","name":"output","nameLocation":"35973:6:15","nodeType":"VariableDeclaration","scope":13486,"src":"35959:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13483,"name":"string","nodeType":"ElementaryTypeName","src":"35959:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35958:22:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13494,"nodeType":"FunctionDefinition","src":"36035:88:15","nodes":[],"documentation":{"id":13487,"nodeType":"StructuredDocumentation","src":"35987:43:15","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"36044:8:15","parameters":{"id":13490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13489,"mutability":"mutable","name":"value","nameLocation":"36061:5:15","nodeType":"VariableDeclaration","scope":13494,"src":"36053:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13488,"name":"address","nodeType":"ElementaryTypeName","src":"36053:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"36052:15:15"},"returnParameters":{"id":13493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13492,"mutability":"mutable","name":"stringifiedValue","nameLocation":"36105:16:15","nodeType":"VariableDeclaration","scope":13494,"src":"36091:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13491,"name":"string","nodeType":"ElementaryTypeName","src":"36091:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36090:32:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13502,"nodeType":"FunctionDefinition","src":"36177:95:15","nodes":[],"documentation":{"id":13495,"nodeType":"StructuredDocumentation","src":"36129:43:15","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"36186:8:15","parameters":{"id":13498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13497,"mutability":"mutable","name":"value","nameLocation":"36210:5:15","nodeType":"VariableDeclaration","scope":13502,"src":"36195:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13496,"name":"bytes","nodeType":"ElementaryTypeName","src":"36195:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"36194:22:15"},"returnParameters":{"id":13501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13500,"mutability":"mutable","name":"stringifiedValue","nameLocation":"36254:16:15","nodeType":"VariableDeclaration","scope":13502,"src":"36240:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13499,"name":"string","nodeType":"ElementaryTypeName","src":"36240:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36239:32:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13510,"nodeType":"FunctionDefinition","src":"36326:88:15","nodes":[],"documentation":{"id":13503,"nodeType":"StructuredDocumentation","src":"36278:43:15","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"36335:8:15","parameters":{"id":13506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13505,"mutability":"mutable","name":"value","nameLocation":"36352:5:15","nodeType":"VariableDeclaration","scope":13510,"src":"36344:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13504,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36344:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36343:15:15"},"returnParameters":{"id":13509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13508,"mutability":"mutable","name":"stringifiedValue","nameLocation":"36396:16:15","nodeType":"VariableDeclaration","scope":13510,"src":"36382:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13507,"name":"string","nodeType":"ElementaryTypeName","src":"36382:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36381:32:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13518,"nodeType":"FunctionDefinition","src":"36468:85:15","nodes":[],"documentation":{"id":13511,"nodeType":"StructuredDocumentation","src":"36420:43:15","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"36477:8:15","parameters":{"id":13514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13513,"mutability":"mutable","name":"value","nameLocation":"36491:5:15","nodeType":"VariableDeclaration","scope":13518,"src":"36486:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13512,"name":"bool","nodeType":"ElementaryTypeName","src":"36486:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"36485:12:15"},"returnParameters":{"id":13517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13516,"mutability":"mutable","name":"stringifiedValue","nameLocation":"36535:16:15","nodeType":"VariableDeclaration","scope":13518,"src":"36521:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13515,"name":"string","nodeType":"ElementaryTypeName","src":"36521:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36520:32:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13526,"nodeType":"FunctionDefinition","src":"36607:88:15","nodes":[],"documentation":{"id":13519,"nodeType":"StructuredDocumentation","src":"36559:43:15","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"36616:8:15","parameters":{"id":13522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13521,"mutability":"mutable","name":"value","nameLocation":"36633:5:15","nodeType":"VariableDeclaration","scope":13526,"src":"36625:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13520,"name":"uint256","nodeType":"ElementaryTypeName","src":"36625:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36624:15:15"},"returnParameters":{"id":13525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13524,"mutability":"mutable","name":"stringifiedValue","nameLocation":"36677:16:15","nodeType":"VariableDeclaration","scope":13526,"src":"36663:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13523,"name":"string","nodeType":"ElementaryTypeName","src":"36663:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36662:32:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13534,"nodeType":"FunctionDefinition","src":"36749:87:15","nodes":[],"documentation":{"id":13527,"nodeType":"StructuredDocumentation","src":"36701:43:15","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"36758:8:15","parameters":{"id":13530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13529,"mutability":"mutable","name":"value","nameLocation":"36774:5:15","nodeType":"VariableDeclaration","scope":13534,"src":"36767:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13528,"name":"int256","nodeType":"ElementaryTypeName","src":"36767:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"36766:14:15"},"returnParameters":{"id":13533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13532,"mutability":"mutable","name":"stringifiedValue","nameLocation":"36818:16:15","nodeType":"VariableDeclaration","scope":13534,"src":"36804:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13531,"name":"string","nodeType":"ElementaryTypeName","src":"36804:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36803:32:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13542,"nodeType":"FunctionDefinition","src":"36898:89:15","nodes":[],"documentation":{"id":13535,"nodeType":"StructuredDocumentation","src":"36842:51:15","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"36907:11:15","parameters":{"id":13538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13537,"mutability":"mutable","name":"input","nameLocation":"36935:5:15","nodeType":"VariableDeclaration","scope":13542,"src":"36919:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13536,"name":"string","nodeType":"ElementaryTypeName","src":"36919:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36918:23:15"},"returnParameters":{"id":13541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13540,"mutability":"mutable","name":"output","nameLocation":"36979:6:15","nodeType":"VariableDeclaration","scope":13542,"src":"36965:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13539,"name":"string","nodeType":"ElementaryTypeName","src":"36965:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36964:22:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13550,"nodeType":"FunctionDefinition","src":"37070:82:15","nodes":[],"documentation":{"id":13543,"nodeType":"StructuredDocumentation","src":"36993:72:15","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"37079:4:15","parameters":{"id":13546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13545,"mutability":"mutable","name":"input","nameLocation":"37100:5:15","nodeType":"VariableDeclaration","scope":13550,"src":"37084:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13544,"name":"string","nodeType":"ElementaryTypeName","src":"37084:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37083:23:15"},"returnParameters":{"id":13549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13548,"mutability":"mutable","name":"output","nameLocation":"37144:6:15","nodeType":"VariableDeclaration","scope":13550,"src":"37130:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13547,"name":"string","nodeType":"ElementaryTypeName","src":"37130:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37129:22:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13562,"nodeType":"FunctionDefinition","src":"37347:113:15","nodes":[],"documentation":{"id":13551,"nodeType":"StructuredDocumentation","src":"37192:150:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"37356:24:15","parameters":{"id":13560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13553,"mutability":"mutable","name":"left","nameLocation":"37389:4:15","nodeType":"VariableDeclaration","scope":13562,"src":"37381:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13552,"name":"uint256","nodeType":"ElementaryTypeName","src":"37381:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13555,"mutability":"mutable","name":"right","nameLocation":"37403:5:15","nodeType":"VariableDeclaration","scope":13562,"src":"37395:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13554,"name":"uint256","nodeType":"ElementaryTypeName","src":"37395:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13557,"mutability":"mutable","name":"maxDelta","nameLocation":"37418:8:15","nodeType":"VariableDeclaration","scope":13562,"src":"37410:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13556,"name":"uint256","nodeType":"ElementaryTypeName","src":"37410:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13559,"mutability":"mutable","name":"decimals","nameLocation":"37436:8:15","nodeType":"VariableDeclaration","scope":13562,"src":"37428:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13558,"name":"uint256","nodeType":"ElementaryTypeName","src":"37428:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37380:65:15"},"returnParameters":{"id":13561,"nodeType":"ParameterList","parameters":[],"src":"37459:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13576,"nodeType":"FunctionDefinition","src":"37675:182:15","nodes":[],"documentation":{"id":13563,"nodeType":"StructuredDocumentation","src":"37466:204:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"37684:24:15","parameters":{"id":13574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13565,"mutability":"mutable","name":"left","nameLocation":"37726:4:15","nodeType":"VariableDeclaration","scope":13576,"src":"37718:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13564,"name":"uint256","nodeType":"ElementaryTypeName","src":"37718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13567,"mutability":"mutable","name":"right","nameLocation":"37748:5:15","nodeType":"VariableDeclaration","scope":13576,"src":"37740:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13566,"name":"uint256","nodeType":"ElementaryTypeName","src":"37740:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13569,"mutability":"mutable","name":"maxDelta","nameLocation":"37771:8:15","nodeType":"VariableDeclaration","scope":13576,"src":"37763:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13568,"name":"uint256","nodeType":"ElementaryTypeName","src":"37763:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13571,"mutability":"mutable","name":"decimals","nameLocation":"37797:8:15","nodeType":"VariableDeclaration","scope":13576,"src":"37789:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13570,"name":"uint256","nodeType":"ElementaryTypeName","src":"37789:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13573,"mutability":"mutable","name":"error","nameLocation":"37831:5:15","nodeType":"VariableDeclaration","scope":13576,"src":"37815:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13572,"name":"string","nodeType":"ElementaryTypeName","src":"37815:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37708:134:15"},"returnParameters":{"id":13575,"nodeType":"ParameterList","parameters":[],"src":"37856:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13588,"nodeType":"FunctionDefinition","src":"38017:111:15","nodes":[],"documentation":{"id":13577,"nodeType":"StructuredDocumentation","src":"37863:149:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"38026:24:15","parameters":{"id":13586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13579,"mutability":"mutable","name":"left","nameLocation":"38058:4:15","nodeType":"VariableDeclaration","scope":13588,"src":"38051:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13578,"name":"int256","nodeType":"ElementaryTypeName","src":"38051:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13581,"mutability":"mutable","name":"right","nameLocation":"38071:5:15","nodeType":"VariableDeclaration","scope":13588,"src":"38064:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13580,"name":"int256","nodeType":"ElementaryTypeName","src":"38064:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13583,"mutability":"mutable","name":"maxDelta","nameLocation":"38086:8:15","nodeType":"VariableDeclaration","scope":13588,"src":"38078:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13582,"name":"uint256","nodeType":"ElementaryTypeName","src":"38078:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13585,"mutability":"mutable","name":"decimals","nameLocation":"38104:8:15","nodeType":"VariableDeclaration","scope":13588,"src":"38096:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13584,"name":"uint256","nodeType":"ElementaryTypeName","src":"38096:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38050:63:15"},"returnParameters":{"id":13587,"nodeType":"ParameterList","parameters":[],"src":"38127:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13602,"nodeType":"FunctionDefinition","src":"38342:180:15","nodes":[],"documentation":{"id":13589,"nodeType":"StructuredDocumentation","src":"38134:203:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"38351:24:15","parameters":{"id":13600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13591,"mutability":"mutable","name":"left","nameLocation":"38392:4:15","nodeType":"VariableDeclaration","scope":13602,"src":"38385:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13590,"name":"int256","nodeType":"ElementaryTypeName","src":"38385:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13593,"mutability":"mutable","name":"right","nameLocation":"38413:5:15","nodeType":"VariableDeclaration","scope":13602,"src":"38406:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13592,"name":"int256","nodeType":"ElementaryTypeName","src":"38406:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13595,"mutability":"mutable","name":"maxDelta","nameLocation":"38436:8:15","nodeType":"VariableDeclaration","scope":13602,"src":"38428:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13594,"name":"uint256","nodeType":"ElementaryTypeName","src":"38428:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13597,"mutability":"mutable","name":"decimals","nameLocation":"38462:8:15","nodeType":"VariableDeclaration","scope":13602,"src":"38454:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13596,"name":"uint256","nodeType":"ElementaryTypeName","src":"38454:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13599,"mutability":"mutable","name":"error","nameLocation":"38496:5:15","nodeType":"VariableDeclaration","scope":13602,"src":"38480:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13598,"name":"string","nodeType":"ElementaryTypeName","src":"38480:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38375:132:15"},"returnParameters":{"id":13601,"nodeType":"ParameterList","parameters":[],"src":"38521:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13612,"nodeType":"FunctionDefinition","src":"38626:88:15","nodes":[],"documentation":{"id":13603,"nodeType":"StructuredDocumentation","src":"38528:93:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"38635:17:15","parameters":{"id":13610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13605,"mutability":"mutable","name":"left","nameLocation":"38661:4:15","nodeType":"VariableDeclaration","scope":13612,"src":"38653:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13604,"name":"uint256","nodeType":"ElementaryTypeName","src":"38653:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13607,"mutability":"mutable","name":"right","nameLocation":"38675:5:15","nodeType":"VariableDeclaration","scope":13612,"src":"38667:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13606,"name":"uint256","nodeType":"ElementaryTypeName","src":"38667:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13609,"mutability":"mutable","name":"maxDelta","nameLocation":"38690:8:15","nodeType":"VariableDeclaration","scope":13612,"src":"38682:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13608,"name":"uint256","nodeType":"ElementaryTypeName","src":"38682:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38652:47:15"},"returnParameters":{"id":13611,"nodeType":"ParameterList","parameters":[],"src":"38713:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13624,"nodeType":"FunctionDefinition","src":"38880:111:15","nodes":[],"documentation":{"id":13613,"nodeType":"StructuredDocumentation","src":"38720:155:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"38889:17:15","parameters":{"id":13622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13615,"mutability":"mutable","name":"left","nameLocation":"38915:4:15","nodeType":"VariableDeclaration","scope":13624,"src":"38907:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13614,"name":"uint256","nodeType":"ElementaryTypeName","src":"38907:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13617,"mutability":"mutable","name":"right","nameLocation":"38929:5:15","nodeType":"VariableDeclaration","scope":13624,"src":"38921:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13616,"name":"uint256","nodeType":"ElementaryTypeName","src":"38921:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13619,"mutability":"mutable","name":"maxDelta","nameLocation":"38944:8:15","nodeType":"VariableDeclaration","scope":13624,"src":"38936:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13618,"name":"uint256","nodeType":"ElementaryTypeName","src":"38936:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13621,"mutability":"mutable","name":"error","nameLocation":"38970:5:15","nodeType":"VariableDeclaration","scope":13624,"src":"38954:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13620,"name":"string","nodeType":"ElementaryTypeName","src":"38954:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38906:70:15"},"returnParameters":{"id":13623,"nodeType":"ParameterList","parameters":[],"src":"38990:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13634,"nodeType":"FunctionDefinition","src":"39094:86:15","nodes":[],"documentation":{"id":13625,"nodeType":"StructuredDocumentation","src":"38997:92:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"39103:17:15","parameters":{"id":13632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13627,"mutability":"mutable","name":"left","nameLocation":"39128:4:15","nodeType":"VariableDeclaration","scope":13634,"src":"39121:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13626,"name":"int256","nodeType":"ElementaryTypeName","src":"39121:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13629,"mutability":"mutable","name":"right","nameLocation":"39141:5:15","nodeType":"VariableDeclaration","scope":13634,"src":"39134:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13628,"name":"int256","nodeType":"ElementaryTypeName","src":"39134:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13631,"mutability":"mutable","name":"maxDelta","nameLocation":"39156:8:15","nodeType":"VariableDeclaration","scope":13634,"src":"39148:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13630,"name":"uint256","nodeType":"ElementaryTypeName","src":"39148:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39120:45:15"},"returnParameters":{"id":13633,"nodeType":"ParameterList","parameters":[],"src":"39179:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13646,"nodeType":"FunctionDefinition","src":"39345:109:15","nodes":[],"documentation":{"id":13635,"nodeType":"StructuredDocumentation","src":"39186:154:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"39354:17:15","parameters":{"id":13644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13637,"mutability":"mutable","name":"left","nameLocation":"39379:4:15","nodeType":"VariableDeclaration","scope":13646,"src":"39372:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13636,"name":"int256","nodeType":"ElementaryTypeName","src":"39372:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13639,"mutability":"mutable","name":"right","nameLocation":"39392:5:15","nodeType":"VariableDeclaration","scope":13646,"src":"39385:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13638,"name":"int256","nodeType":"ElementaryTypeName","src":"39385:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13641,"mutability":"mutable","name":"maxDelta","nameLocation":"39407:8:15","nodeType":"VariableDeclaration","scope":13646,"src":"39399:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13640,"name":"uint256","nodeType":"ElementaryTypeName","src":"39399:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13643,"mutability":"mutable","name":"error","nameLocation":"39433:5:15","nodeType":"VariableDeclaration","scope":13646,"src":"39417:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13642,"name":"string","nodeType":"ElementaryTypeName","src":"39417:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39371:68:15"},"returnParameters":{"id":13645,"nodeType":"ParameterList","parameters":[],"src":"39453:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13658,"nodeType":"FunctionDefinition","src":"39725:136:15","nodes":[],"documentation":{"id":13647,"nodeType":"StructuredDocumentation","src":"39460:260:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"39734:24:15","parameters":{"id":13656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13649,"mutability":"mutable","name":"left","nameLocation":"39767:4:15","nodeType":"VariableDeclaration","scope":13658,"src":"39759:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13648,"name":"uint256","nodeType":"ElementaryTypeName","src":"39759:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13651,"mutability":"mutable","name":"right","nameLocation":"39781:5:15","nodeType":"VariableDeclaration","scope":13658,"src":"39773:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13650,"name":"uint256","nodeType":"ElementaryTypeName","src":"39773:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13653,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"39796:15:15","nodeType":"VariableDeclaration","scope":13658,"src":"39788:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13652,"name":"uint256","nodeType":"ElementaryTypeName","src":"39788:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13655,"mutability":"mutable","name":"decimals","nameLocation":"39821:8:15","nodeType":"VariableDeclaration","scope":13658,"src":"39813:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13654,"name":"uint256","nodeType":"ElementaryTypeName","src":"39813:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"39758:72:15"},"returnParameters":{"id":13657,"nodeType":"ParameterList","parameters":[],"src":"39860:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13672,"nodeType":"FunctionDefinition","src":"40186:189:15","nodes":[],"documentation":{"id":13659,"nodeType":"StructuredDocumentation","src":"39867:314:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"40195:24:15","parameters":{"id":13670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13661,"mutability":"mutable","name":"left","nameLocation":"40237:4:15","nodeType":"VariableDeclaration","scope":13672,"src":"40229:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13660,"name":"uint256","nodeType":"ElementaryTypeName","src":"40229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13663,"mutability":"mutable","name":"right","nameLocation":"40259:5:15","nodeType":"VariableDeclaration","scope":13672,"src":"40251:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13662,"name":"uint256","nodeType":"ElementaryTypeName","src":"40251:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13665,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"40282:15:15","nodeType":"VariableDeclaration","scope":13672,"src":"40274:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13664,"name":"uint256","nodeType":"ElementaryTypeName","src":"40274:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13667,"mutability":"mutable","name":"decimals","nameLocation":"40315:8:15","nodeType":"VariableDeclaration","scope":13672,"src":"40307:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13666,"name":"uint256","nodeType":"ElementaryTypeName","src":"40307:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13669,"mutability":"mutable","name":"error","nameLocation":"40349:5:15","nodeType":"VariableDeclaration","scope":13672,"src":"40333:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13668,"name":"string","nodeType":"ElementaryTypeName","src":"40333:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"40219:141:15"},"returnParameters":{"id":13671,"nodeType":"ParameterList","parameters":[],"src":"40374:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13684,"nodeType":"FunctionDefinition","src":"40645:134:15","nodes":[],"documentation":{"id":13673,"nodeType":"StructuredDocumentation","src":"40381:259:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"40654:24:15","parameters":{"id":13682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13675,"mutability":"mutable","name":"left","nameLocation":"40686:4:15","nodeType":"VariableDeclaration","scope":13684,"src":"40679:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13674,"name":"int256","nodeType":"ElementaryTypeName","src":"40679:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13677,"mutability":"mutable","name":"right","nameLocation":"40699:5:15","nodeType":"VariableDeclaration","scope":13684,"src":"40692:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13676,"name":"int256","nodeType":"ElementaryTypeName","src":"40692:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13679,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"40714:15:15","nodeType":"VariableDeclaration","scope":13684,"src":"40706:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13678,"name":"uint256","nodeType":"ElementaryTypeName","src":"40706:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13681,"mutability":"mutable","name":"decimals","nameLocation":"40739:8:15","nodeType":"VariableDeclaration","scope":13684,"src":"40731:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13680,"name":"uint256","nodeType":"ElementaryTypeName","src":"40731:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40678:70:15"},"returnParameters":{"id":13683,"nodeType":"ParameterList","parameters":[],"src":"40778:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13698,"nodeType":"FunctionDefinition","src":"41103:187:15","nodes":[],"documentation":{"id":13685,"nodeType":"StructuredDocumentation","src":"40785:313:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"41112:24:15","parameters":{"id":13696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13687,"mutability":"mutable","name":"left","nameLocation":"41153:4:15","nodeType":"VariableDeclaration","scope":13698,"src":"41146:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13686,"name":"int256","nodeType":"ElementaryTypeName","src":"41146:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13689,"mutability":"mutable","name":"right","nameLocation":"41174:5:15","nodeType":"VariableDeclaration","scope":13698,"src":"41167:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13688,"name":"int256","nodeType":"ElementaryTypeName","src":"41167:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13691,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"41197:15:15","nodeType":"VariableDeclaration","scope":13698,"src":"41189:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13690,"name":"uint256","nodeType":"ElementaryTypeName","src":"41189:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13693,"mutability":"mutable","name":"decimals","nameLocation":"41230:8:15","nodeType":"VariableDeclaration","scope":13698,"src":"41222:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13692,"name":"uint256","nodeType":"ElementaryTypeName","src":"41222:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13695,"mutability":"mutable","name":"error","nameLocation":"41264:5:15","nodeType":"VariableDeclaration","scope":13698,"src":"41248:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13694,"name":"string","nodeType":"ElementaryTypeName","src":"41248:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41136:139:15"},"returnParameters":{"id":13697,"nodeType":"ParameterList","parameters":[],"src":"41289:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13708,"nodeType":"FunctionDefinition","src":"41504:95:15","nodes":[],"documentation":{"id":13699,"nodeType":"StructuredDocumentation","src":"41296:203:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"41513:17:15","parameters":{"id":13706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13701,"mutability":"mutable","name":"left","nameLocation":"41539:4:15","nodeType":"VariableDeclaration","scope":13708,"src":"41531:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13700,"name":"uint256","nodeType":"ElementaryTypeName","src":"41531:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13703,"mutability":"mutable","name":"right","nameLocation":"41553:5:15","nodeType":"VariableDeclaration","scope":13708,"src":"41545:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13702,"name":"uint256","nodeType":"ElementaryTypeName","src":"41545:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13705,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"41568:15:15","nodeType":"VariableDeclaration","scope":13708,"src":"41560:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13704,"name":"uint256","nodeType":"ElementaryTypeName","src":"41560:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41530:54:15"},"returnParameters":{"id":13707,"nodeType":"ParameterList","parameters":[],"src":"41598:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13720,"nodeType":"FunctionDefinition","src":"41875:134:15","nodes":[],"documentation":{"id":13709,"nodeType":"StructuredDocumentation","src":"41605:265:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"41884:17:15","parameters":{"id":13718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13711,"mutability":"mutable","name":"left","nameLocation":"41910:4:15","nodeType":"VariableDeclaration","scope":13720,"src":"41902:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13710,"name":"uint256","nodeType":"ElementaryTypeName","src":"41902:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13713,"mutability":"mutable","name":"right","nameLocation":"41924:5:15","nodeType":"VariableDeclaration","scope":13720,"src":"41916:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13712,"name":"uint256","nodeType":"ElementaryTypeName","src":"41916:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13715,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"41939:15:15","nodeType":"VariableDeclaration","scope":13720,"src":"41931:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13714,"name":"uint256","nodeType":"ElementaryTypeName","src":"41931:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13717,"mutability":"mutable","name":"error","nameLocation":"41972:5:15","nodeType":"VariableDeclaration","scope":13720,"src":"41956:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13716,"name":"string","nodeType":"ElementaryTypeName","src":"41956:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41901:77:15"},"returnParameters":{"id":13719,"nodeType":"ParameterList","parameters":[],"src":"42008:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13730,"nodeType":"FunctionDefinition","src":"42222:93:15","nodes":[],"documentation":{"id":13721,"nodeType":"StructuredDocumentation","src":"42015:202:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"42231:17:15","parameters":{"id":13728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13723,"mutability":"mutable","name":"left","nameLocation":"42256:4:15","nodeType":"VariableDeclaration","scope":13730,"src":"42249:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13722,"name":"int256","nodeType":"ElementaryTypeName","src":"42249:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13725,"mutability":"mutable","name":"right","nameLocation":"42269:5:15","nodeType":"VariableDeclaration","scope":13730,"src":"42262:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13724,"name":"int256","nodeType":"ElementaryTypeName","src":"42262:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13727,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"42284:15:15","nodeType":"VariableDeclaration","scope":13730,"src":"42276:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13726,"name":"uint256","nodeType":"ElementaryTypeName","src":"42276:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42248:52:15"},"returnParameters":{"id":13729,"nodeType":"ParameterList","parameters":[],"src":"42314:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13742,"nodeType":"FunctionDefinition","src":"42590:132:15","nodes":[],"documentation":{"id":13731,"nodeType":"StructuredDocumentation","src":"42321:264:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"42599:17:15","parameters":{"id":13740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13733,"mutability":"mutable","name":"left","nameLocation":"42624:4:15","nodeType":"VariableDeclaration","scope":13742,"src":"42617:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13732,"name":"int256","nodeType":"ElementaryTypeName","src":"42617:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13735,"mutability":"mutable","name":"right","nameLocation":"42637:5:15","nodeType":"VariableDeclaration","scope":13742,"src":"42630:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13734,"name":"int256","nodeType":"ElementaryTypeName","src":"42630:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13737,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"42652:15:15","nodeType":"VariableDeclaration","scope":13742,"src":"42644:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13736,"name":"uint256","nodeType":"ElementaryTypeName","src":"42644:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13739,"mutability":"mutable","name":"error","nameLocation":"42685:5:15","nodeType":"VariableDeclaration","scope":13742,"src":"42669:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13738,"name":"string","nodeType":"ElementaryTypeName","src":"42669:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42616:75:15"},"returnParameters":{"id":13741,"nodeType":"ParameterList","parameters":[],"src":"42721:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13752,"nodeType":"FunctionDefinition","src":"42831:86:15","nodes":[],"documentation":{"id":13743,"nodeType":"StructuredDocumentation","src":"42728:98:15","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"42840:15:15","parameters":{"id":13750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13745,"mutability":"mutable","name":"left","nameLocation":"42864:4:15","nodeType":"VariableDeclaration","scope":13752,"src":"42856:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13744,"name":"uint256","nodeType":"ElementaryTypeName","src":"42856:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13747,"mutability":"mutable","name":"right","nameLocation":"42878:5:15","nodeType":"VariableDeclaration","scope":13752,"src":"42870:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13746,"name":"uint256","nodeType":"ElementaryTypeName","src":"42870:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13749,"mutability":"mutable","name":"decimals","nameLocation":"42893:8:15","nodeType":"VariableDeclaration","scope":13752,"src":"42885:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13748,"name":"uint256","nodeType":"ElementaryTypeName","src":"42885:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42855:47:15"},"returnParameters":{"id":13751,"nodeType":"ParameterList","parameters":[],"src":"42916:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13764,"nodeType":"FunctionDefinition","src":"43088:109:15","nodes":[],"documentation":{"id":13753,"nodeType":"StructuredDocumentation","src":"42923:160:15","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"43097:15:15","parameters":{"id":13762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13755,"mutability":"mutable","name":"left","nameLocation":"43121:4:15","nodeType":"VariableDeclaration","scope":13764,"src":"43113:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13754,"name":"uint256","nodeType":"ElementaryTypeName","src":"43113:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13757,"mutability":"mutable","name":"right","nameLocation":"43135:5:15","nodeType":"VariableDeclaration","scope":13764,"src":"43127:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13756,"name":"uint256","nodeType":"ElementaryTypeName","src":"43127:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13759,"mutability":"mutable","name":"decimals","nameLocation":"43150:8:15","nodeType":"VariableDeclaration","scope":13764,"src":"43142:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13758,"name":"uint256","nodeType":"ElementaryTypeName","src":"43142:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13761,"mutability":"mutable","name":"error","nameLocation":"43176:5:15","nodeType":"VariableDeclaration","scope":13764,"src":"43160:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13760,"name":"string","nodeType":"ElementaryTypeName","src":"43160:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43112:70:15"},"returnParameters":{"id":13763,"nodeType":"ParameterList","parameters":[],"src":"43196:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13774,"nodeType":"FunctionDefinition","src":"43305:84:15","nodes":[],"documentation":{"id":13765,"nodeType":"StructuredDocumentation","src":"43203:97:15","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"43314:15:15","parameters":{"id":13772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13767,"mutability":"mutable","name":"left","nameLocation":"43337:4:15","nodeType":"VariableDeclaration","scope":13774,"src":"43330:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13766,"name":"int256","nodeType":"ElementaryTypeName","src":"43330:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13769,"mutability":"mutable","name":"right","nameLocation":"43350:5:15","nodeType":"VariableDeclaration","scope":13774,"src":"43343:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13768,"name":"int256","nodeType":"ElementaryTypeName","src":"43343:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13771,"mutability":"mutable","name":"decimals","nameLocation":"43365:8:15","nodeType":"VariableDeclaration","scope":13774,"src":"43357:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13770,"name":"uint256","nodeType":"ElementaryTypeName","src":"43357:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43329:45:15"},"returnParameters":{"id":13773,"nodeType":"ParameterList","parameters":[],"src":"43388:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13786,"nodeType":"FunctionDefinition","src":"43559:107:15","nodes":[],"documentation":{"id":13775,"nodeType":"StructuredDocumentation","src":"43395:159:15","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"43568:15:15","parameters":{"id":13784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13777,"mutability":"mutable","name":"left","nameLocation":"43591:4:15","nodeType":"VariableDeclaration","scope":13786,"src":"43584:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13776,"name":"int256","nodeType":"ElementaryTypeName","src":"43584:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13779,"mutability":"mutable","name":"right","nameLocation":"43604:5:15","nodeType":"VariableDeclaration","scope":13786,"src":"43597:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13778,"name":"int256","nodeType":"ElementaryTypeName","src":"43597:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":13781,"mutability":"mutable","name":"decimals","nameLocation":"43619:8:15","nodeType":"VariableDeclaration","scope":13786,"src":"43611:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13780,"name":"uint256","nodeType":"ElementaryTypeName","src":"43611:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13783,"mutability":"mutable","name":"error","nameLocation":"43645:5:15","nodeType":"VariableDeclaration","scope":13786,"src":"43629:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13782,"name":"string","nodeType":"ElementaryTypeName","src":"43629:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43583:68:15"},"returnParameters":{"id":13785,"nodeType":"ParameterList","parameters":[],"src":"43665:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13794,"nodeType":"FunctionDefinition","src":"43722:55:15","nodes":[],"documentation":{"id":13787,"nodeType":"StructuredDocumentation","src":"43672:45:15","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"43731:8:15","parameters":{"id":13792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13789,"mutability":"mutable","name":"left","nameLocation":"43745:4:15","nodeType":"VariableDeclaration","scope":13794,"src":"43740:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13788,"name":"bool","nodeType":"ElementaryTypeName","src":"43740:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13791,"mutability":"mutable","name":"right","nameLocation":"43756:5:15","nodeType":"VariableDeclaration","scope":13794,"src":"43751:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13790,"name":"bool","nodeType":"ElementaryTypeName","src":"43751:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"43739:23:15"},"returnParameters":{"id":13793,"nodeType":"ParameterList","parameters":[],"src":"43776:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13804,"nodeType":"FunctionDefinition","src":"43890:78:15","nodes":[],"documentation":{"id":13795,"nodeType":"StructuredDocumentation","src":"43783:102:15","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"43899:8:15","parameters":{"id":13802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13797,"mutability":"mutable","name":"left","nameLocation":"43913:4:15","nodeType":"VariableDeclaration","scope":13804,"src":"43908:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13796,"name":"bool","nodeType":"ElementaryTypeName","src":"43908:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13799,"mutability":"mutable","name":"right","nameLocation":"43924:5:15","nodeType":"VariableDeclaration","scope":13804,"src":"43919:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13798,"name":"bool","nodeType":"ElementaryTypeName","src":"43919:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13801,"mutability":"mutable","name":"error","nameLocation":"43947:5:15","nodeType":"VariableDeclaration","scope":13804,"src":"43931:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13800,"name":"string","nodeType":"ElementaryTypeName","src":"43931:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43907:46:15"},"returnParameters":{"id":13803,"nodeType":"ParameterList","parameters":[],"src":"43967:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13812,"nodeType":"FunctionDefinition","src":"44026:77:15","nodes":[],"documentation":{"id":13805,"nodeType":"StructuredDocumentation","src":"43974:47:15","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"44035:8:15","parameters":{"id":13810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13807,"mutability":"mutable","name":"left","nameLocation":"44060:4:15","nodeType":"VariableDeclaration","scope":13812,"src":"44044:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13806,"name":"string","nodeType":"ElementaryTypeName","src":"44044:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13809,"mutability":"mutable","name":"right","nameLocation":"44082:5:15","nodeType":"VariableDeclaration","scope":13812,"src":"44066:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13808,"name":"string","nodeType":"ElementaryTypeName","src":"44066:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44043:45:15"},"returnParameters":{"id":13811,"nodeType":"ParameterList","parameters":[],"src":"44102:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13822,"nodeType":"FunctionDefinition","src":"44218:100:15","nodes":[],"documentation":{"id":13813,"nodeType":"StructuredDocumentation","src":"44109:104:15","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"44227:8:15","parameters":{"id":13820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13815,"mutability":"mutable","name":"left","nameLocation":"44252:4:15","nodeType":"VariableDeclaration","scope":13822,"src":"44236:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13814,"name":"string","nodeType":"ElementaryTypeName","src":"44236:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13817,"mutability":"mutable","name":"right","nameLocation":"44274:5:15","nodeType":"VariableDeclaration","scope":13822,"src":"44258:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13816,"name":"string","nodeType":"ElementaryTypeName","src":"44258:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13819,"mutability":"mutable","name":"error","nameLocation":"44297:5:15","nodeType":"VariableDeclaration","scope":13822,"src":"44281:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13818,"name":"string","nodeType":"ElementaryTypeName","src":"44281:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44235:68:15"},"returnParameters":{"id":13821,"nodeType":"ParameterList","parameters":[],"src":"44317:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13830,"nodeType":"FunctionDefinition","src":"44375:75:15","nodes":[],"documentation":{"id":13823,"nodeType":"StructuredDocumentation","src":"44324:46:15","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"44384:8:15","parameters":{"id":13828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13825,"mutability":"mutable","name":"left","nameLocation":"44408:4:15","nodeType":"VariableDeclaration","scope":13830,"src":"44393:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13824,"name":"bytes","nodeType":"ElementaryTypeName","src":"44393:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13827,"mutability":"mutable","name":"right","nameLocation":"44429:5:15","nodeType":"VariableDeclaration","scope":13830,"src":"44414:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13826,"name":"bytes","nodeType":"ElementaryTypeName","src":"44414:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"44392:43:15"},"returnParameters":{"id":13829,"nodeType":"ParameterList","parameters":[],"src":"44449:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13840,"nodeType":"FunctionDefinition","src":"44564:98:15","nodes":[],"documentation":{"id":13831,"nodeType":"StructuredDocumentation","src":"44456:103:15","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"44573:8:15","parameters":{"id":13838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13833,"mutability":"mutable","name":"left","nameLocation":"44597:4:15","nodeType":"VariableDeclaration","scope":13840,"src":"44582:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13832,"name":"bytes","nodeType":"ElementaryTypeName","src":"44582:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13835,"mutability":"mutable","name":"right","nameLocation":"44618:5:15","nodeType":"VariableDeclaration","scope":13840,"src":"44603:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13834,"name":"bytes","nodeType":"ElementaryTypeName","src":"44603:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13837,"mutability":"mutable","name":"error","nameLocation":"44641:5:15","nodeType":"VariableDeclaration","scope":13840,"src":"44625:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13836,"name":"string","nodeType":"ElementaryTypeName","src":"44625:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44581:66:15"},"returnParameters":{"id":13839,"nodeType":"ParameterList","parameters":[],"src":"44661:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13850,"nodeType":"FunctionDefinition","src":"44728:77:15","nodes":[],"documentation":{"id":13841,"nodeType":"StructuredDocumentation","src":"44668:55:15","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"44737:8:15","parameters":{"id":13848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13844,"mutability":"mutable","name":"left","nameLocation":"44762:4:15","nodeType":"VariableDeclaration","scope":13850,"src":"44746:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13842,"name":"bool","nodeType":"ElementaryTypeName","src":"44746:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13843,"nodeType":"ArrayTypeName","src":"44746:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":13847,"mutability":"mutable","name":"right","nameLocation":"44784:5:15","nodeType":"VariableDeclaration","scope":13850,"src":"44768:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13845,"name":"bool","nodeType":"ElementaryTypeName","src":"44768:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13846,"nodeType":"ArrayTypeName","src":"44768:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"44745:45:15"},"returnParameters":{"id":13849,"nodeType":"ParameterList","parameters":[],"src":"44804:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13862,"nodeType":"FunctionDefinition","src":"44928:100:15","nodes":[],"documentation":{"id":13851,"nodeType":"StructuredDocumentation","src":"44811:112:15","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"44937:8:15","parameters":{"id":13860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13854,"mutability":"mutable","name":"left","nameLocation":"44962:4:15","nodeType":"VariableDeclaration","scope":13862,"src":"44946:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13852,"name":"bool","nodeType":"ElementaryTypeName","src":"44946:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13853,"nodeType":"ArrayTypeName","src":"44946:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":13857,"mutability":"mutable","name":"right","nameLocation":"44984:5:15","nodeType":"VariableDeclaration","scope":13862,"src":"44968:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13855,"name":"bool","nodeType":"ElementaryTypeName","src":"44968:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13856,"nodeType":"ArrayTypeName","src":"44968:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":13859,"mutability":"mutable","name":"error","nameLocation":"45007:5:15","nodeType":"VariableDeclaration","scope":13862,"src":"44991:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13858,"name":"string","nodeType":"ElementaryTypeName","src":"44991:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44945:68:15"},"returnParameters":{"id":13861,"nodeType":"ParameterList","parameters":[],"src":"45027:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13872,"nodeType":"FunctionDefinition","src":"45096:83:15","nodes":[],"documentation":{"id":13863,"nodeType":"StructuredDocumentation","src":"45034:57:15","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"45105:8:15","parameters":{"id":13870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13866,"mutability":"mutable","name":"left","nameLocation":"45133:4:15","nodeType":"VariableDeclaration","scope":13872,"src":"45114:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13864,"name":"uint256","nodeType":"ElementaryTypeName","src":"45114:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13865,"nodeType":"ArrayTypeName","src":"45114:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13869,"mutability":"mutable","name":"right","nameLocation":"45158:5:15","nodeType":"VariableDeclaration","scope":13872,"src":"45139:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13867,"name":"uint256","nodeType":"ElementaryTypeName","src":"45139:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13868,"nodeType":"ArrayTypeName","src":"45139:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"45113:51:15"},"returnParameters":{"id":13871,"nodeType":"ParameterList","parameters":[],"src":"45178:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13884,"nodeType":"FunctionDefinition","src":"45305:106:15","nodes":[],"documentation":{"id":13873,"nodeType":"StructuredDocumentation","src":"45185:115:15","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"45314:8:15","parameters":{"id":13882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13876,"mutability":"mutable","name":"left","nameLocation":"45342:4:15","nodeType":"VariableDeclaration","scope":13884,"src":"45323:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13874,"name":"uint256","nodeType":"ElementaryTypeName","src":"45323:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13875,"nodeType":"ArrayTypeName","src":"45323:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13879,"mutability":"mutable","name":"right","nameLocation":"45367:5:15","nodeType":"VariableDeclaration","scope":13884,"src":"45348:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13877,"name":"uint256","nodeType":"ElementaryTypeName","src":"45348:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13878,"nodeType":"ArrayTypeName","src":"45348:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":13881,"mutability":"mutable","name":"error","nameLocation":"45390:5:15","nodeType":"VariableDeclaration","scope":13884,"src":"45374:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13880,"name":"string","nodeType":"ElementaryTypeName","src":"45374:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45322:74:15"},"returnParameters":{"id":13883,"nodeType":"ParameterList","parameters":[],"src":"45410:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13894,"nodeType":"FunctionDefinition","src":"45479:81:15","nodes":[],"documentation":{"id":13885,"nodeType":"StructuredDocumentation","src":"45417:57:15","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"45488:8:15","parameters":{"id":13892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13888,"mutability":"mutable","name":"left","nameLocation":"45515:4:15","nodeType":"VariableDeclaration","scope":13894,"src":"45497:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13886,"name":"int256","nodeType":"ElementaryTypeName","src":"45497:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13887,"nodeType":"ArrayTypeName","src":"45497:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":13891,"mutability":"mutable","name":"right","nameLocation":"45539:5:15","nodeType":"VariableDeclaration","scope":13894,"src":"45521:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13889,"name":"int256","nodeType":"ElementaryTypeName","src":"45521:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13890,"nodeType":"ArrayTypeName","src":"45521:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"45496:49:15"},"returnParameters":{"id":13893,"nodeType":"ParameterList","parameters":[],"src":"45559:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13906,"nodeType":"FunctionDefinition","src":"45685:104:15","nodes":[],"documentation":{"id":13895,"nodeType":"StructuredDocumentation","src":"45566:114:15","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"45694:8:15","parameters":{"id":13904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13898,"mutability":"mutable","name":"left","nameLocation":"45721:4:15","nodeType":"VariableDeclaration","scope":13906,"src":"45703:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13896,"name":"int256","nodeType":"ElementaryTypeName","src":"45703:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13897,"nodeType":"ArrayTypeName","src":"45703:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":13901,"mutability":"mutable","name":"right","nameLocation":"45745:5:15","nodeType":"VariableDeclaration","scope":13906,"src":"45727:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13899,"name":"int256","nodeType":"ElementaryTypeName","src":"45727:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13900,"nodeType":"ArrayTypeName","src":"45727:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":13903,"mutability":"mutable","name":"error","nameLocation":"45768:5:15","nodeType":"VariableDeclaration","scope":13906,"src":"45752:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13902,"name":"string","nodeType":"ElementaryTypeName","src":"45752:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45702:72:15"},"returnParameters":{"id":13905,"nodeType":"ParameterList","parameters":[],"src":"45788:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13914,"nodeType":"FunctionDefinition","src":"45848:61:15","nodes":[],"documentation":{"id":13907,"nodeType":"StructuredDocumentation","src":"45795:48:15","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"45857:8:15","parameters":{"id":13912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13909,"mutability":"mutable","name":"left","nameLocation":"45874:4:15","nodeType":"VariableDeclaration","scope":13914,"src":"45866:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13908,"name":"uint256","nodeType":"ElementaryTypeName","src":"45866:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13911,"mutability":"mutable","name":"right","nameLocation":"45888:5:15","nodeType":"VariableDeclaration","scope":13914,"src":"45880:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13910,"name":"uint256","nodeType":"ElementaryTypeName","src":"45880:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45865:29:15"},"returnParameters":{"id":13913,"nodeType":"ParameterList","parameters":[],"src":"45908:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13924,"nodeType":"FunctionDefinition","src":"45978:83:15","nodes":[],"documentation":{"id":13915,"nodeType":"StructuredDocumentation","src":"45915:58:15","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"45987:8:15","parameters":{"id":13922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13918,"mutability":"mutable","name":"left","nameLocation":"46015:4:15","nodeType":"VariableDeclaration","scope":13924,"src":"45996:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13916,"name":"address","nodeType":"ElementaryTypeName","src":"45996:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13917,"nodeType":"ArrayTypeName","src":"45996:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":13921,"mutability":"mutable","name":"right","nameLocation":"46040:5:15","nodeType":"VariableDeclaration","scope":13924,"src":"46021:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13919,"name":"address","nodeType":"ElementaryTypeName","src":"46021:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13920,"nodeType":"ArrayTypeName","src":"46021:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"45995:51:15"},"returnParameters":{"id":13923,"nodeType":"ParameterList","parameters":[],"src":"46060:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13936,"nodeType":"FunctionDefinition","src":"46187:106:15","nodes":[],"documentation":{"id":13925,"nodeType":"StructuredDocumentation","src":"46067:115:15","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"46196:8:15","parameters":{"id":13934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13928,"mutability":"mutable","name":"left","nameLocation":"46224:4:15","nodeType":"VariableDeclaration","scope":13936,"src":"46205:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13926,"name":"address","nodeType":"ElementaryTypeName","src":"46205:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13927,"nodeType":"ArrayTypeName","src":"46205:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":13931,"mutability":"mutable","name":"right","nameLocation":"46249:5:15","nodeType":"VariableDeclaration","scope":13936,"src":"46230:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13929,"name":"address","nodeType":"ElementaryTypeName","src":"46230:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13930,"nodeType":"ArrayTypeName","src":"46230:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":13933,"mutability":"mutable","name":"error","nameLocation":"46272:5:15","nodeType":"VariableDeclaration","scope":13936,"src":"46256:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13932,"name":"string","nodeType":"ElementaryTypeName","src":"46256:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46204:74:15"},"returnParameters":{"id":13935,"nodeType":"ParameterList","parameters":[],"src":"46292:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13946,"nodeType":"FunctionDefinition","src":"46362:83:15","nodes":[],"documentation":{"id":13937,"nodeType":"StructuredDocumentation","src":"46299:58:15","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"46371:8:15","parameters":{"id":13944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13940,"mutability":"mutable","name":"left","nameLocation":"46399:4:15","nodeType":"VariableDeclaration","scope":13946,"src":"46380:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46380:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13939,"nodeType":"ArrayTypeName","src":"46380:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13943,"mutability":"mutable","name":"right","nameLocation":"46424:5:15","nodeType":"VariableDeclaration","scope":13946,"src":"46405:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13941,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46405:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13942,"nodeType":"ArrayTypeName","src":"46405:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"46379:51:15"},"returnParameters":{"id":13945,"nodeType":"ParameterList","parameters":[],"src":"46444:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13958,"nodeType":"FunctionDefinition","src":"46571:106:15","nodes":[],"documentation":{"id":13947,"nodeType":"StructuredDocumentation","src":"46451:115:15","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"46580:8:15","parameters":{"id":13956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13950,"mutability":"mutable","name":"left","nameLocation":"46608:4:15","nodeType":"VariableDeclaration","scope":13958,"src":"46589:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46589:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13949,"nodeType":"ArrayTypeName","src":"46589:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13953,"mutability":"mutable","name":"right","nameLocation":"46633:5:15","nodeType":"VariableDeclaration","scope":13958,"src":"46614:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13951,"name":"bytes32","nodeType":"ElementaryTypeName","src":"46614:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13952,"nodeType":"ArrayTypeName","src":"46614:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13955,"mutability":"mutable","name":"error","nameLocation":"46656:5:15","nodeType":"VariableDeclaration","scope":13958,"src":"46640:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13954,"name":"string","nodeType":"ElementaryTypeName","src":"46640:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46588:74:15"},"returnParameters":{"id":13957,"nodeType":"ParameterList","parameters":[],"src":"46676:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13968,"nodeType":"FunctionDefinition","src":"46745:81:15","nodes":[],"documentation":{"id":13959,"nodeType":"StructuredDocumentation","src":"46683:57:15","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"46754:8:15","parameters":{"id":13966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13962,"mutability":"mutable","name":"left","nameLocation":"46781:4:15","nodeType":"VariableDeclaration","scope":13968,"src":"46763:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13960,"name":"string","nodeType":"ElementaryTypeName","src":"46763:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13961,"nodeType":"ArrayTypeName","src":"46763:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":13965,"mutability":"mutable","name":"right","nameLocation":"46805:5:15","nodeType":"VariableDeclaration","scope":13968,"src":"46787:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13963,"name":"string","nodeType":"ElementaryTypeName","src":"46787:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13964,"nodeType":"ArrayTypeName","src":"46787:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"46762:49:15"},"returnParameters":{"id":13967,"nodeType":"ParameterList","parameters":[],"src":"46825:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13980,"nodeType":"FunctionDefinition","src":"46951:104:15","nodes":[],"documentation":{"id":13969,"nodeType":"StructuredDocumentation","src":"46832:114:15","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"46960:8:15","parameters":{"id":13978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13972,"mutability":"mutable","name":"left","nameLocation":"46987:4:15","nodeType":"VariableDeclaration","scope":13980,"src":"46969:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13970,"name":"string","nodeType":"ElementaryTypeName","src":"46969:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13971,"nodeType":"ArrayTypeName","src":"46969:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":13975,"mutability":"mutable","name":"right","nameLocation":"47011:5:15","nodeType":"VariableDeclaration","scope":13980,"src":"46993:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13973,"name":"string","nodeType":"ElementaryTypeName","src":"46993:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13974,"nodeType":"ArrayTypeName","src":"46993:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":13977,"mutability":"mutable","name":"error","nameLocation":"47034:5:15","nodeType":"VariableDeclaration","scope":13980,"src":"47018:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13976,"name":"string","nodeType":"ElementaryTypeName","src":"47018:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46968:72:15"},"returnParameters":{"id":13979,"nodeType":"ParameterList","parameters":[],"src":"47054:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13990,"nodeType":"FunctionDefinition","src":"47122:79:15","nodes":[],"documentation":{"id":13981,"nodeType":"StructuredDocumentation","src":"47061:56:15","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"47131:8:15","parameters":{"id":13988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13984,"mutability":"mutable","name":"left","nameLocation":"47157:4:15","nodeType":"VariableDeclaration","scope":13990,"src":"47140:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13982,"name":"bytes","nodeType":"ElementaryTypeName","src":"47140:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13983,"nodeType":"ArrayTypeName","src":"47140:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":13987,"mutability":"mutable","name":"right","nameLocation":"47180:5:15","nodeType":"VariableDeclaration","scope":13990,"src":"47163:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13985,"name":"bytes","nodeType":"ElementaryTypeName","src":"47163:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13986,"nodeType":"ArrayTypeName","src":"47163:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"47139:47:15"},"returnParameters":{"id":13989,"nodeType":"ParameterList","parameters":[],"src":"47200:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14002,"nodeType":"FunctionDefinition","src":"47325:102:15","nodes":[],"documentation":{"id":13991,"nodeType":"StructuredDocumentation","src":"47207:113:15","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"47334:8:15","parameters":{"id":14000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13994,"mutability":"mutable","name":"left","nameLocation":"47360:4:15","nodeType":"VariableDeclaration","scope":14002,"src":"47343:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13992,"name":"bytes","nodeType":"ElementaryTypeName","src":"47343:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13993,"nodeType":"ArrayTypeName","src":"47343:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":13997,"mutability":"mutable","name":"right","nameLocation":"47383:5:15","nodeType":"VariableDeclaration","scope":14002,"src":"47366:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13995,"name":"bytes","nodeType":"ElementaryTypeName","src":"47366:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13996,"nodeType":"ArrayTypeName","src":"47366:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":13999,"mutability":"mutable","name":"error","nameLocation":"47406:5:15","nodeType":"VariableDeclaration","scope":14002,"src":"47390:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13998,"name":"string","nodeType":"ElementaryTypeName","src":"47390:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47342:70:15"},"returnParameters":{"id":14001,"nodeType":"ParameterList","parameters":[],"src":"47426:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14012,"nodeType":"FunctionDefinition","src":"47543:84:15","nodes":[],"documentation":{"id":14003,"nodeType":"StructuredDocumentation","src":"47433:105:15","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"47552:8:15","parameters":{"id":14010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14005,"mutability":"mutable","name":"left","nameLocation":"47569:4:15","nodeType":"VariableDeclaration","scope":14012,"src":"47561:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14004,"name":"uint256","nodeType":"ElementaryTypeName","src":"47561:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14007,"mutability":"mutable","name":"right","nameLocation":"47583:5:15","nodeType":"VariableDeclaration","scope":14012,"src":"47575:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14006,"name":"uint256","nodeType":"ElementaryTypeName","src":"47575:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14009,"mutability":"mutable","name":"error","nameLocation":"47606:5:15","nodeType":"VariableDeclaration","scope":14012,"src":"47590:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14008,"name":"string","nodeType":"ElementaryTypeName","src":"47590:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47560:52:15"},"returnParameters":{"id":14011,"nodeType":"ParameterList","parameters":[],"src":"47626:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14020,"nodeType":"FunctionDefinition","src":"47685:59:15","nodes":[],"documentation":{"id":14013,"nodeType":"StructuredDocumentation","src":"47633:47:15","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"47694:8:15","parameters":{"id":14018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14015,"mutability":"mutable","name":"left","nameLocation":"47710:4:15","nodeType":"VariableDeclaration","scope":14020,"src":"47703:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14014,"name":"int256","nodeType":"ElementaryTypeName","src":"47703:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14017,"mutability":"mutable","name":"right","nameLocation":"47723:5:15","nodeType":"VariableDeclaration","scope":14020,"src":"47716:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14016,"name":"int256","nodeType":"ElementaryTypeName","src":"47716:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"47702:27:15"},"returnParameters":{"id":14019,"nodeType":"ParameterList","parameters":[],"src":"47743:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14030,"nodeType":"FunctionDefinition","src":"47859:82:15","nodes":[],"documentation":{"id":14021,"nodeType":"StructuredDocumentation","src":"47750:104:15","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"47868:8:15","parameters":{"id":14028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14023,"mutability":"mutable","name":"left","nameLocation":"47884:4:15","nodeType":"VariableDeclaration","scope":14030,"src":"47877:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14022,"name":"int256","nodeType":"ElementaryTypeName","src":"47877:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14025,"mutability":"mutable","name":"right","nameLocation":"47897:5:15","nodeType":"VariableDeclaration","scope":14030,"src":"47890:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14024,"name":"int256","nodeType":"ElementaryTypeName","src":"47890:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14027,"mutability":"mutable","name":"error","nameLocation":"47920:5:15","nodeType":"VariableDeclaration","scope":14030,"src":"47904:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14026,"name":"string","nodeType":"ElementaryTypeName","src":"47904:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47876:50:15"},"returnParameters":{"id":14029,"nodeType":"ParameterList","parameters":[],"src":"47940:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14038,"nodeType":"FunctionDefinition","src":"48000:61:15","nodes":[],"documentation":{"id":14031,"nodeType":"StructuredDocumentation","src":"47947:48:15","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48009:8:15","parameters":{"id":14036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14033,"mutability":"mutable","name":"left","nameLocation":"48026:4:15","nodeType":"VariableDeclaration","scope":14038,"src":"48018:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14032,"name":"address","nodeType":"ElementaryTypeName","src":"48018:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14035,"mutability":"mutable","name":"right","nameLocation":"48040:5:15","nodeType":"VariableDeclaration","scope":14038,"src":"48032:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14034,"name":"address","nodeType":"ElementaryTypeName","src":"48032:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"48017:29:15"},"returnParameters":{"id":14037,"nodeType":"ParameterList","parameters":[],"src":"48060:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14048,"nodeType":"FunctionDefinition","src":"48177:84:15","nodes":[],"documentation":{"id":14039,"nodeType":"StructuredDocumentation","src":"48067:105:15","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48186:8:15","parameters":{"id":14046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14041,"mutability":"mutable","name":"left","nameLocation":"48203:4:15","nodeType":"VariableDeclaration","scope":14048,"src":"48195:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14040,"name":"address","nodeType":"ElementaryTypeName","src":"48195:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14043,"mutability":"mutable","name":"right","nameLocation":"48217:5:15","nodeType":"VariableDeclaration","scope":14048,"src":"48209:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14042,"name":"address","nodeType":"ElementaryTypeName","src":"48209:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14045,"mutability":"mutable","name":"error","nameLocation":"48240:5:15","nodeType":"VariableDeclaration","scope":14048,"src":"48224:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14044,"name":"string","nodeType":"ElementaryTypeName","src":"48224:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48194:52:15"},"returnParameters":{"id":14047,"nodeType":"ParameterList","parameters":[],"src":"48260:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14056,"nodeType":"FunctionDefinition","src":"48320:61:15","nodes":[],"documentation":{"id":14049,"nodeType":"StructuredDocumentation","src":"48267:48:15","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48329:8:15","parameters":{"id":14054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14051,"mutability":"mutable","name":"left","nameLocation":"48346:4:15","nodeType":"VariableDeclaration","scope":14056,"src":"48338:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14050,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48338:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14053,"mutability":"mutable","name":"right","nameLocation":"48360:5:15","nodeType":"VariableDeclaration","scope":14056,"src":"48352:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48352:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"48337:29:15"},"returnParameters":{"id":14055,"nodeType":"ParameterList","parameters":[],"src":"48380:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14066,"nodeType":"FunctionDefinition","src":"48497:84:15","nodes":[],"documentation":{"id":14057,"nodeType":"StructuredDocumentation","src":"48387:105:15","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"48506:8:15","parameters":{"id":14064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14059,"mutability":"mutable","name":"left","nameLocation":"48523:4:15","nodeType":"VariableDeclaration","scope":14066,"src":"48515:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48515:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14061,"mutability":"mutable","name":"right","nameLocation":"48537:5:15","nodeType":"VariableDeclaration","scope":14066,"src":"48529:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"48529:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14063,"mutability":"mutable","name":"error","nameLocation":"48560:5:15","nodeType":"VariableDeclaration","scope":14066,"src":"48544:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14062,"name":"string","nodeType":"ElementaryTypeName","src":"48544:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48514:52:15"},"returnParameters":{"id":14065,"nodeType":"ParameterList","parameters":[],"src":"48580:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14072,"nodeType":"FunctionDefinition","src":"48638:51:15","nodes":[],"documentation":{"id":14067,"nodeType":"StructuredDocumentation","src":"48587:46:15","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"48647:11:15","parameters":{"id":14070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14069,"mutability":"mutable","name":"condition","nameLocation":"48664:9:15","nodeType":"VariableDeclaration","scope":14072,"src":"48659:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14068,"name":"bool","nodeType":"ElementaryTypeName","src":"48659:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"48658:16:15"},"returnParameters":{"id":14071,"nodeType":"ParameterList","parameters":[],"src":"48688:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14080,"nodeType":"FunctionDefinition","src":"48803:74:15","nodes":[],"documentation":{"id":14073,"nodeType":"StructuredDocumentation","src":"48695:103:15","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"48812:11:15","parameters":{"id":14078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14075,"mutability":"mutable","name":"condition","nameLocation":"48829:9:15","nodeType":"VariableDeclaration","scope":14080,"src":"48824:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14074,"name":"bool","nodeType":"ElementaryTypeName","src":"48824:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14077,"mutability":"mutable","name":"error","nameLocation":"48856:5:15","nodeType":"VariableDeclaration","scope":14080,"src":"48840:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14076,"name":"string","nodeType":"ElementaryTypeName","src":"48840:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48823:39:15"},"returnParameters":{"id":14079,"nodeType":"ParameterList","parameters":[],"src":"48876:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14090,"nodeType":"FunctionDefinition","src":"49038:86:15","nodes":[],"documentation":{"id":14081,"nodeType":"StructuredDocumentation","src":"48883:150:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"49047:15:15","parameters":{"id":14088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14083,"mutability":"mutable","name":"left","nameLocation":"49071:4:15","nodeType":"VariableDeclaration","scope":14090,"src":"49063:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14082,"name":"uint256","nodeType":"ElementaryTypeName","src":"49063:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14085,"mutability":"mutable","name":"right","nameLocation":"49085:5:15","nodeType":"VariableDeclaration","scope":14090,"src":"49077:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14084,"name":"uint256","nodeType":"ElementaryTypeName","src":"49077:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14087,"mutability":"mutable","name":"decimals","nameLocation":"49100:8:15","nodeType":"VariableDeclaration","scope":14090,"src":"49092:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14086,"name":"uint256","nodeType":"ElementaryTypeName","src":"49092:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49062:47:15"},"returnParameters":{"id":14089,"nodeType":"ParameterList","parameters":[],"src":"49123:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14102,"nodeType":"FunctionDefinition","src":"49339:109:15","nodes":[],"documentation":{"id":14091,"nodeType":"StructuredDocumentation","src":"49130:204:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"49348:15:15","parameters":{"id":14100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14093,"mutability":"mutable","name":"left","nameLocation":"49372:4:15","nodeType":"VariableDeclaration","scope":14102,"src":"49364:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14092,"name":"uint256","nodeType":"ElementaryTypeName","src":"49364:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14095,"mutability":"mutable","name":"right","nameLocation":"49386:5:15","nodeType":"VariableDeclaration","scope":14102,"src":"49378:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14094,"name":"uint256","nodeType":"ElementaryTypeName","src":"49378:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14097,"mutability":"mutable","name":"decimals","nameLocation":"49401:8:15","nodeType":"VariableDeclaration","scope":14102,"src":"49393:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14096,"name":"uint256","nodeType":"ElementaryTypeName","src":"49393:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14099,"mutability":"mutable","name":"error","nameLocation":"49427:5:15","nodeType":"VariableDeclaration","scope":14102,"src":"49411:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14098,"name":"string","nodeType":"ElementaryTypeName","src":"49411:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49363:70:15"},"returnParameters":{"id":14101,"nodeType":"ParameterList","parameters":[],"src":"49447:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14112,"nodeType":"FunctionDefinition","src":"49608:84:15","nodes":[],"documentation":{"id":14103,"nodeType":"StructuredDocumentation","src":"49454:149:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"49617:15:15","parameters":{"id":14110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14105,"mutability":"mutable","name":"left","nameLocation":"49640:4:15","nodeType":"VariableDeclaration","scope":14112,"src":"49633:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14104,"name":"int256","nodeType":"ElementaryTypeName","src":"49633:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14107,"mutability":"mutable","name":"right","nameLocation":"49653:5:15","nodeType":"VariableDeclaration","scope":14112,"src":"49646:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14106,"name":"int256","nodeType":"ElementaryTypeName","src":"49646:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14109,"mutability":"mutable","name":"decimals","nameLocation":"49668:8:15","nodeType":"VariableDeclaration","scope":14112,"src":"49660:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14108,"name":"uint256","nodeType":"ElementaryTypeName","src":"49660:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49632:45:15"},"returnParameters":{"id":14111,"nodeType":"ParameterList","parameters":[],"src":"49691:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14124,"nodeType":"FunctionDefinition","src":"49906:107:15","nodes":[],"documentation":{"id":14113,"nodeType":"StructuredDocumentation","src":"49698:203:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"49915:15:15","parameters":{"id":14122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14115,"mutability":"mutable","name":"left","nameLocation":"49938:4:15","nodeType":"VariableDeclaration","scope":14124,"src":"49931:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14114,"name":"int256","nodeType":"ElementaryTypeName","src":"49931:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14117,"mutability":"mutable","name":"right","nameLocation":"49951:5:15","nodeType":"VariableDeclaration","scope":14124,"src":"49944:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14116,"name":"int256","nodeType":"ElementaryTypeName","src":"49944:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14119,"mutability":"mutable","name":"decimals","nameLocation":"49966:8:15","nodeType":"VariableDeclaration","scope":14124,"src":"49958:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14118,"name":"uint256","nodeType":"ElementaryTypeName","src":"49958:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14121,"mutability":"mutable","name":"error","nameLocation":"49992:5:15","nodeType":"VariableDeclaration","scope":14124,"src":"49976:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14120,"name":"string","nodeType":"ElementaryTypeName","src":"49976:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49930:68:15"},"returnParameters":{"id":14123,"nodeType":"ParameterList","parameters":[],"src":"50012:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14132,"nodeType":"FunctionDefinition","src":"50117:61:15","nodes":[],"documentation":{"id":14125,"nodeType":"StructuredDocumentation","src":"50019:93:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"50126:8:15","parameters":{"id":14130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14127,"mutability":"mutable","name":"left","nameLocation":"50143:4:15","nodeType":"VariableDeclaration","scope":14132,"src":"50135:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14126,"name":"uint256","nodeType":"ElementaryTypeName","src":"50135:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14129,"mutability":"mutable","name":"right","nameLocation":"50157:5:15","nodeType":"VariableDeclaration","scope":14132,"src":"50149:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14128,"name":"uint256","nodeType":"ElementaryTypeName","src":"50149:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50134:29:15"},"returnParameters":{"id":14131,"nodeType":"ParameterList","parameters":[],"src":"50177:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14142,"nodeType":"FunctionDefinition","src":"50344:84:15","nodes":[],"documentation":{"id":14133,"nodeType":"StructuredDocumentation","src":"50184:155:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"50353:8:15","parameters":{"id":14140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14135,"mutability":"mutable","name":"left","nameLocation":"50370:4:15","nodeType":"VariableDeclaration","scope":14142,"src":"50362:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14134,"name":"uint256","nodeType":"ElementaryTypeName","src":"50362:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14137,"mutability":"mutable","name":"right","nameLocation":"50384:5:15","nodeType":"VariableDeclaration","scope":14142,"src":"50376:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14136,"name":"uint256","nodeType":"ElementaryTypeName","src":"50376:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14139,"mutability":"mutable","name":"error","nameLocation":"50407:5:15","nodeType":"VariableDeclaration","scope":14142,"src":"50391:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14138,"name":"string","nodeType":"ElementaryTypeName","src":"50391:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50361:52:15"},"returnParameters":{"id":14141,"nodeType":"ParameterList","parameters":[],"src":"50427:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14150,"nodeType":"FunctionDefinition","src":"50531:59:15","nodes":[],"documentation":{"id":14143,"nodeType":"StructuredDocumentation","src":"50434:92:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"50540:8:15","parameters":{"id":14148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14145,"mutability":"mutable","name":"left","nameLocation":"50556:4:15","nodeType":"VariableDeclaration","scope":14150,"src":"50549:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14144,"name":"int256","nodeType":"ElementaryTypeName","src":"50549:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14147,"mutability":"mutable","name":"right","nameLocation":"50569:5:15","nodeType":"VariableDeclaration","scope":14150,"src":"50562:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14146,"name":"int256","nodeType":"ElementaryTypeName","src":"50562:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"50548:27:15"},"returnParameters":{"id":14149,"nodeType":"ParameterList","parameters":[],"src":"50589:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14160,"nodeType":"FunctionDefinition","src":"50755:82:15","nodes":[],"documentation":{"id":14151,"nodeType":"StructuredDocumentation","src":"50596:154:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"50764:8:15","parameters":{"id":14158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14153,"mutability":"mutable","name":"left","nameLocation":"50780:4:15","nodeType":"VariableDeclaration","scope":14160,"src":"50773:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14152,"name":"int256","nodeType":"ElementaryTypeName","src":"50773:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14155,"mutability":"mutable","name":"right","nameLocation":"50793:5:15","nodeType":"VariableDeclaration","scope":14160,"src":"50786:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14154,"name":"int256","nodeType":"ElementaryTypeName","src":"50786:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14157,"mutability":"mutable","name":"error","nameLocation":"50816:5:15","nodeType":"VariableDeclaration","scope":14160,"src":"50800:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14156,"name":"string","nodeType":"ElementaryTypeName","src":"50800:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50772:50:15"},"returnParameters":{"id":14159,"nodeType":"ParameterList","parameters":[],"src":"50836:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14170,"nodeType":"FunctionDefinition","src":"50986:86:15","nodes":[],"documentation":{"id":14161,"nodeType":"StructuredDocumentation","src":"50843:138:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"50995:15:15","parameters":{"id":14168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14163,"mutability":"mutable","name":"left","nameLocation":"51019:4:15","nodeType":"VariableDeclaration","scope":14170,"src":"51011:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14162,"name":"uint256","nodeType":"ElementaryTypeName","src":"51011:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14165,"mutability":"mutable","name":"right","nameLocation":"51033:5:15","nodeType":"VariableDeclaration","scope":14170,"src":"51025:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14164,"name":"uint256","nodeType":"ElementaryTypeName","src":"51025:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14167,"mutability":"mutable","name":"decimals","nameLocation":"51048:8:15","nodeType":"VariableDeclaration","scope":14170,"src":"51040:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14166,"name":"uint256","nodeType":"ElementaryTypeName","src":"51040:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51010:47:15"},"returnParameters":{"id":14169,"nodeType":"ParameterList","parameters":[],"src":"51071:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14182,"nodeType":"FunctionDefinition","src":"51275:109:15","nodes":[],"documentation":{"id":14171,"nodeType":"StructuredDocumentation","src":"51078:192:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"51284:15:15","parameters":{"id":14180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14173,"mutability":"mutable","name":"left","nameLocation":"51308:4:15","nodeType":"VariableDeclaration","scope":14182,"src":"51300:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14172,"name":"uint256","nodeType":"ElementaryTypeName","src":"51300:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14175,"mutability":"mutable","name":"right","nameLocation":"51322:5:15","nodeType":"VariableDeclaration","scope":14182,"src":"51314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14174,"name":"uint256","nodeType":"ElementaryTypeName","src":"51314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14177,"mutability":"mutable","name":"decimals","nameLocation":"51337:8:15","nodeType":"VariableDeclaration","scope":14182,"src":"51329:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14176,"name":"uint256","nodeType":"ElementaryTypeName","src":"51329:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14179,"mutability":"mutable","name":"error","nameLocation":"51363:5:15","nodeType":"VariableDeclaration","scope":14182,"src":"51347:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14178,"name":"string","nodeType":"ElementaryTypeName","src":"51347:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51299:70:15"},"returnParameters":{"id":14181,"nodeType":"ParameterList","parameters":[],"src":"51383:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14192,"nodeType":"FunctionDefinition","src":"51532:84:15","nodes":[],"documentation":{"id":14183,"nodeType":"StructuredDocumentation","src":"51390:137:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"51541:15:15","parameters":{"id":14190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14185,"mutability":"mutable","name":"left","nameLocation":"51564:4:15","nodeType":"VariableDeclaration","scope":14192,"src":"51557:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14184,"name":"int256","nodeType":"ElementaryTypeName","src":"51557:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14187,"mutability":"mutable","name":"right","nameLocation":"51577:5:15","nodeType":"VariableDeclaration","scope":14192,"src":"51570:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14186,"name":"int256","nodeType":"ElementaryTypeName","src":"51570:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14189,"mutability":"mutable","name":"decimals","nameLocation":"51592:8:15","nodeType":"VariableDeclaration","scope":14192,"src":"51584:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14188,"name":"uint256","nodeType":"ElementaryTypeName","src":"51584:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"51556:45:15"},"returnParameters":{"id":14191,"nodeType":"ParameterList","parameters":[],"src":"51615:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14204,"nodeType":"FunctionDefinition","src":"51818:107:15","nodes":[],"documentation":{"id":14193,"nodeType":"StructuredDocumentation","src":"51622:191:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"51827:15:15","parameters":{"id":14202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14195,"mutability":"mutable","name":"left","nameLocation":"51850:4:15","nodeType":"VariableDeclaration","scope":14204,"src":"51843:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14194,"name":"int256","nodeType":"ElementaryTypeName","src":"51843:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14197,"mutability":"mutable","name":"right","nameLocation":"51863:5:15","nodeType":"VariableDeclaration","scope":14204,"src":"51856:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14196,"name":"int256","nodeType":"ElementaryTypeName","src":"51856:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14199,"mutability":"mutable","name":"decimals","nameLocation":"51878:8:15","nodeType":"VariableDeclaration","scope":14204,"src":"51870:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14198,"name":"uint256","nodeType":"ElementaryTypeName","src":"51870:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14201,"mutability":"mutable","name":"error","nameLocation":"51904:5:15","nodeType":"VariableDeclaration","scope":14204,"src":"51888:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14200,"name":"string","nodeType":"ElementaryTypeName","src":"51888:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51842:68:15"},"returnParameters":{"id":14203,"nodeType":"ParameterList","parameters":[],"src":"51924:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14212,"nodeType":"FunctionDefinition","src":"52017:61:15","nodes":[],"documentation":{"id":14205,"nodeType":"StructuredDocumentation","src":"51931:81:15","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"52026:8:15","parameters":{"id":14210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14207,"mutability":"mutable","name":"left","nameLocation":"52043:4:15","nodeType":"VariableDeclaration","scope":14212,"src":"52035:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14206,"name":"uint256","nodeType":"ElementaryTypeName","src":"52035:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14209,"mutability":"mutable","name":"right","nameLocation":"52057:5:15","nodeType":"VariableDeclaration","scope":14212,"src":"52049:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14208,"name":"uint256","nodeType":"ElementaryTypeName","src":"52049:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52034:29:15"},"returnParameters":{"id":14211,"nodeType":"ParameterList","parameters":[],"src":"52077:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14222,"nodeType":"FunctionDefinition","src":"52232:84:15","nodes":[],"documentation":{"id":14213,"nodeType":"StructuredDocumentation","src":"52084:143:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"52241:8:15","parameters":{"id":14220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14215,"mutability":"mutable","name":"left","nameLocation":"52258:4:15","nodeType":"VariableDeclaration","scope":14222,"src":"52250:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14214,"name":"uint256","nodeType":"ElementaryTypeName","src":"52250:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14217,"mutability":"mutable","name":"right","nameLocation":"52272:5:15","nodeType":"VariableDeclaration","scope":14222,"src":"52264:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14216,"name":"uint256","nodeType":"ElementaryTypeName","src":"52264:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14219,"mutability":"mutable","name":"error","nameLocation":"52295:5:15","nodeType":"VariableDeclaration","scope":14222,"src":"52279:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14218,"name":"string","nodeType":"ElementaryTypeName","src":"52279:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52249:52:15"},"returnParameters":{"id":14221,"nodeType":"ParameterList","parameters":[],"src":"52315:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14230,"nodeType":"FunctionDefinition","src":"52407:59:15","nodes":[],"documentation":{"id":14223,"nodeType":"StructuredDocumentation","src":"52322:80:15","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"52416:8:15","parameters":{"id":14228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14225,"mutability":"mutable","name":"left","nameLocation":"52432:4:15","nodeType":"VariableDeclaration","scope":14230,"src":"52425:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14224,"name":"int256","nodeType":"ElementaryTypeName","src":"52425:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14227,"mutability":"mutable","name":"right","nameLocation":"52445:5:15","nodeType":"VariableDeclaration","scope":14230,"src":"52438:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14226,"name":"int256","nodeType":"ElementaryTypeName","src":"52438:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"52424:27:15"},"returnParameters":{"id":14229,"nodeType":"ParameterList","parameters":[],"src":"52465:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14240,"nodeType":"FunctionDefinition","src":"52619:82:15","nodes":[],"documentation":{"id":14231,"nodeType":"StructuredDocumentation","src":"52472:142:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"52628:8:15","parameters":{"id":14238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14233,"mutability":"mutable","name":"left","nameLocation":"52644:4:15","nodeType":"VariableDeclaration","scope":14240,"src":"52637:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14232,"name":"int256","nodeType":"ElementaryTypeName","src":"52637:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14235,"mutability":"mutable","name":"right","nameLocation":"52657:5:15","nodeType":"VariableDeclaration","scope":14240,"src":"52650:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14234,"name":"int256","nodeType":"ElementaryTypeName","src":"52650:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14237,"mutability":"mutable","name":"error","nameLocation":"52680:5:15","nodeType":"VariableDeclaration","scope":14240,"src":"52664:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14236,"name":"string","nodeType":"ElementaryTypeName","src":"52664:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52636:50:15"},"returnParameters":{"id":14239,"nodeType":"ParameterList","parameters":[],"src":"52700:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14250,"nodeType":"FunctionDefinition","src":"52859:86:15","nodes":[],"documentation":{"id":14241,"nodeType":"StructuredDocumentation","src":"52707:147:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"52868:15:15","parameters":{"id":14248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14243,"mutability":"mutable","name":"left","nameLocation":"52892:4:15","nodeType":"VariableDeclaration","scope":14250,"src":"52884:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14242,"name":"uint256","nodeType":"ElementaryTypeName","src":"52884:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14245,"mutability":"mutable","name":"right","nameLocation":"52906:5:15","nodeType":"VariableDeclaration","scope":14250,"src":"52898:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14244,"name":"uint256","nodeType":"ElementaryTypeName","src":"52898:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14247,"mutability":"mutable","name":"decimals","nameLocation":"52921:8:15","nodeType":"VariableDeclaration","scope":14250,"src":"52913:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14246,"name":"uint256","nodeType":"ElementaryTypeName","src":"52913:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"52883:47:15"},"returnParameters":{"id":14249,"nodeType":"ParameterList","parameters":[],"src":"52944:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14262,"nodeType":"FunctionDefinition","src":"53157:109:15","nodes":[],"documentation":{"id":14251,"nodeType":"StructuredDocumentation","src":"52951:201:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"53166:15:15","parameters":{"id":14260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14253,"mutability":"mutable","name":"left","nameLocation":"53190:4:15","nodeType":"VariableDeclaration","scope":14262,"src":"53182:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14252,"name":"uint256","nodeType":"ElementaryTypeName","src":"53182:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14255,"mutability":"mutable","name":"right","nameLocation":"53204:5:15","nodeType":"VariableDeclaration","scope":14262,"src":"53196:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14254,"name":"uint256","nodeType":"ElementaryTypeName","src":"53196:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14257,"mutability":"mutable","name":"decimals","nameLocation":"53219:8:15","nodeType":"VariableDeclaration","scope":14262,"src":"53211:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14256,"name":"uint256","nodeType":"ElementaryTypeName","src":"53211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14259,"mutability":"mutable","name":"error","nameLocation":"53245:5:15","nodeType":"VariableDeclaration","scope":14262,"src":"53229:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14258,"name":"string","nodeType":"ElementaryTypeName","src":"53229:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53181:70:15"},"returnParameters":{"id":14261,"nodeType":"ParameterList","parameters":[],"src":"53265:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14272,"nodeType":"FunctionDefinition","src":"53423:84:15","nodes":[],"documentation":{"id":14263,"nodeType":"StructuredDocumentation","src":"53272:146:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"53432:15:15","parameters":{"id":14270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14265,"mutability":"mutable","name":"left","nameLocation":"53455:4:15","nodeType":"VariableDeclaration","scope":14272,"src":"53448:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14264,"name":"int256","nodeType":"ElementaryTypeName","src":"53448:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14267,"mutability":"mutable","name":"right","nameLocation":"53468:5:15","nodeType":"VariableDeclaration","scope":14272,"src":"53461:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14266,"name":"int256","nodeType":"ElementaryTypeName","src":"53461:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14269,"mutability":"mutable","name":"decimals","nameLocation":"53483:8:15","nodeType":"VariableDeclaration","scope":14272,"src":"53475:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14268,"name":"uint256","nodeType":"ElementaryTypeName","src":"53475:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53447:45:15"},"returnParameters":{"id":14271,"nodeType":"ParameterList","parameters":[],"src":"53506:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14284,"nodeType":"FunctionDefinition","src":"53718:107:15","nodes":[],"documentation":{"id":14273,"nodeType":"StructuredDocumentation","src":"53513:200:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"53727:15:15","parameters":{"id":14282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14275,"mutability":"mutable","name":"left","nameLocation":"53750:4:15","nodeType":"VariableDeclaration","scope":14284,"src":"53743:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14274,"name":"int256","nodeType":"ElementaryTypeName","src":"53743:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14277,"mutability":"mutable","name":"right","nameLocation":"53763:5:15","nodeType":"VariableDeclaration","scope":14284,"src":"53756:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14276,"name":"int256","nodeType":"ElementaryTypeName","src":"53756:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14279,"mutability":"mutable","name":"decimals","nameLocation":"53778:8:15","nodeType":"VariableDeclaration","scope":14284,"src":"53770:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14278,"name":"uint256","nodeType":"ElementaryTypeName","src":"53770:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14281,"mutability":"mutable","name":"error","nameLocation":"53804:5:15","nodeType":"VariableDeclaration","scope":14284,"src":"53788:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14280,"name":"string","nodeType":"ElementaryTypeName","src":"53788:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53742:68:15"},"returnParameters":{"id":14283,"nodeType":"ParameterList","parameters":[],"src":"53824:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14292,"nodeType":"FunctionDefinition","src":"53926:61:15","nodes":[],"documentation":{"id":14285,"nodeType":"StructuredDocumentation","src":"53831:90:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"53935:8:15","parameters":{"id":14290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14287,"mutability":"mutable","name":"left","nameLocation":"53952:4:15","nodeType":"VariableDeclaration","scope":14292,"src":"53944:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14286,"name":"uint256","nodeType":"ElementaryTypeName","src":"53944:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14289,"mutability":"mutable","name":"right","nameLocation":"53966:5:15","nodeType":"VariableDeclaration","scope":14292,"src":"53958:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14288,"name":"uint256","nodeType":"ElementaryTypeName","src":"53958:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53943:29:15"},"returnParameters":{"id":14291,"nodeType":"ParameterList","parameters":[],"src":"53986:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14302,"nodeType":"FunctionDefinition","src":"54150:84:15","nodes":[],"documentation":{"id":14293,"nodeType":"StructuredDocumentation","src":"53993:152:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"54159:8:15","parameters":{"id":14300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14295,"mutability":"mutable","name":"left","nameLocation":"54176:4:15","nodeType":"VariableDeclaration","scope":14302,"src":"54168:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14294,"name":"uint256","nodeType":"ElementaryTypeName","src":"54168:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14297,"mutability":"mutable","name":"right","nameLocation":"54190:5:15","nodeType":"VariableDeclaration","scope":14302,"src":"54182:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14296,"name":"uint256","nodeType":"ElementaryTypeName","src":"54182:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14299,"mutability":"mutable","name":"error","nameLocation":"54213:5:15","nodeType":"VariableDeclaration","scope":14302,"src":"54197:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14298,"name":"string","nodeType":"ElementaryTypeName","src":"54197:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54167:52:15"},"returnParameters":{"id":14301,"nodeType":"ParameterList","parameters":[],"src":"54233:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14310,"nodeType":"FunctionDefinition","src":"54334:59:15","nodes":[],"documentation":{"id":14303,"nodeType":"StructuredDocumentation","src":"54240:89:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"54343:8:15","parameters":{"id":14308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14305,"mutability":"mutable","name":"left","nameLocation":"54359:4:15","nodeType":"VariableDeclaration","scope":14310,"src":"54352:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14304,"name":"int256","nodeType":"ElementaryTypeName","src":"54352:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14307,"mutability":"mutable","name":"right","nameLocation":"54372:5:15","nodeType":"VariableDeclaration","scope":14310,"src":"54365:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14306,"name":"int256","nodeType":"ElementaryTypeName","src":"54365:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"54351:27:15"},"returnParameters":{"id":14309,"nodeType":"ParameterList","parameters":[],"src":"54392:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14320,"nodeType":"FunctionDefinition","src":"54555:82:15","nodes":[],"documentation":{"id":14311,"nodeType":"StructuredDocumentation","src":"54399:151:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"54564:8:15","parameters":{"id":14318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14313,"mutability":"mutable","name":"left","nameLocation":"54580:4:15","nodeType":"VariableDeclaration","scope":14320,"src":"54573:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14312,"name":"int256","nodeType":"ElementaryTypeName","src":"54573:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14315,"mutability":"mutable","name":"right","nameLocation":"54593:5:15","nodeType":"VariableDeclaration","scope":14320,"src":"54586:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14314,"name":"int256","nodeType":"ElementaryTypeName","src":"54586:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14317,"mutability":"mutable","name":"error","nameLocation":"54616:5:15","nodeType":"VariableDeclaration","scope":14320,"src":"54600:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14316,"name":"string","nodeType":"ElementaryTypeName","src":"54600:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54572:50:15"},"returnParameters":{"id":14319,"nodeType":"ParameterList","parameters":[],"src":"54636:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14330,"nodeType":"FunctionDefinition","src":"54783:86:15","nodes":[],"documentation":{"id":14321,"nodeType":"StructuredDocumentation","src":"54643:135:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"54792:15:15","parameters":{"id":14328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14323,"mutability":"mutable","name":"left","nameLocation":"54816:4:15","nodeType":"VariableDeclaration","scope":14330,"src":"54808:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14322,"name":"uint256","nodeType":"ElementaryTypeName","src":"54808:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14325,"mutability":"mutable","name":"right","nameLocation":"54830:5:15","nodeType":"VariableDeclaration","scope":14330,"src":"54822:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14324,"name":"uint256","nodeType":"ElementaryTypeName","src":"54822:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14327,"mutability":"mutable","name":"decimals","nameLocation":"54845:8:15","nodeType":"VariableDeclaration","scope":14330,"src":"54837:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14326,"name":"uint256","nodeType":"ElementaryTypeName","src":"54837:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"54807:47:15"},"returnParameters":{"id":14329,"nodeType":"ParameterList","parameters":[],"src":"54868:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14342,"nodeType":"FunctionDefinition","src":"55069:109:15","nodes":[],"documentation":{"id":14331,"nodeType":"StructuredDocumentation","src":"54875:189:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"55078:15:15","parameters":{"id":14340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14333,"mutability":"mutable","name":"left","nameLocation":"55102:4:15","nodeType":"VariableDeclaration","scope":14342,"src":"55094:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14332,"name":"uint256","nodeType":"ElementaryTypeName","src":"55094:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14335,"mutability":"mutable","name":"right","nameLocation":"55116:5:15","nodeType":"VariableDeclaration","scope":14342,"src":"55108:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14334,"name":"uint256","nodeType":"ElementaryTypeName","src":"55108:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14337,"mutability":"mutable","name":"decimals","nameLocation":"55131:8:15","nodeType":"VariableDeclaration","scope":14342,"src":"55123:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14336,"name":"uint256","nodeType":"ElementaryTypeName","src":"55123:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14339,"mutability":"mutable","name":"error","nameLocation":"55157:5:15","nodeType":"VariableDeclaration","scope":14342,"src":"55141:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14338,"name":"string","nodeType":"ElementaryTypeName","src":"55141:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55093:70:15"},"returnParameters":{"id":14341,"nodeType":"ParameterList","parameters":[],"src":"55177:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14352,"nodeType":"FunctionDefinition","src":"55323:84:15","nodes":[],"documentation":{"id":14343,"nodeType":"StructuredDocumentation","src":"55184:134:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"55332:15:15","parameters":{"id":14350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14345,"mutability":"mutable","name":"left","nameLocation":"55355:4:15","nodeType":"VariableDeclaration","scope":14352,"src":"55348:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14344,"name":"int256","nodeType":"ElementaryTypeName","src":"55348:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14347,"mutability":"mutable","name":"right","nameLocation":"55368:5:15","nodeType":"VariableDeclaration","scope":14352,"src":"55361:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14346,"name":"int256","nodeType":"ElementaryTypeName","src":"55361:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14349,"mutability":"mutable","name":"decimals","nameLocation":"55383:8:15","nodeType":"VariableDeclaration","scope":14352,"src":"55375:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14348,"name":"uint256","nodeType":"ElementaryTypeName","src":"55375:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55347:45:15"},"returnParameters":{"id":14351,"nodeType":"ParameterList","parameters":[],"src":"55406:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14364,"nodeType":"FunctionDefinition","src":"55606:107:15","nodes":[],"documentation":{"id":14353,"nodeType":"StructuredDocumentation","src":"55413:188:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"55615:15:15","parameters":{"id":14362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14355,"mutability":"mutable","name":"left","nameLocation":"55638:4:15","nodeType":"VariableDeclaration","scope":14364,"src":"55631:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14354,"name":"int256","nodeType":"ElementaryTypeName","src":"55631:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14357,"mutability":"mutable","name":"right","nameLocation":"55651:5:15","nodeType":"VariableDeclaration","scope":14364,"src":"55644:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14356,"name":"int256","nodeType":"ElementaryTypeName","src":"55644:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14359,"mutability":"mutable","name":"decimals","nameLocation":"55666:8:15","nodeType":"VariableDeclaration","scope":14364,"src":"55658:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14358,"name":"uint256","nodeType":"ElementaryTypeName","src":"55658:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14361,"mutability":"mutable","name":"error","nameLocation":"55692:5:15","nodeType":"VariableDeclaration","scope":14364,"src":"55676:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14360,"name":"string","nodeType":"ElementaryTypeName","src":"55676:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55630:68:15"},"returnParameters":{"id":14363,"nodeType":"ParameterList","parameters":[],"src":"55712:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14372,"nodeType":"FunctionDefinition","src":"55802:61:15","nodes":[],"documentation":{"id":14365,"nodeType":"StructuredDocumentation","src":"55719:78:15","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"55811:8:15","parameters":{"id":14370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14367,"mutability":"mutable","name":"left","nameLocation":"55828:4:15","nodeType":"VariableDeclaration","scope":14372,"src":"55820:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14366,"name":"uint256","nodeType":"ElementaryTypeName","src":"55820:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14369,"mutability":"mutable","name":"right","nameLocation":"55842:5:15","nodeType":"VariableDeclaration","scope":14372,"src":"55834:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14368,"name":"uint256","nodeType":"ElementaryTypeName","src":"55834:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"55819:29:15"},"returnParameters":{"id":14371,"nodeType":"ParameterList","parameters":[],"src":"55862:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14382,"nodeType":"FunctionDefinition","src":"56014:84:15","nodes":[],"documentation":{"id":14373,"nodeType":"StructuredDocumentation","src":"55869:140:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"56023:8:15","parameters":{"id":14380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14375,"mutability":"mutable","name":"left","nameLocation":"56040:4:15","nodeType":"VariableDeclaration","scope":14382,"src":"56032:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14374,"name":"uint256","nodeType":"ElementaryTypeName","src":"56032:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14377,"mutability":"mutable","name":"right","nameLocation":"56054:5:15","nodeType":"VariableDeclaration","scope":14382,"src":"56046:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14376,"name":"uint256","nodeType":"ElementaryTypeName","src":"56046:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14379,"mutability":"mutable","name":"error","nameLocation":"56077:5:15","nodeType":"VariableDeclaration","scope":14382,"src":"56061:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14378,"name":"string","nodeType":"ElementaryTypeName","src":"56061:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56031:52:15"},"returnParameters":{"id":14381,"nodeType":"ParameterList","parameters":[],"src":"56097:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14390,"nodeType":"FunctionDefinition","src":"56186:59:15","nodes":[],"documentation":{"id":14383,"nodeType":"StructuredDocumentation","src":"56104:77:15","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"56195:8:15","parameters":{"id":14388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14385,"mutability":"mutable","name":"left","nameLocation":"56211:4:15","nodeType":"VariableDeclaration","scope":14390,"src":"56204:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14384,"name":"int256","nodeType":"ElementaryTypeName","src":"56204:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14387,"mutability":"mutable","name":"right","nameLocation":"56224:5:15","nodeType":"VariableDeclaration","scope":14390,"src":"56217:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14386,"name":"int256","nodeType":"ElementaryTypeName","src":"56217:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"56203:27:15"},"returnParameters":{"id":14389,"nodeType":"ParameterList","parameters":[],"src":"56244:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14400,"nodeType":"FunctionDefinition","src":"56395:82:15","nodes":[],"documentation":{"id":14391,"nodeType":"StructuredDocumentation","src":"56251:139:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"56404:8:15","parameters":{"id":14398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14393,"mutability":"mutable","name":"left","nameLocation":"56420:4:15","nodeType":"VariableDeclaration","scope":14400,"src":"56413:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14392,"name":"int256","nodeType":"ElementaryTypeName","src":"56413:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14395,"mutability":"mutable","name":"right","nameLocation":"56433:5:15","nodeType":"VariableDeclaration","scope":14400,"src":"56426:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14394,"name":"int256","nodeType":"ElementaryTypeName","src":"56426:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14397,"mutability":"mutable","name":"error","nameLocation":"56456:5:15","nodeType":"VariableDeclaration","scope":14400,"src":"56440:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14396,"name":"string","nodeType":"ElementaryTypeName","src":"56440:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56412:50:15"},"returnParameters":{"id":14399,"nodeType":"ParameterList","parameters":[],"src":"56476:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14410,"nodeType":"FunctionDefinition","src":"56590:89:15","nodes":[],"documentation":{"id":14401,"nodeType":"StructuredDocumentation","src":"56483:102:15","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"56599:18:15","parameters":{"id":14408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14403,"mutability":"mutable","name":"left","nameLocation":"56626:4:15","nodeType":"VariableDeclaration","scope":14410,"src":"56618:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14402,"name":"uint256","nodeType":"ElementaryTypeName","src":"56618:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14405,"mutability":"mutable","name":"right","nameLocation":"56640:5:15","nodeType":"VariableDeclaration","scope":14410,"src":"56632:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14404,"name":"uint256","nodeType":"ElementaryTypeName","src":"56632:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14407,"mutability":"mutable","name":"decimals","nameLocation":"56655:8:15","nodeType":"VariableDeclaration","scope":14410,"src":"56647:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14406,"name":"uint256","nodeType":"ElementaryTypeName","src":"56647:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56617:47:15"},"returnParameters":{"id":14409,"nodeType":"ParameterList","parameters":[],"src":"56678:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14422,"nodeType":"FunctionDefinition","src":"56854:112:15","nodes":[],"documentation":{"id":14411,"nodeType":"StructuredDocumentation","src":"56685:164:15","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"56863:18:15","parameters":{"id":14420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14413,"mutability":"mutable","name":"left","nameLocation":"56890:4:15","nodeType":"VariableDeclaration","scope":14422,"src":"56882:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14412,"name":"uint256","nodeType":"ElementaryTypeName","src":"56882:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14415,"mutability":"mutable","name":"right","nameLocation":"56904:5:15","nodeType":"VariableDeclaration","scope":14422,"src":"56896:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14414,"name":"uint256","nodeType":"ElementaryTypeName","src":"56896:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14417,"mutability":"mutable","name":"decimals","nameLocation":"56919:8:15","nodeType":"VariableDeclaration","scope":14422,"src":"56911:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14416,"name":"uint256","nodeType":"ElementaryTypeName","src":"56911:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14419,"mutability":"mutable","name":"error","nameLocation":"56945:5:15","nodeType":"VariableDeclaration","scope":14422,"src":"56929:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14418,"name":"string","nodeType":"ElementaryTypeName","src":"56929:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56881:70:15"},"returnParameters":{"id":14421,"nodeType":"ParameterList","parameters":[],"src":"56965:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14432,"nodeType":"FunctionDefinition","src":"57078:87:15","nodes":[],"documentation":{"id":14423,"nodeType":"StructuredDocumentation","src":"56972:101:15","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"57087:18:15","parameters":{"id":14430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14425,"mutability":"mutable","name":"left","nameLocation":"57113:4:15","nodeType":"VariableDeclaration","scope":14432,"src":"57106:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14424,"name":"int256","nodeType":"ElementaryTypeName","src":"57106:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14427,"mutability":"mutable","name":"right","nameLocation":"57126:5:15","nodeType":"VariableDeclaration","scope":14432,"src":"57119:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14426,"name":"int256","nodeType":"ElementaryTypeName","src":"57119:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14429,"mutability":"mutable","name":"decimals","nameLocation":"57141:8:15","nodeType":"VariableDeclaration","scope":14432,"src":"57133:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14428,"name":"uint256","nodeType":"ElementaryTypeName","src":"57133:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57105:45:15"},"returnParameters":{"id":14431,"nodeType":"ParameterList","parameters":[],"src":"57164:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14444,"nodeType":"FunctionDefinition","src":"57339:110:15","nodes":[],"documentation":{"id":14433,"nodeType":"StructuredDocumentation","src":"57171:163:15","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"57348:18:15","parameters":{"id":14442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14435,"mutability":"mutable","name":"left","nameLocation":"57374:4:15","nodeType":"VariableDeclaration","scope":14444,"src":"57367:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14434,"name":"int256","nodeType":"ElementaryTypeName","src":"57367:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14437,"mutability":"mutable","name":"right","nameLocation":"57387:5:15","nodeType":"VariableDeclaration","scope":14444,"src":"57380:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14436,"name":"int256","nodeType":"ElementaryTypeName","src":"57380:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14439,"mutability":"mutable","name":"decimals","nameLocation":"57402:8:15","nodeType":"VariableDeclaration","scope":14444,"src":"57394:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14438,"name":"uint256","nodeType":"ElementaryTypeName","src":"57394:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14441,"mutability":"mutable","name":"error","nameLocation":"57428:5:15","nodeType":"VariableDeclaration","scope":14444,"src":"57412:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14440,"name":"string","nodeType":"ElementaryTypeName","src":"57412:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57366:68:15"},"returnParameters":{"id":14443,"nodeType":"ParameterList","parameters":[],"src":"57448:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14452,"nodeType":"FunctionDefinition","src":"57509:58:15","nodes":[],"documentation":{"id":14445,"nodeType":"StructuredDocumentation","src":"57455:49:15","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"57518:11:15","parameters":{"id":14450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14447,"mutability":"mutable","name":"left","nameLocation":"57535:4:15","nodeType":"VariableDeclaration","scope":14452,"src":"57530:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14446,"name":"bool","nodeType":"ElementaryTypeName","src":"57530:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14449,"mutability":"mutable","name":"right","nameLocation":"57546:5:15","nodeType":"VariableDeclaration","scope":14452,"src":"57541:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14448,"name":"bool","nodeType":"ElementaryTypeName","src":"57541:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"57529:23:15"},"returnParameters":{"id":14451,"nodeType":"ParameterList","parameters":[],"src":"57566:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14462,"nodeType":"FunctionDefinition","src":"57684:81:15","nodes":[],"documentation":{"id":14453,"nodeType":"StructuredDocumentation","src":"57573:106:15","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"57693:11:15","parameters":{"id":14460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14455,"mutability":"mutable","name":"left","nameLocation":"57710:4:15","nodeType":"VariableDeclaration","scope":14462,"src":"57705:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14454,"name":"bool","nodeType":"ElementaryTypeName","src":"57705:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14457,"mutability":"mutable","name":"right","nameLocation":"57721:5:15","nodeType":"VariableDeclaration","scope":14462,"src":"57716:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14456,"name":"bool","nodeType":"ElementaryTypeName","src":"57716:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14459,"mutability":"mutable","name":"error","nameLocation":"57744:5:15","nodeType":"VariableDeclaration","scope":14462,"src":"57728:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14458,"name":"string","nodeType":"ElementaryTypeName","src":"57728:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57704:46:15"},"returnParameters":{"id":14461,"nodeType":"ParameterList","parameters":[],"src":"57764:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14470,"nodeType":"FunctionDefinition","src":"57827:80:15","nodes":[],"documentation":{"id":14463,"nodeType":"StructuredDocumentation","src":"57771:51:15","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"57836:11:15","parameters":{"id":14468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14465,"mutability":"mutable","name":"left","nameLocation":"57864:4:15","nodeType":"VariableDeclaration","scope":14470,"src":"57848:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14464,"name":"string","nodeType":"ElementaryTypeName","src":"57848:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14467,"mutability":"mutable","name":"right","nameLocation":"57886:5:15","nodeType":"VariableDeclaration","scope":14470,"src":"57870:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14466,"name":"string","nodeType":"ElementaryTypeName","src":"57870:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57847:45:15"},"returnParameters":{"id":14469,"nodeType":"ParameterList","parameters":[],"src":"57906:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14480,"nodeType":"FunctionDefinition","src":"58026:103:15","nodes":[],"documentation":{"id":14471,"nodeType":"StructuredDocumentation","src":"57913:108:15","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"58035:11:15","parameters":{"id":14478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14473,"mutability":"mutable","name":"left","nameLocation":"58063:4:15","nodeType":"VariableDeclaration","scope":14480,"src":"58047:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14472,"name":"string","nodeType":"ElementaryTypeName","src":"58047:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14475,"mutability":"mutable","name":"right","nameLocation":"58085:5:15","nodeType":"VariableDeclaration","scope":14480,"src":"58069:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14474,"name":"string","nodeType":"ElementaryTypeName","src":"58069:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14477,"mutability":"mutable","name":"error","nameLocation":"58108:5:15","nodeType":"VariableDeclaration","scope":14480,"src":"58092:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14476,"name":"string","nodeType":"ElementaryTypeName","src":"58092:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58046:68:15"},"returnParameters":{"id":14479,"nodeType":"ParameterList","parameters":[],"src":"58128:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14488,"nodeType":"FunctionDefinition","src":"58190:78:15","nodes":[],"documentation":{"id":14481,"nodeType":"StructuredDocumentation","src":"58135:50:15","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"58199:11:15","parameters":{"id":14486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14483,"mutability":"mutable","name":"left","nameLocation":"58226:4:15","nodeType":"VariableDeclaration","scope":14488,"src":"58211:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14482,"name":"bytes","nodeType":"ElementaryTypeName","src":"58211:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14485,"mutability":"mutable","name":"right","nameLocation":"58247:5:15","nodeType":"VariableDeclaration","scope":14488,"src":"58232:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14484,"name":"bytes","nodeType":"ElementaryTypeName","src":"58232:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"58210:43:15"},"returnParameters":{"id":14487,"nodeType":"ParameterList","parameters":[],"src":"58267:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14498,"nodeType":"FunctionDefinition","src":"58386:101:15","nodes":[],"documentation":{"id":14489,"nodeType":"StructuredDocumentation","src":"58274:107:15","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"58395:11:15","parameters":{"id":14496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14491,"mutability":"mutable","name":"left","nameLocation":"58422:4:15","nodeType":"VariableDeclaration","scope":14498,"src":"58407:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14490,"name":"bytes","nodeType":"ElementaryTypeName","src":"58407:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14493,"mutability":"mutable","name":"right","nameLocation":"58443:5:15","nodeType":"VariableDeclaration","scope":14498,"src":"58428:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14492,"name":"bytes","nodeType":"ElementaryTypeName","src":"58428:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14495,"mutability":"mutable","name":"error","nameLocation":"58466:5:15","nodeType":"VariableDeclaration","scope":14498,"src":"58450:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14494,"name":"string","nodeType":"ElementaryTypeName","src":"58450:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58406:66:15"},"returnParameters":{"id":14497,"nodeType":"ParameterList","parameters":[],"src":"58486:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14508,"nodeType":"FunctionDefinition","src":"58557:80:15","nodes":[],"documentation":{"id":14499,"nodeType":"StructuredDocumentation","src":"58493:59:15","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"58566:11:15","parameters":{"id":14506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14502,"mutability":"mutable","name":"left","nameLocation":"58594:4:15","nodeType":"VariableDeclaration","scope":14508,"src":"58578:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14500,"name":"bool","nodeType":"ElementaryTypeName","src":"58578:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14501,"nodeType":"ArrayTypeName","src":"58578:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14505,"mutability":"mutable","name":"right","nameLocation":"58616:5:15","nodeType":"VariableDeclaration","scope":14508,"src":"58600:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14503,"name":"bool","nodeType":"ElementaryTypeName","src":"58600:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14504,"nodeType":"ArrayTypeName","src":"58600:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"58577:45:15"},"returnParameters":{"id":14507,"nodeType":"ParameterList","parameters":[],"src":"58636:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14520,"nodeType":"FunctionDefinition","src":"58764:103:15","nodes":[],"documentation":{"id":14509,"nodeType":"StructuredDocumentation","src":"58643:116:15","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"58773:11:15","parameters":{"id":14518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14512,"mutability":"mutable","name":"left","nameLocation":"58801:4:15","nodeType":"VariableDeclaration","scope":14520,"src":"58785:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14510,"name":"bool","nodeType":"ElementaryTypeName","src":"58785:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14511,"nodeType":"ArrayTypeName","src":"58785:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14515,"mutability":"mutable","name":"right","nameLocation":"58823:5:15","nodeType":"VariableDeclaration","scope":14520,"src":"58807:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14513,"name":"bool","nodeType":"ElementaryTypeName","src":"58807:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14514,"nodeType":"ArrayTypeName","src":"58807:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14517,"mutability":"mutable","name":"error","nameLocation":"58846:5:15","nodeType":"VariableDeclaration","scope":14520,"src":"58830:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14516,"name":"string","nodeType":"ElementaryTypeName","src":"58830:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58784:68:15"},"returnParameters":{"id":14519,"nodeType":"ParameterList","parameters":[],"src":"58866:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14530,"nodeType":"FunctionDefinition","src":"58940:86:15","nodes":[],"documentation":{"id":14521,"nodeType":"StructuredDocumentation","src":"58873:62:15","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"58949:11:15","parameters":{"id":14528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14524,"mutability":"mutable","name":"left","nameLocation":"58980:4:15","nodeType":"VariableDeclaration","scope":14530,"src":"58961:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14522,"name":"uint256","nodeType":"ElementaryTypeName","src":"58961:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14523,"nodeType":"ArrayTypeName","src":"58961:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14527,"mutability":"mutable","name":"right","nameLocation":"59005:5:15","nodeType":"VariableDeclaration","scope":14530,"src":"58986:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14525,"name":"uint256","nodeType":"ElementaryTypeName","src":"58986:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14526,"nodeType":"ArrayTypeName","src":"58986:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"58960:51:15"},"returnParameters":{"id":14529,"nodeType":"ParameterList","parameters":[],"src":"59025:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14542,"nodeType":"FunctionDefinition","src":"59156:109:15","nodes":[],"documentation":{"id":14531,"nodeType":"StructuredDocumentation","src":"59032:119:15","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"59165:11:15","parameters":{"id":14540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14534,"mutability":"mutable","name":"left","nameLocation":"59196:4:15","nodeType":"VariableDeclaration","scope":14542,"src":"59177:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14532,"name":"uint256","nodeType":"ElementaryTypeName","src":"59177:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14533,"nodeType":"ArrayTypeName","src":"59177:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14537,"mutability":"mutable","name":"right","nameLocation":"59221:5:15","nodeType":"VariableDeclaration","scope":14542,"src":"59202:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14535,"name":"uint256","nodeType":"ElementaryTypeName","src":"59202:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14536,"nodeType":"ArrayTypeName","src":"59202:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14539,"mutability":"mutable","name":"error","nameLocation":"59244:5:15","nodeType":"VariableDeclaration","scope":14542,"src":"59228:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14538,"name":"string","nodeType":"ElementaryTypeName","src":"59228:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59176:74:15"},"returnParameters":{"id":14541,"nodeType":"ParameterList","parameters":[],"src":"59264:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14552,"nodeType":"FunctionDefinition","src":"59337:84:15","nodes":[],"documentation":{"id":14543,"nodeType":"StructuredDocumentation","src":"59271:61:15","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"59346:11:15","parameters":{"id":14550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14546,"mutability":"mutable","name":"left","nameLocation":"59376:4:15","nodeType":"VariableDeclaration","scope":14552,"src":"59358:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14544,"name":"int256","nodeType":"ElementaryTypeName","src":"59358:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14545,"nodeType":"ArrayTypeName","src":"59358:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14549,"mutability":"mutable","name":"right","nameLocation":"59400:5:15","nodeType":"VariableDeclaration","scope":14552,"src":"59382:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14547,"name":"int256","nodeType":"ElementaryTypeName","src":"59382:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14548,"nodeType":"ArrayTypeName","src":"59382:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"59357:49:15"},"returnParameters":{"id":14551,"nodeType":"ParameterList","parameters":[],"src":"59420:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14564,"nodeType":"FunctionDefinition","src":"59550:107:15","nodes":[],"documentation":{"id":14553,"nodeType":"StructuredDocumentation","src":"59427:118:15","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"59559:11:15","parameters":{"id":14562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14556,"mutability":"mutable","name":"left","nameLocation":"59589:4:15","nodeType":"VariableDeclaration","scope":14564,"src":"59571:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14554,"name":"int256","nodeType":"ElementaryTypeName","src":"59571:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14555,"nodeType":"ArrayTypeName","src":"59571:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14559,"mutability":"mutable","name":"right","nameLocation":"59613:5:15","nodeType":"VariableDeclaration","scope":14564,"src":"59595:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14557,"name":"int256","nodeType":"ElementaryTypeName","src":"59595:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14558,"nodeType":"ArrayTypeName","src":"59595:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14561,"mutability":"mutable","name":"error","nameLocation":"59636:5:15","nodeType":"VariableDeclaration","scope":14564,"src":"59620:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14560,"name":"string","nodeType":"ElementaryTypeName","src":"59620:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59570:72:15"},"returnParameters":{"id":14563,"nodeType":"ParameterList","parameters":[],"src":"59656:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14572,"nodeType":"FunctionDefinition","src":"59720:64:15","nodes":[],"documentation":{"id":14565,"nodeType":"StructuredDocumentation","src":"59663:52:15","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"59729:11:15","parameters":{"id":14570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14567,"mutability":"mutable","name":"left","nameLocation":"59749:4:15","nodeType":"VariableDeclaration","scope":14572,"src":"59741:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14566,"name":"uint256","nodeType":"ElementaryTypeName","src":"59741:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14569,"mutability":"mutable","name":"right","nameLocation":"59763:5:15","nodeType":"VariableDeclaration","scope":14572,"src":"59755:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14568,"name":"uint256","nodeType":"ElementaryTypeName","src":"59755:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59740:29:15"},"returnParameters":{"id":14571,"nodeType":"ParameterList","parameters":[],"src":"59783:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14582,"nodeType":"FunctionDefinition","src":"59857:86:15","nodes":[],"documentation":{"id":14573,"nodeType":"StructuredDocumentation","src":"59790:62:15","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"59866:11:15","parameters":{"id":14580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14576,"mutability":"mutable","name":"left","nameLocation":"59897:4:15","nodeType":"VariableDeclaration","scope":14582,"src":"59878:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14574,"name":"address","nodeType":"ElementaryTypeName","src":"59878:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14575,"nodeType":"ArrayTypeName","src":"59878:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14579,"mutability":"mutable","name":"right","nameLocation":"59922:5:15","nodeType":"VariableDeclaration","scope":14582,"src":"59903:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14577,"name":"address","nodeType":"ElementaryTypeName","src":"59903:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14578,"nodeType":"ArrayTypeName","src":"59903:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"59877:51:15"},"returnParameters":{"id":14581,"nodeType":"ParameterList","parameters":[],"src":"59942:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14594,"nodeType":"FunctionDefinition","src":"60073:109:15","nodes":[],"documentation":{"id":14583,"nodeType":"StructuredDocumentation","src":"59949:119:15","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"60082:11:15","parameters":{"id":14592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14586,"mutability":"mutable","name":"left","nameLocation":"60113:4:15","nodeType":"VariableDeclaration","scope":14594,"src":"60094:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14584,"name":"address","nodeType":"ElementaryTypeName","src":"60094:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14585,"nodeType":"ArrayTypeName","src":"60094:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14589,"mutability":"mutable","name":"right","nameLocation":"60138:5:15","nodeType":"VariableDeclaration","scope":14594,"src":"60119:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14587,"name":"address","nodeType":"ElementaryTypeName","src":"60119:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14588,"nodeType":"ArrayTypeName","src":"60119:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14591,"mutability":"mutable","name":"error","nameLocation":"60161:5:15","nodeType":"VariableDeclaration","scope":14594,"src":"60145:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14590,"name":"string","nodeType":"ElementaryTypeName","src":"60145:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60093:74:15"},"returnParameters":{"id":14593,"nodeType":"ParameterList","parameters":[],"src":"60181:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14604,"nodeType":"FunctionDefinition","src":"60255:86:15","nodes":[],"documentation":{"id":14595,"nodeType":"StructuredDocumentation","src":"60188:62:15","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"60264:11:15","parameters":{"id":14602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14598,"mutability":"mutable","name":"left","nameLocation":"60295:4:15","nodeType":"VariableDeclaration","scope":14604,"src":"60276:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60276:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14597,"nodeType":"ArrayTypeName","src":"60276:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14601,"mutability":"mutable","name":"right","nameLocation":"60320:5:15","nodeType":"VariableDeclaration","scope":14604,"src":"60301:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60301:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14600,"nodeType":"ArrayTypeName","src":"60301:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"60275:51:15"},"returnParameters":{"id":14603,"nodeType":"ParameterList","parameters":[],"src":"60340:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14616,"nodeType":"FunctionDefinition","src":"60471:109:15","nodes":[],"documentation":{"id":14605,"nodeType":"StructuredDocumentation","src":"60347:119:15","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"60480:11:15","parameters":{"id":14614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14608,"mutability":"mutable","name":"left","nameLocation":"60511:4:15","nodeType":"VariableDeclaration","scope":14616,"src":"60492:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60492:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14607,"nodeType":"ArrayTypeName","src":"60492:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14611,"mutability":"mutable","name":"right","nameLocation":"60536:5:15","nodeType":"VariableDeclaration","scope":14616,"src":"60517:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"60517:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14610,"nodeType":"ArrayTypeName","src":"60517:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14613,"mutability":"mutable","name":"error","nameLocation":"60559:5:15","nodeType":"VariableDeclaration","scope":14616,"src":"60543:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14612,"name":"string","nodeType":"ElementaryTypeName","src":"60543:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60491:74:15"},"returnParameters":{"id":14615,"nodeType":"ParameterList","parameters":[],"src":"60579:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14626,"nodeType":"FunctionDefinition","src":"60652:84:15","nodes":[],"documentation":{"id":14617,"nodeType":"StructuredDocumentation","src":"60586:61:15","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"60661:11:15","parameters":{"id":14624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14620,"mutability":"mutable","name":"left","nameLocation":"60691:4:15","nodeType":"VariableDeclaration","scope":14626,"src":"60673:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14618,"name":"string","nodeType":"ElementaryTypeName","src":"60673:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14619,"nodeType":"ArrayTypeName","src":"60673:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14623,"mutability":"mutable","name":"right","nameLocation":"60715:5:15","nodeType":"VariableDeclaration","scope":14626,"src":"60697:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14621,"name":"string","nodeType":"ElementaryTypeName","src":"60697:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14622,"nodeType":"ArrayTypeName","src":"60697:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"60672:49:15"},"returnParameters":{"id":14625,"nodeType":"ParameterList","parameters":[],"src":"60735:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14638,"nodeType":"FunctionDefinition","src":"60865:107:15","nodes":[],"documentation":{"id":14627,"nodeType":"StructuredDocumentation","src":"60742:118:15","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"60874:11:15","parameters":{"id":14636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14630,"mutability":"mutable","name":"left","nameLocation":"60904:4:15","nodeType":"VariableDeclaration","scope":14638,"src":"60886:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14628,"name":"string","nodeType":"ElementaryTypeName","src":"60886:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14629,"nodeType":"ArrayTypeName","src":"60886:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14633,"mutability":"mutable","name":"right","nameLocation":"60928:5:15","nodeType":"VariableDeclaration","scope":14638,"src":"60910:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14631,"name":"string","nodeType":"ElementaryTypeName","src":"60910:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14632,"nodeType":"ArrayTypeName","src":"60910:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14635,"mutability":"mutable","name":"error","nameLocation":"60951:5:15","nodeType":"VariableDeclaration","scope":14638,"src":"60935:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14634,"name":"string","nodeType":"ElementaryTypeName","src":"60935:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60885:72:15"},"returnParameters":{"id":14637,"nodeType":"ParameterList","parameters":[],"src":"60971:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14648,"nodeType":"FunctionDefinition","src":"61043:82:15","nodes":[],"documentation":{"id":14639,"nodeType":"StructuredDocumentation","src":"60978:60:15","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"61052:11:15","parameters":{"id":14646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14642,"mutability":"mutable","name":"left","nameLocation":"61081:4:15","nodeType":"VariableDeclaration","scope":14648,"src":"61064:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14640,"name":"bytes","nodeType":"ElementaryTypeName","src":"61064:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14641,"nodeType":"ArrayTypeName","src":"61064:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14645,"mutability":"mutable","name":"right","nameLocation":"61104:5:15","nodeType":"VariableDeclaration","scope":14648,"src":"61087:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14643,"name":"bytes","nodeType":"ElementaryTypeName","src":"61087:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14644,"nodeType":"ArrayTypeName","src":"61087:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"61063:47:15"},"returnParameters":{"id":14647,"nodeType":"ParameterList","parameters":[],"src":"61124:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14660,"nodeType":"FunctionDefinition","src":"61253:105:15","nodes":[],"documentation":{"id":14649,"nodeType":"StructuredDocumentation","src":"61131:117:15","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"61262:11:15","parameters":{"id":14658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14652,"mutability":"mutable","name":"left","nameLocation":"61291:4:15","nodeType":"VariableDeclaration","scope":14660,"src":"61274:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14650,"name":"bytes","nodeType":"ElementaryTypeName","src":"61274:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14651,"nodeType":"ArrayTypeName","src":"61274:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14655,"mutability":"mutable","name":"right","nameLocation":"61314:5:15","nodeType":"VariableDeclaration","scope":14660,"src":"61297:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14653,"name":"bytes","nodeType":"ElementaryTypeName","src":"61297:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14654,"nodeType":"ArrayTypeName","src":"61297:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":14657,"mutability":"mutable","name":"error","nameLocation":"61337:5:15","nodeType":"VariableDeclaration","scope":14660,"src":"61321:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14656,"name":"string","nodeType":"ElementaryTypeName","src":"61321:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61273:70:15"},"returnParameters":{"id":14659,"nodeType":"ParameterList","parameters":[],"src":"61357:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14670,"nodeType":"FunctionDefinition","src":"61478:87:15","nodes":[],"documentation":{"id":14661,"nodeType":"StructuredDocumentation","src":"61364:109:15","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"61487:11:15","parameters":{"id":14668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14663,"mutability":"mutable","name":"left","nameLocation":"61507:4:15","nodeType":"VariableDeclaration","scope":14670,"src":"61499:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14662,"name":"uint256","nodeType":"ElementaryTypeName","src":"61499:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14665,"mutability":"mutable","name":"right","nameLocation":"61521:5:15","nodeType":"VariableDeclaration","scope":14670,"src":"61513:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14664,"name":"uint256","nodeType":"ElementaryTypeName","src":"61513:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14667,"mutability":"mutable","name":"error","nameLocation":"61544:5:15","nodeType":"VariableDeclaration","scope":14670,"src":"61528:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14666,"name":"string","nodeType":"ElementaryTypeName","src":"61528:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61498:52:15"},"returnParameters":{"id":14669,"nodeType":"ParameterList","parameters":[],"src":"61564:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14678,"nodeType":"FunctionDefinition","src":"61627:62:15","nodes":[],"documentation":{"id":14671,"nodeType":"StructuredDocumentation","src":"61571:51:15","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"61636:11:15","parameters":{"id":14676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14673,"mutability":"mutable","name":"left","nameLocation":"61655:4:15","nodeType":"VariableDeclaration","scope":14678,"src":"61648:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14672,"name":"int256","nodeType":"ElementaryTypeName","src":"61648:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14675,"mutability":"mutable","name":"right","nameLocation":"61668:5:15","nodeType":"VariableDeclaration","scope":14678,"src":"61661:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14674,"name":"int256","nodeType":"ElementaryTypeName","src":"61661:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"61647:27:15"},"returnParameters":{"id":14677,"nodeType":"ParameterList","parameters":[],"src":"61688:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14688,"nodeType":"FunctionDefinition","src":"61808:85:15","nodes":[],"documentation":{"id":14679,"nodeType":"StructuredDocumentation","src":"61695:108:15","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"61817:11:15","parameters":{"id":14686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14681,"mutability":"mutable","name":"left","nameLocation":"61836:4:15","nodeType":"VariableDeclaration","scope":14688,"src":"61829:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14680,"name":"int256","nodeType":"ElementaryTypeName","src":"61829:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14683,"mutability":"mutable","name":"right","nameLocation":"61849:5:15","nodeType":"VariableDeclaration","scope":14688,"src":"61842:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14682,"name":"int256","nodeType":"ElementaryTypeName","src":"61842:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14685,"mutability":"mutable","name":"error","nameLocation":"61872:5:15","nodeType":"VariableDeclaration","scope":14688,"src":"61856:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14684,"name":"string","nodeType":"ElementaryTypeName","src":"61856:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61828:50:15"},"returnParameters":{"id":14687,"nodeType":"ParameterList","parameters":[],"src":"61892:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14696,"nodeType":"FunctionDefinition","src":"61956:64:15","nodes":[],"documentation":{"id":14689,"nodeType":"StructuredDocumentation","src":"61899:52:15","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"61965:11:15","parameters":{"id":14694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14691,"mutability":"mutable","name":"left","nameLocation":"61985:4:15","nodeType":"VariableDeclaration","scope":14696,"src":"61977:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14690,"name":"address","nodeType":"ElementaryTypeName","src":"61977:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14693,"mutability":"mutable","name":"right","nameLocation":"61999:5:15","nodeType":"VariableDeclaration","scope":14696,"src":"61991:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14692,"name":"address","nodeType":"ElementaryTypeName","src":"61991:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"61976:29:15"},"returnParameters":{"id":14695,"nodeType":"ParameterList","parameters":[],"src":"62019:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14706,"nodeType":"FunctionDefinition","src":"62140:87:15","nodes":[],"documentation":{"id":14697,"nodeType":"StructuredDocumentation","src":"62026:109:15","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62149:11:15","parameters":{"id":14704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14699,"mutability":"mutable","name":"left","nameLocation":"62169:4:15","nodeType":"VariableDeclaration","scope":14706,"src":"62161:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14698,"name":"address","nodeType":"ElementaryTypeName","src":"62161:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14701,"mutability":"mutable","name":"right","nameLocation":"62183:5:15","nodeType":"VariableDeclaration","scope":14706,"src":"62175:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14700,"name":"address","nodeType":"ElementaryTypeName","src":"62175:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":14703,"mutability":"mutable","name":"error","nameLocation":"62206:5:15","nodeType":"VariableDeclaration","scope":14706,"src":"62190:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14702,"name":"string","nodeType":"ElementaryTypeName","src":"62190:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62160:52:15"},"returnParameters":{"id":14705,"nodeType":"ParameterList","parameters":[],"src":"62226:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14714,"nodeType":"FunctionDefinition","src":"62290:64:15","nodes":[],"documentation":{"id":14707,"nodeType":"StructuredDocumentation","src":"62233:52:15","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62299:11:15","parameters":{"id":14712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14709,"mutability":"mutable","name":"left","nameLocation":"62319:4:15","nodeType":"VariableDeclaration","scope":14714,"src":"62311:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14708,"name":"bytes32","nodeType":"ElementaryTypeName","src":"62311:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14711,"mutability":"mutable","name":"right","nameLocation":"62333:5:15","nodeType":"VariableDeclaration","scope":14714,"src":"62325:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14710,"name":"bytes32","nodeType":"ElementaryTypeName","src":"62325:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"62310:29:15"},"returnParameters":{"id":14713,"nodeType":"ParameterList","parameters":[],"src":"62353:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14724,"nodeType":"FunctionDefinition","src":"62474:87:15","nodes":[],"documentation":{"id":14715,"nodeType":"StructuredDocumentation","src":"62360:109:15","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"62483:11:15","parameters":{"id":14722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14717,"mutability":"mutable","name":"left","nameLocation":"62503:4:15","nodeType":"VariableDeclaration","scope":14724,"src":"62495:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"62495:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14719,"mutability":"mutable","name":"right","nameLocation":"62517:5:15","nodeType":"VariableDeclaration","scope":14724,"src":"62509:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"62509:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14721,"mutability":"mutable","name":"error","nameLocation":"62540:5:15","nodeType":"VariableDeclaration","scope":14724,"src":"62524:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14720,"name":"string","nodeType":"ElementaryTypeName","src":"62524:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62494:52:15"},"returnParameters":{"id":14723,"nodeType":"ParameterList","parameters":[],"src":"62560:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14730,"nodeType":"FunctionDefinition","src":"62617:50:15","nodes":[],"documentation":{"id":14725,"nodeType":"StructuredDocumentation","src":"62567:45:15","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"62626:10:15","parameters":{"id":14728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14727,"mutability":"mutable","name":"condition","nameLocation":"62642:9:15","nodeType":"VariableDeclaration","scope":14730,"src":"62637:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14726,"name":"bool","nodeType":"ElementaryTypeName","src":"62637:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"62636:16:15"},"returnParameters":{"id":14729,"nodeType":"ParameterList","parameters":[],"src":"62666:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14738,"nodeType":"FunctionDefinition","src":"62780:73:15","nodes":[],"documentation":{"id":14731,"nodeType":"StructuredDocumentation","src":"62673:102:15","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"62789:10:15","parameters":{"id":14736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14733,"mutability":"mutable","name":"condition","nameLocation":"62805:9:15","nodeType":"VariableDeclaration","scope":14738,"src":"62800:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14732,"name":"bool","nodeType":"ElementaryTypeName","src":"62800:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14735,"mutability":"mutable","name":"error","nameLocation":"62832:5:15","nodeType":"VariableDeclaration","scope":14738,"src":"62816:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14734,"name":"string","nodeType":"ElementaryTypeName","src":"62816:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62799:39:15"},"returnParameters":{"id":14737,"nodeType":"ParameterList","parameters":[],"src":"62852:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14744,"nodeType":"FunctionDefinition","src":"62948:46:15","nodes":[],"documentation":{"id":14739,"nodeType":"StructuredDocumentation","src":"62859:84:15","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"62957:6:15","parameters":{"id":14742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14741,"mutability":"mutable","name":"condition","nameLocation":"62969:9:15","nodeType":"VariableDeclaration","scope":14744,"src":"62964:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14740,"name":"bool","nodeType":"ElementaryTypeName","src":"62964:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"62963:16:15"},"returnParameters":{"id":14743,"nodeType":"ParameterList","parameters":[],"src":"62993:0:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14750,"nodeType":"FunctionDefinition","src":"63056:51:15","nodes":[],"documentation":{"id":14745,"nodeType":"StructuredDocumentation","src":"63000:51:15","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"63065:10:15","parameters":{"id":14748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14747,"mutability":"mutable","name":"char","nameLocation":"63092:4:15","nodeType":"VariableDeclaration","scope":14750,"src":"63076:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14746,"name":"string","nodeType":"ElementaryTypeName","src":"63076:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63075:22:15"},"returnParameters":{"id":14749,"nodeType":"ParameterList","parameters":[],"src":"63106:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14758,"nodeType":"FunctionDefinition","src":"63181:63:15","nodes":[],"documentation":{"id":14751,"nodeType":"StructuredDocumentation","src":"63113:63:15","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"63190:10:15","parameters":{"id":14756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14753,"mutability":"mutable","name":"char","nameLocation":"63217:4:15","nodeType":"VariableDeclaration","scope":14758,"src":"63201:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14752,"name":"string","nodeType":"ElementaryTypeName","src":"63201:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14755,"mutability":"mutable","name":"value","nameLocation":"63228:5:15","nodeType":"VariableDeclaration","scope":14758,"src":"63223:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14754,"name":"bool","nodeType":"ElementaryTypeName","src":"63223:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"63200:34:15"},"returnParameters":{"id":14757,"nodeType":"ParameterList","parameters":[],"src":"63243:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14766,"nodeType":"FunctionDefinition","src":"63299:85:15","nodes":[],"documentation":{"id":14759,"nodeType":"StructuredDocumentation","src":"63250:44:15","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"63308:6:15","parameters":{"id":14762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14761,"mutability":"mutable","name":"rpcAlias","nameLocation":"63331:8:15","nodeType":"VariableDeclaration","scope":14766,"src":"63315:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14760,"name":"string","nodeType":"ElementaryTypeName","src":"63315:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63314:26:15"},"returnParameters":{"id":14765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14764,"mutability":"mutable","name":"json","nameLocation":"63378:4:15","nodeType":"VariableDeclaration","scope":14766,"src":"63364:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14763,"name":"string","nodeType":"ElementaryTypeName","src":"63364:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63363:20:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14774,"nodeType":"FunctionDefinition","src":"63449:67:15","nodes":[],"documentation":{"id":14767,"nodeType":"StructuredDocumentation","src":"63390:54:15","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"63458:13:15","parameters":{"id":14768,"nodeType":"ParameterList","parameters":[],"src":"63471:2:15"},"returnParameters":{"id":14773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14772,"mutability":"mutable","name":"urls","nameLocation":"63510:4:15","nodeType":"VariableDeclaration","scope":14774,"src":"63497:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12151_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":14770,"nodeType":"UserDefinedTypeName","pathNode":{"id":14769,"name":"Rpc","nameLocations":["63497:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":12151,"src":"63497:3:15"},"referencedDeclaration":12151,"src":"63497:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$12151_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":14771,"nodeType":"ArrayTypeName","src":"63497:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12151_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"63496:19:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14783,"nodeType":"FunctionDefinition","src":"63587:67:15","nodes":[],"documentation":{"id":14775,"nodeType":"StructuredDocumentation","src":"63522:60:15","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"63596:7:15","parameters":{"id":14776,"nodeType":"ParameterList","parameters":[],"src":"63603:2:15"},"returnParameters":{"id":14782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14781,"mutability":"mutable","name":"urls","nameLocation":"63648:4:15","nodeType":"VariableDeclaration","scope":14783,"src":"63629:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":14777,"name":"string","nodeType":"ElementaryTypeName","src":"63629:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14779,"length":{"hexValue":"32","id":14778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"63636:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"63629:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":14780,"nodeType":"ArrayTypeName","src":"63629:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"63628:25:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14789,"nodeType":"FunctionDefinition","src":"63735:42:15","nodes":[],"documentation":{"id":14784,"nodeType":"StructuredDocumentation","src":"63660:70:15","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"63744:5:15","parameters":{"id":14787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14786,"mutability":"mutable","name":"duration","nameLocation":"63758:8:15","nodeType":"VariableDeclaration","scope":14789,"src":"63750:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14785,"name":"uint256","nodeType":"ElementaryTypeName","src":"63750:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63749:18:15"},"returnParameters":{"id":14788,"nodeType":"ParameterList","parameters":[],"src":"63776:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14799,"nodeType":"FunctionDefinition","src":"63862:95:15","nodes":[],"documentation":{"id":14790,"nodeType":"StructuredDocumentation","src":"63814:43:15","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"63871:13:15","parameters":{"id":14795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14792,"mutability":"mutable","name":"toml","nameLocation":"63901:4:15","nodeType":"VariableDeclaration","scope":14799,"src":"63885:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14791,"name":"string","nodeType":"ElementaryTypeName","src":"63885:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14794,"mutability":"mutable","name":"key","nameLocation":"63923:3:15","nodeType":"VariableDeclaration","scope":14799,"src":"63907:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14793,"name":"string","nodeType":"ElementaryTypeName","src":"63907:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63884:43:15"},"returnParameters":{"id":14798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14799,"src":"63951:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14796,"name":"bool","nodeType":"ElementaryTypeName","src":"63951:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"63950:6:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":14809,"nodeType":"FunctionDefinition","src":"64038:101:15","nodes":[],"documentation":{"id":14800,"nodeType":"StructuredDocumentation","src":"63963:70:15","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"64047:16:15","parameters":{"id":14805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14802,"mutability":"mutable","name":"toml","nameLocation":"64080:4:15","nodeType":"VariableDeclaration","scope":14809,"src":"64064:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14801,"name":"string","nodeType":"ElementaryTypeName","src":"64064:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14804,"mutability":"mutable","name":"key","nameLocation":"64102:3:15","nodeType":"VariableDeclaration","scope":14809,"src":"64086:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14803,"name":"string","nodeType":"ElementaryTypeName","src":"64086:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64063:43:15"},"returnParameters":{"id":14808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14809,"src":"64130:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14806,"name":"address","nodeType":"ElementaryTypeName","src":"64130:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"64129:9:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14820,"nodeType":"FunctionDefinition","src":"64222:139:15","nodes":[],"documentation":{"id":14810,"nodeType":"StructuredDocumentation","src":"64145:72:15","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"64231:21:15","parameters":{"id":14815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14812,"mutability":"mutable","name":"toml","nameLocation":"64269:4:15","nodeType":"VariableDeclaration","scope":14820,"src":"64253:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14811,"name":"string","nodeType":"ElementaryTypeName","src":"64253:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14814,"mutability":"mutable","name":"key","nameLocation":"64291:3:15","nodeType":"VariableDeclaration","scope":14820,"src":"64275:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14813,"name":"string","nodeType":"ElementaryTypeName","src":"64275:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64252:43:15"},"returnParameters":{"id":14819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14820,"src":"64343:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14816,"name":"address","nodeType":"ElementaryTypeName","src":"64343:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14817,"nodeType":"ArrayTypeName","src":"64343:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"64342:18:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14830,"nodeType":"FunctionDefinition","src":"64439:95:15","nodes":[],"documentation":{"id":14821,"nodeType":"StructuredDocumentation","src":"64367:67:15","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"64448:13:15","parameters":{"id":14826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14823,"mutability":"mutable","name":"toml","nameLocation":"64478:4:15","nodeType":"VariableDeclaration","scope":14830,"src":"64462:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14822,"name":"string","nodeType":"ElementaryTypeName","src":"64462:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14825,"mutability":"mutable","name":"key","nameLocation":"64500:3:15","nodeType":"VariableDeclaration","scope":14830,"src":"64484:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14824,"name":"string","nodeType":"ElementaryTypeName","src":"64484:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64461:43:15"},"returnParameters":{"id":14829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14830,"src":"64528:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14827,"name":"bool","nodeType":"ElementaryTypeName","src":"64528:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"64527:6:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14841,"nodeType":"FunctionDefinition","src":"64614:109:15","nodes":[],"documentation":{"id":14831,"nodeType":"StructuredDocumentation","src":"64540:69:15","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"64623:18:15","parameters":{"id":14836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14833,"mutability":"mutable","name":"toml","nameLocation":"64658:4:15","nodeType":"VariableDeclaration","scope":14841,"src":"64642:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14832,"name":"string","nodeType":"ElementaryTypeName","src":"64642:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14835,"mutability":"mutable","name":"key","nameLocation":"64680:3:15","nodeType":"VariableDeclaration","scope":14841,"src":"64664:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14834,"name":"string","nodeType":"ElementaryTypeName","src":"64664:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64641:43:15"},"returnParameters":{"id":14840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14839,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14841,"src":"64708:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14837,"name":"bool","nodeType":"ElementaryTypeName","src":"64708:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14838,"nodeType":"ArrayTypeName","src":"64708:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"64707:15:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14851,"nodeType":"FunctionDefinition","src":"64802:104:15","nodes":[],"documentation":{"id":14842,"nodeType":"StructuredDocumentation","src":"64729:68:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"64811:14:15","parameters":{"id":14847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14844,"mutability":"mutable","name":"toml","nameLocation":"64842:4:15","nodeType":"VariableDeclaration","scope":14851,"src":"64826:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14843,"name":"string","nodeType":"ElementaryTypeName","src":"64826:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14846,"mutability":"mutable","name":"key","nameLocation":"64864:3:15","nodeType":"VariableDeclaration","scope":14851,"src":"64848:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14845,"name":"string","nodeType":"ElementaryTypeName","src":"64848:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64825:43:15"},"returnParameters":{"id":14850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14851,"src":"64892:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14848,"name":"bytes","nodeType":"ElementaryTypeName","src":"64892:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"64891:14:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14861,"nodeType":"FunctionDefinition","src":"64987:101:15","nodes":[],"documentation":{"id":14852,"nodeType":"StructuredDocumentation","src":"64912:70:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"64996:16:15","parameters":{"id":14857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14854,"mutability":"mutable","name":"toml","nameLocation":"65029:4:15","nodeType":"VariableDeclaration","scope":14861,"src":"65013:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14853,"name":"string","nodeType":"ElementaryTypeName","src":"65013:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14856,"mutability":"mutable","name":"key","nameLocation":"65051:3:15","nodeType":"VariableDeclaration","scope":14861,"src":"65035:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14855,"name":"string","nodeType":"ElementaryTypeName","src":"65035:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65012:43:15"},"returnParameters":{"id":14860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14861,"src":"65079:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65079:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"65078:9:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14872,"nodeType":"FunctionDefinition","src":"65171:139:15","nodes":[],"documentation":{"id":14862,"nodeType":"StructuredDocumentation","src":"65094:72:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"65180:21:15","parameters":{"id":14867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14864,"mutability":"mutable","name":"toml","nameLocation":"65218:4:15","nodeType":"VariableDeclaration","scope":14872,"src":"65202:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14863,"name":"string","nodeType":"ElementaryTypeName","src":"65202:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14866,"mutability":"mutable","name":"key","nameLocation":"65240:3:15","nodeType":"VariableDeclaration","scope":14872,"src":"65224:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14865,"name":"string","nodeType":"ElementaryTypeName","src":"65224:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65201:43:15"},"returnParameters":{"id":14871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14872,"src":"65292:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14868,"name":"bytes32","nodeType":"ElementaryTypeName","src":"65292:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14869,"nodeType":"ArrayTypeName","src":"65292:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"65291:18:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14883,"nodeType":"FunctionDefinition","src":"65391:111:15","nodes":[],"documentation":{"id":14873,"nodeType":"StructuredDocumentation","src":"65316:70:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"65400:19:15","parameters":{"id":14878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14875,"mutability":"mutable","name":"toml","nameLocation":"65436:4:15","nodeType":"VariableDeclaration","scope":14883,"src":"65420:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14874,"name":"string","nodeType":"ElementaryTypeName","src":"65420:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14877,"mutability":"mutable","name":"key","nameLocation":"65458:3:15","nodeType":"VariableDeclaration","scope":14883,"src":"65442:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14876,"name":"string","nodeType":"ElementaryTypeName","src":"65442:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65419:43:15"},"returnParameters":{"id":14882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14881,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14883,"src":"65486:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14879,"name":"bytes","nodeType":"ElementaryTypeName","src":"65486:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14880,"nodeType":"ArrayTypeName","src":"65486:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"65485:16:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14893,"nodeType":"FunctionDefinition","src":"65582:96:15","nodes":[],"documentation":{"id":14884,"nodeType":"StructuredDocumentation","src":"65508:69:15","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"65591:12:15","parameters":{"id":14889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14886,"mutability":"mutable","name":"toml","nameLocation":"65620:4:15","nodeType":"VariableDeclaration","scope":14893,"src":"65604:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14885,"name":"string","nodeType":"ElementaryTypeName","src":"65604:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14888,"mutability":"mutable","name":"key","nameLocation":"65642:3:15","nodeType":"VariableDeclaration","scope":14893,"src":"65626:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14887,"name":"string","nodeType":"ElementaryTypeName","src":"65626:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65603:43:15"},"returnParameters":{"id":14892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14891,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14893,"src":"65670:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14890,"name":"int256","nodeType":"ElementaryTypeName","src":"65670:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"65669:8:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14904,"nodeType":"FunctionDefinition","src":"65760:110:15","nodes":[],"documentation":{"id":14894,"nodeType":"StructuredDocumentation","src":"65684:71:15","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"65769:17:15","parameters":{"id":14899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14896,"mutability":"mutable","name":"toml","nameLocation":"65803:4:15","nodeType":"VariableDeclaration","scope":14904,"src":"65787:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14895,"name":"string","nodeType":"ElementaryTypeName","src":"65787:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14898,"mutability":"mutable","name":"key","nameLocation":"65825:3:15","nodeType":"VariableDeclaration","scope":14904,"src":"65809:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14897,"name":"string","nodeType":"ElementaryTypeName","src":"65809:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65786:43:15"},"returnParameters":{"id":14903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14904,"src":"65853:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14900,"name":"int256","nodeType":"ElementaryTypeName","src":"65853:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14901,"nodeType":"ArrayTypeName","src":"65853:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"65852:17:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14915,"nodeType":"FunctionDefinition","src":"65934:111:15","nodes":[],"documentation":{"id":14905,"nodeType":"StructuredDocumentation","src":"65876:53:15","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"65943:13:15","parameters":{"id":14910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14907,"mutability":"mutable","name":"toml","nameLocation":"65973:4:15","nodeType":"VariableDeclaration","scope":14915,"src":"65957:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14906,"name":"string","nodeType":"ElementaryTypeName","src":"65957:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14909,"mutability":"mutable","name":"key","nameLocation":"65995:3:15","nodeType":"VariableDeclaration","scope":14915,"src":"65979:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14908,"name":"string","nodeType":"ElementaryTypeName","src":"65979:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65956:43:15"},"returnParameters":{"id":14914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14913,"mutability":"mutable","name":"keys","nameLocation":"66039:4:15","nodeType":"VariableDeclaration","scope":14915,"src":"66023:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14911,"name":"string","nodeType":"ElementaryTypeName","src":"66023:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14912,"nodeType":"ArrayTypeName","src":"66023:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"66022:22:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14925,"nodeType":"FunctionDefinition","src":"66125:106:15","nodes":[],"documentation":{"id":14916,"nodeType":"StructuredDocumentation","src":"66051:69:15","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"66134:15:15","parameters":{"id":14921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14918,"mutability":"mutable","name":"toml","nameLocation":"66166:4:15","nodeType":"VariableDeclaration","scope":14925,"src":"66150:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14917,"name":"string","nodeType":"ElementaryTypeName","src":"66150:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14920,"mutability":"mutable","name":"key","nameLocation":"66188:3:15","nodeType":"VariableDeclaration","scope":14925,"src":"66172:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14919,"name":"string","nodeType":"ElementaryTypeName","src":"66172:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66149:43:15"},"returnParameters":{"id":14924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14925,"src":"66216:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14922,"name":"string","nodeType":"ElementaryTypeName","src":"66216:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66215:15:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14936,"nodeType":"FunctionDefinition","src":"66313:113:15","nodes":[],"documentation":{"id":14926,"nodeType":"StructuredDocumentation","src":"66237:71:15","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"66322:20:15","parameters":{"id":14931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14928,"mutability":"mutable","name":"toml","nameLocation":"66359:4:15","nodeType":"VariableDeclaration","scope":14936,"src":"66343:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14927,"name":"string","nodeType":"ElementaryTypeName","src":"66343:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14930,"mutability":"mutable","name":"key","nameLocation":"66381:3:15","nodeType":"VariableDeclaration","scope":14936,"src":"66365:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14929,"name":"string","nodeType":"ElementaryTypeName","src":"66365:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66342:43:15"},"returnParameters":{"id":14935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14936,"src":"66409:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14932,"name":"string","nodeType":"ElementaryTypeName","src":"66409:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14933,"nodeType":"ArrayTypeName","src":"66409:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"66408:17:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14946,"nodeType":"FunctionDefinition","src":"66507:98:15","nodes":[],"documentation":{"id":14937,"nodeType":"StructuredDocumentation","src":"66432:70:15","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"66516:13:15","parameters":{"id":14942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14939,"mutability":"mutable","name":"toml","nameLocation":"66546:4:15","nodeType":"VariableDeclaration","scope":14946,"src":"66530:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14938,"name":"string","nodeType":"ElementaryTypeName","src":"66530:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14941,"mutability":"mutable","name":"key","nameLocation":"66568:3:15","nodeType":"VariableDeclaration","scope":14946,"src":"66552:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14940,"name":"string","nodeType":"ElementaryTypeName","src":"66552:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66529:43:15"},"returnParameters":{"id":14945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14946,"src":"66596:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14943,"name":"uint256","nodeType":"ElementaryTypeName","src":"66596:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"66595:9:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14957,"nodeType":"FunctionDefinition","src":"66688:112:15","nodes":[],"documentation":{"id":14947,"nodeType":"StructuredDocumentation","src":"66611:72:15","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"66697:18:15","parameters":{"id":14952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14949,"mutability":"mutable","name":"toml","nameLocation":"66732:4:15","nodeType":"VariableDeclaration","scope":14957,"src":"66716:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14948,"name":"string","nodeType":"ElementaryTypeName","src":"66716:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14951,"mutability":"mutable","name":"key","nameLocation":"66754:3:15","nodeType":"VariableDeclaration","scope":14957,"src":"66738:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14950,"name":"string","nodeType":"ElementaryTypeName","src":"66738:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66715:43:15"},"returnParameters":{"id":14956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14957,"src":"66782:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14953,"name":"uint256","nodeType":"ElementaryTypeName","src":"66782:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14954,"nodeType":"ArrayTypeName","src":"66782:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"66781:18:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14965,"nodeType":"FunctionDefinition","src":"66840:93:15","nodes":[],"documentation":{"id":14958,"nodeType":"StructuredDocumentation","src":"66806:29:15","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"66849:9:15","parameters":{"id":14961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14960,"mutability":"mutable","name":"toml","nameLocation":"66875:4:15","nodeType":"VariableDeclaration","scope":14965,"src":"66859:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14959,"name":"string","nodeType":"ElementaryTypeName","src":"66859:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66858:22:15"},"returnParameters":{"id":14964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14963,"mutability":"mutable","name":"abiEncodedData","nameLocation":"66917:14:15","nodeType":"VariableDeclaration","scope":14965,"src":"66904:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14962,"name":"bytes","nodeType":"ElementaryTypeName","src":"66904:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"66903:29:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14975,"nodeType":"FunctionDefinition","src":"66982:114:15","nodes":[],"documentation":{"id":14966,"nodeType":"StructuredDocumentation","src":"66939:38:15","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"66991:9:15","parameters":{"id":14971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14968,"mutability":"mutable","name":"toml","nameLocation":"67017:4:15","nodeType":"VariableDeclaration","scope":14975,"src":"67001:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14967,"name":"string","nodeType":"ElementaryTypeName","src":"67001:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14970,"mutability":"mutable","name":"key","nameLocation":"67039:3:15","nodeType":"VariableDeclaration","scope":14975,"src":"67023:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14969,"name":"string","nodeType":"ElementaryTypeName","src":"67023:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67000:43:15"},"returnParameters":{"id":14974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14973,"mutability":"mutable","name":"abiEncodedData","nameLocation":"67080:14:15","nodeType":"VariableDeclaration","scope":14975,"src":"67067:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14972,"name":"bytes","nodeType":"ElementaryTypeName","src":"67067:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"67066:29:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14983,"nodeType":"FunctionDefinition","src":"67189:72:15","nodes":[],"documentation":{"id":14976,"nodeType":"StructuredDocumentation","src":"67102:82:15","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"67198:9:15","parameters":{"id":14981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14978,"mutability":"mutable","name":"json","nameLocation":"67224:4:15","nodeType":"VariableDeclaration","scope":14983,"src":"67208:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14977,"name":"string","nodeType":"ElementaryTypeName","src":"67208:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14980,"mutability":"mutable","name":"path","nameLocation":"67246:4:15","nodeType":"VariableDeclaration","scope":14983,"src":"67230:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14979,"name":"string","nodeType":"ElementaryTypeName","src":"67230:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67207:44:15"},"returnParameters":{"id":14982,"nodeType":"ParameterList","parameters":[],"src":"67260:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14993,"nodeType":"FunctionDefinition","src":"67530:98:15","nodes":[],"documentation":{"id":14984,"nodeType":"StructuredDocumentation","src":"67267:258:15","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"67539:9:15","parameters":{"id":14991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14986,"mutability":"mutable","name":"json","nameLocation":"67565:4:15","nodeType":"VariableDeclaration","scope":14993,"src":"67549:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14985,"name":"string","nodeType":"ElementaryTypeName","src":"67549:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14988,"mutability":"mutable","name":"path","nameLocation":"67587:4:15","nodeType":"VariableDeclaration","scope":14993,"src":"67571:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14987,"name":"string","nodeType":"ElementaryTypeName","src":"67571:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14990,"mutability":"mutable","name":"valueKey","nameLocation":"67609:8:15","nodeType":"VariableDeclaration","scope":14993,"src":"67593:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14989,"name":"string","nodeType":"ElementaryTypeName","src":"67593:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67548:70:15"},"returnParameters":{"id":14992,"nodeType":"ParameterList","parameters":[],"src":"67627:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15005,"nodeType":"FunctionDefinition","src":"67767:141:15","nodes":[],"documentation":{"id":14994,"nodeType":"StructuredDocumentation","src":"67670:92:15","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"67776:21:15","parameters":{"id":15001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14996,"mutability":"mutable","name":"salt","nameLocation":"67806:4:15","nodeType":"VariableDeclaration","scope":15005,"src":"67798:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14995,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67798:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":14998,"mutability":"mutable","name":"initCodeHash","nameLocation":"67820:12:15","nodeType":"VariableDeclaration","scope":15005,"src":"67812:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14997,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67812:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15000,"mutability":"mutable","name":"deployer","nameLocation":"67842:8:15","nodeType":"VariableDeclaration","scope":15005,"src":"67834:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14999,"name":"address","nodeType":"ElementaryTypeName","src":"67834:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"67797:54:15"},"returnParameters":{"id":15004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15005,"src":"67899:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15002,"name":"address","nodeType":"ElementaryTypeName","src":"67899:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"67898:9:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15015,"nodeType":"FunctionDefinition","src":"68013:99:15","nodes":[],"documentation":{"id":15006,"nodeType":"StructuredDocumentation","src":"67914:94:15","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"68022:21:15","parameters":{"id":15011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15008,"mutability":"mutable","name":"salt","nameLocation":"68052:4:15","nodeType":"VariableDeclaration","scope":15015,"src":"68044:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15007,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68044:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15010,"mutability":"mutable","name":"initCodeHash","nameLocation":"68066:12:15","nodeType":"VariableDeclaration","scope":15015,"src":"68058:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15009,"name":"bytes32","nodeType":"ElementaryTypeName","src":"68058:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"68043:36:15"},"returnParameters":{"id":15014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15015,"src":"68103:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15012,"name":"address","nodeType":"ElementaryTypeName","src":"68103:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"68102:9:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15025,"nodeType":"FunctionDefinition","src":"68217:95:15","nodes":[],"documentation":{"id":15016,"nodeType":"StructuredDocumentation","src":"68118:94:15","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"68226:20:15","parameters":{"id":15021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15018,"mutability":"mutable","name":"deployer","nameLocation":"68255:8:15","nodeType":"VariableDeclaration","scope":15025,"src":"68247:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15017,"name":"address","nodeType":"ElementaryTypeName","src":"68247:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15020,"mutability":"mutable","name":"nonce","nameLocation":"68273:5:15","nodeType":"VariableDeclaration","scope":15025,"src":"68265:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15019,"name":"uint256","nodeType":"ElementaryTypeName","src":"68265:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68246:33:15"},"returnParameters":{"id":15024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15025,"src":"68303:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15022,"name":"address","nodeType":"ElementaryTypeName","src":"68303:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"68302:9:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15034,"nodeType":"FunctionDefinition","src":"68422:91:15","nodes":[],"documentation":{"id":15026,"nodeType":"StructuredDocumentation","src":"68318:99:15","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"68431:12:15","parameters":{"id":15029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15028,"mutability":"mutable","name":"walletLabel","nameLocation":"68460:11:15","nodeType":"VariableDeclaration","scope":15034,"src":"68444:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15027,"name":"string","nodeType":"ElementaryTypeName","src":"68444:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68443:29:15"},"returnParameters":{"id":15033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15032,"mutability":"mutable","name":"wallet","nameLocation":"68505:6:15","nodeType":"VariableDeclaration","scope":15034,"src":"68491:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12210_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15031,"nodeType":"UserDefinedTypeName","pathNode":{"id":15030,"name":"Wallet","nameLocations":["68491:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":12210,"src":"68491:6:15"},"referencedDeclaration":12210,"src":"68491:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12210_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"68490:22:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15043,"nodeType":"FunctionDefinition","src":"68591:82:15","nodes":[],"documentation":{"id":15035,"nodeType":"StructuredDocumentation","src":"68519:67:15","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"68600:12:15","parameters":{"id":15038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15037,"mutability":"mutable","name":"privateKey","nameLocation":"68621:10:15","nodeType":"VariableDeclaration","scope":15043,"src":"68613:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15036,"name":"uint256","nodeType":"ElementaryTypeName","src":"68613:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"68612:20:15"},"returnParameters":{"id":15042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15041,"mutability":"mutable","name":"wallet","nameLocation":"68665:6:15","nodeType":"VariableDeclaration","scope":15043,"src":"68651:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12210_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15040,"nodeType":"UserDefinedTypeName","pathNode":{"id":15039,"name":"Wallet","nameLocations":["68651:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":12210,"src":"68651:6:15"},"referencedDeclaration":12210,"src":"68651:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12210_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"68650:22:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15054,"nodeType":"FunctionDefinition","src":"68787:111:15","nodes":[],"documentation":{"id":15044,"nodeType":"StructuredDocumentation","src":"68679:103:15","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"68796:12:15","parameters":{"id":15049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15046,"mutability":"mutable","name":"privateKey","nameLocation":"68817:10:15","nodeType":"VariableDeclaration","scope":15054,"src":"68809:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15045,"name":"uint256","nodeType":"ElementaryTypeName","src":"68809:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15048,"mutability":"mutable","name":"walletLabel","nameLocation":"68845:11:15","nodeType":"VariableDeclaration","scope":15054,"src":"68829:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15047,"name":"string","nodeType":"ElementaryTypeName","src":"68829:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68808:49:15"},"returnParameters":{"id":15053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15052,"mutability":"mutable","name":"wallet","nameLocation":"68890:6:15","nodeType":"VariableDeclaration","scope":15054,"src":"68876:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12210_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15051,"nodeType":"UserDefinedTypeName","pathNode":{"id":15050,"name":"Wallet","nameLocations":["68876:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":12210,"src":"68876:6:15"},"referencedDeclaration":12210,"src":"68876:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12210_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"68875:22:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15064,"nodeType":"FunctionDefinition","src":"69046:102:15","nodes":[],"documentation":{"id":15055,"nodeType":"StructuredDocumentation","src":"68904:137:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"69055:9:15","parameters":{"id":15060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15057,"mutability":"mutable","name":"mnemonic","nameLocation":"69081:8:15","nodeType":"VariableDeclaration","scope":15064,"src":"69065:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15056,"name":"string","nodeType":"ElementaryTypeName","src":"69065:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15059,"mutability":"mutable","name":"index","nameLocation":"69098:5:15","nodeType":"VariableDeclaration","scope":15064,"src":"69091:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15058,"name":"uint32","nodeType":"ElementaryTypeName","src":"69091:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"69064:40:15"},"returnParameters":{"id":15063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15062,"mutability":"mutable","name":"privateKey","nameLocation":"69136:10:15","nodeType":"VariableDeclaration","scope":15064,"src":"69128:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15061,"name":"uint256","nodeType":"ElementaryTypeName","src":"69128:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69127:20:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15076,"nodeType":"FunctionDefinition","src":"69277:158:15","nodes":[],"documentation":{"id":15065,"nodeType":"StructuredDocumentation","src":"69154:118:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"69286:9:15","parameters":{"id":15072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15067,"mutability":"mutable","name":"mnemonic","nameLocation":"69312:8:15","nodeType":"VariableDeclaration","scope":15076,"src":"69296:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15066,"name":"string","nodeType":"ElementaryTypeName","src":"69296:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15069,"mutability":"mutable","name":"derivationPath","nameLocation":"69338:14:15","nodeType":"VariableDeclaration","scope":15076,"src":"69322:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15068,"name":"string","nodeType":"ElementaryTypeName","src":"69322:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15071,"mutability":"mutable","name":"index","nameLocation":"69361:5:15","nodeType":"VariableDeclaration","scope":15076,"src":"69354:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15070,"name":"uint32","nodeType":"ElementaryTypeName","src":"69354:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"69295:72:15"},"returnParameters":{"id":15075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15074,"mutability":"mutable","name":"privateKey","nameLocation":"69423:10:15","nodeType":"VariableDeclaration","scope":15076,"src":"69415:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15073,"name":"uint256","nodeType":"ElementaryTypeName","src":"69415:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69414:20:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15088,"nodeType":"FunctionDefinition","src":"69609:152:15","nodes":[],"documentation":{"id":15077,"nodeType":"StructuredDocumentation","src":"69441:163:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"69618:9:15","parameters":{"id":15084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15079,"mutability":"mutable","name":"mnemonic","nameLocation":"69644:8:15","nodeType":"VariableDeclaration","scope":15088,"src":"69628:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15078,"name":"string","nodeType":"ElementaryTypeName","src":"69628:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15081,"mutability":"mutable","name":"index","nameLocation":"69661:5:15","nodeType":"VariableDeclaration","scope":15088,"src":"69654:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15080,"name":"uint32","nodeType":"ElementaryTypeName","src":"69654:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":15083,"mutability":"mutable","name":"language","nameLocation":"69684:8:15","nodeType":"VariableDeclaration","scope":15088,"src":"69668:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15082,"name":"string","nodeType":"ElementaryTypeName","src":"69668:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69627:66:15"},"returnParameters":{"id":15087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15086,"mutability":"mutable","name":"privateKey","nameLocation":"69749:10:15","nodeType":"VariableDeclaration","scope":15088,"src":"69741:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15085,"name":"uint256","nodeType":"ElementaryTypeName","src":"69741:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"69740:20:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15102,"nodeType":"FunctionDefinition","src":"69916:184:15","nodes":[],"documentation":{"id":15089,"nodeType":"StructuredDocumentation","src":"69767:144:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"69925:9:15","parameters":{"id":15098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15091,"mutability":"mutable","name":"mnemonic","nameLocation":"69951:8:15","nodeType":"VariableDeclaration","scope":15102,"src":"69935:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15090,"name":"string","nodeType":"ElementaryTypeName","src":"69935:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15093,"mutability":"mutable","name":"derivationPath","nameLocation":"69977:14:15","nodeType":"VariableDeclaration","scope":15102,"src":"69961:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15092,"name":"string","nodeType":"ElementaryTypeName","src":"69961:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15095,"mutability":"mutable","name":"index","nameLocation":"70000:5:15","nodeType":"VariableDeclaration","scope":15102,"src":"69993:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":15094,"name":"uint32","nodeType":"ElementaryTypeName","src":"69993:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":15097,"mutability":"mutable","name":"language","nameLocation":"70023:8:15","nodeType":"VariableDeclaration","scope":15102,"src":"70007:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15096,"name":"string","nodeType":"ElementaryTypeName","src":"70007:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69934:98:15"},"returnParameters":{"id":15101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15100,"mutability":"mutable","name":"privateKey","nameLocation":"70088:10:15","nodeType":"VariableDeclaration","scope":15102,"src":"70080:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15099,"name":"uint256","nodeType":"ElementaryTypeName","src":"70080:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70079:20:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15110,"nodeType":"FunctionDefinition","src":"70156:86:15","nodes":[],"documentation":{"id":15103,"nodeType":"StructuredDocumentation","src":"70106:45:15","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"70165:8:15","parameters":{"id":15106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15105,"mutability":"mutable","name":"account","nameLocation":"70182:7:15","nodeType":"VariableDeclaration","scope":15110,"src":"70174:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15104,"name":"address","nodeType":"ElementaryTypeName","src":"70174:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"70173:17:15"},"returnParameters":{"id":15109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15108,"mutability":"mutable","name":"currentLabel","nameLocation":"70228:12:15","nodeType":"VariableDeclaration","scope":15110,"src":"70214:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15107,"name":"string","nodeType":"ElementaryTypeName","src":"70214:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70213:28:15"},"scope":15183,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15119,"nodeType":"FunctionDefinition","src":"70280:74:15","nodes":[],"documentation":{"id":15111,"nodeType":"StructuredDocumentation","src":"70248:27:15","text":"Get a `Wallet`'s nonce."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"70289:8:15","parameters":{"id":15115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15114,"mutability":"mutable","name":"wallet","nameLocation":"70314:6:15","nodeType":"VariableDeclaration","scope":15119,"src":"70298:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12210_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15113,"nodeType":"UserDefinedTypeName","pathNode":{"id":15112,"name":"Wallet","nameLocations":["70298:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":12210,"src":"70298:6:15"},"referencedDeclaration":12210,"src":"70298:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12210_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"70297:24:15"},"returnParameters":{"id":15118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15117,"mutability":"mutable","name":"nonce","nameLocation":"70347:5:15","nodeType":"VariableDeclaration","scope":15119,"src":"70340:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15116,"name":"uint64","nodeType":"ElementaryTypeName","src":"70340:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"70339:14:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15127,"nodeType":"FunctionDefinition","src":"70402:67:15","nodes":[],"documentation":{"id":15120,"nodeType":"StructuredDocumentation","src":"70360:37:15","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"70411:5:15","parameters":{"id":15125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15122,"mutability":"mutable","name":"account","nameLocation":"70425:7:15","nodeType":"VariableDeclaration","scope":15127,"src":"70417:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15121,"name":"address","nodeType":"ElementaryTypeName","src":"70417:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15124,"mutability":"mutable","name":"newLabel","nameLocation":"70450:8:15","nodeType":"VariableDeclaration","scope":15127,"src":"70434:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15123,"name":"string","nodeType":"ElementaryTypeName","src":"70434:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70416:43:15"},"returnParameters":{"id":15126,"nodeType":"ParameterList","parameters":[],"src":"70468:0:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15135,"nodeType":"FunctionDefinition","src":"70553:76:15","nodes":[],"documentation":{"id":15128,"nodeType":"StructuredDocumentation","src":"70475:73:15","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"70562:11:15","parameters":{"id":15131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15130,"mutability":"mutable","name":"privateKey","nameLocation":"70582:10:15","nodeType":"VariableDeclaration","scope":15135,"src":"70574:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15129,"name":"uint256","nodeType":"ElementaryTypeName","src":"70574:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"70573:20:15"},"returnParameters":{"id":15134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15133,"mutability":"mutable","name":"keyAddr","nameLocation":"70620:7:15","nodeType":"VariableDeclaration","scope":15135,"src":"70612:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15132,"name":"address","nodeType":"ElementaryTypeName","src":"70612:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"70611:17:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15150,"nodeType":"FunctionDefinition","src":"70671:103:15","nodes":[],"documentation":{"id":15136,"nodeType":"StructuredDocumentation","src":"70635:31:15","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"70680:4:15","parameters":{"id":15142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15139,"mutability":"mutable","name":"wallet","nameLocation":"70701:6:15","nodeType":"VariableDeclaration","scope":15150,"src":"70685:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12210_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":15138,"nodeType":"UserDefinedTypeName","pathNode":{"id":15137,"name":"Wallet","nameLocations":["70685:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":12210,"src":"70685:6:15"},"referencedDeclaration":12210,"src":"70685:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$12210_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":15141,"mutability":"mutable","name":"digest","nameLocation":"70717:6:15","nodeType":"VariableDeclaration","scope":15150,"src":"70709:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15140,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70709:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"70684:40:15"},"returnParameters":{"id":15149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15144,"mutability":"mutable","name":"v","nameLocation":"70749:1:15","nodeType":"VariableDeclaration","scope":15150,"src":"70743:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":15143,"name":"uint8","nodeType":"ElementaryTypeName","src":"70743:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":15146,"mutability":"mutable","name":"r","nameLocation":"70760:1:15","nodeType":"VariableDeclaration","scope":15150,"src":"70752:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15145,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70752:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15148,"mutability":"mutable","name":"s","nameLocation":"70771:1:15","nodeType":"VariableDeclaration","scope":15150,"src":"70763:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"70763:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"70742:31:15"},"scope":15183,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15158,"nodeType":"FunctionDefinition","src":"70835:80:15","nodes":[],"documentation":{"id":15151,"nodeType":"StructuredDocumentation","src":"70780:50:15","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"70844:11:15","parameters":{"id":15154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15153,"mutability":"mutable","name":"data","nameLocation":"70871:4:15","nodeType":"VariableDeclaration","scope":15158,"src":"70856:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15152,"name":"bytes","nodeType":"ElementaryTypeName","src":"70856:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"70855:21:15"},"returnParameters":{"id":15157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15158,"src":"70900:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15155,"name":"string","nodeType":"ElementaryTypeName","src":"70900:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70899:15:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15166,"nodeType":"FunctionDefinition","src":"70977:81:15","nodes":[],"documentation":{"id":15159,"nodeType":"StructuredDocumentation","src":"70921:51:15","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"70986:11:15","parameters":{"id":15162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15161,"mutability":"mutable","name":"data","nameLocation":"71014:4:15","nodeType":"VariableDeclaration","scope":15166,"src":"70998:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15160,"name":"string","nodeType":"ElementaryTypeName","src":"70998:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70997:22:15"},"returnParameters":{"id":15165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15166,"src":"71043:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15163,"name":"string","nodeType":"ElementaryTypeName","src":"71043:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71042:15:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15174,"nodeType":"FunctionDefinition","src":"71116:77:15","nodes":[],"documentation":{"id":15167,"nodeType":"StructuredDocumentation","src":"71064:47:15","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"71125:8:15","parameters":{"id":15170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15169,"mutability":"mutable","name":"data","nameLocation":"71149:4:15","nodeType":"VariableDeclaration","scope":15174,"src":"71134:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15168,"name":"bytes","nodeType":"ElementaryTypeName","src":"71134:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"71133:21:15"},"returnParameters":{"id":15173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15174,"src":"71178:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15171,"name":"string","nodeType":"ElementaryTypeName","src":"71178:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71177:15:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15182,"nodeType":"FunctionDefinition","src":"71252:78:15","nodes":[],"documentation":{"id":15175,"nodeType":"StructuredDocumentation","src":"71199:48:15","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"71261:8:15","parameters":{"id":15178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15177,"mutability":"mutable","name":"data","nameLocation":"71286:4:15","nodeType":"VariableDeclaration","scope":15182,"src":"71270:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15176,"name":"string","nodeType":"ElementaryTypeName","src":"71270:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71269:22:15"},"returnParameters":{"id":15181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15182,"src":"71315:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15179,"name":"string","nodeType":"ElementaryTypeName","src":"71315:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71314:15:15"},"scope":15183,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":12116,"nodeType":"StructuredDocumentation","src":"184:225:15","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[15183],"name":"VmSafe","nameLocation":"419:6:15","scope":15759,"usedErrors":[],"usedEvents":[]},{"id":15758,"nodeType":"ContractDefinition","src":"71505:13590:15","nodes":[{"id":15192,"nodeType":"FunctionDefinition","src":"71665:61:15","nodes":[],"documentation":{"id":15187,"nodeType":"StructuredDocumentation","src":"71564:96:15","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"71674:10:15","parameters":{"id":15188,"nodeType":"ParameterList","parameters":[],"src":"71684:2:15"},"returnParameters":{"id":15191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15190,"mutability":"mutable","name":"forkId","nameLocation":"71718:6:15","nodeType":"VariableDeclaration","scope":15192,"src":"71710:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15189,"name":"uint256","nodeType":"ElementaryTypeName","src":"71710:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71709:16:15"},"scope":15758,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15198,"nodeType":"FunctionDefinition","src":"71810:51:15","nodes":[],"documentation":{"id":15193,"nodeType":"StructuredDocumentation","src":"71732:73:15","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"71819:15:15","parameters":{"id":15196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15195,"mutability":"mutable","name":"account","nameLocation":"71843:7:15","nodeType":"VariableDeclaration","scope":15198,"src":"71835:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15194,"name":"address","nodeType":"ElementaryTypeName","src":"71835:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"71834:17:15"},"returnParameters":{"id":15197,"nodeType":"ParameterList","parameters":[],"src":"71860:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15204,"nodeType":"FunctionDefinition","src":"71897:46:15","nodes":[],"documentation":{"id":15199,"nodeType":"StructuredDocumentation","src":"71867:25:15","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"71906:7:15","parameters":{"id":15202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15201,"mutability":"mutable","name":"newChainId","nameLocation":"71922:10:15","nodeType":"VariableDeclaration","scope":15204,"src":"71914:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15200,"name":"uint256","nodeType":"ElementaryTypeName","src":"71914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71913:20:15"},"returnParameters":{"id":15203,"nodeType":"ParameterList","parameters":[],"src":"71942:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15208,"nodeType":"FunctionDefinition","src":"71982:37:15","nodes":[],"documentation":{"id":15205,"nodeType":"StructuredDocumentation","src":"71949:28:15","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"71991:16:15","parameters":{"id":15206,"nodeType":"ParameterList","parameters":[],"src":"72007:2:15"},"returnParameters":{"id":15207,"nodeType":"ParameterList","parameters":[],"src":"72018:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15214,"nodeType":"FunctionDefinition","src":"72056:48:15","nodes":[],"documentation":{"id":15209,"nodeType":"StructuredDocumentation","src":"72025:26:15","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"72065:8:15","parameters":{"id":15212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15211,"mutability":"mutable","name":"newCoinbase","nameLocation":"72082:11:15","nodeType":"VariableDeclaration","scope":15214,"src":"72074:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15210,"name":"address","nodeType":"ElementaryTypeName","src":"72074:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"72073:21:15"},"returnParameters":{"id":15213,"nodeType":"ParameterList","parameters":[],"src":"72103:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15222,"nodeType":"FunctionDefinition","src":"72224:82:15","nodes":[],"documentation":{"id":15215,"nodeType":"StructuredDocumentation","src":"72110:109:15","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"72233:10:15","parameters":{"id":15218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15217,"mutability":"mutable","name":"urlOrAlias","nameLocation":"72260:10:15","nodeType":"VariableDeclaration","scope":15222,"src":"72244:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15216,"name":"string","nodeType":"ElementaryTypeName","src":"72244:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72243:28:15"},"returnParameters":{"id":15221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15220,"mutability":"mutable","name":"forkId","nameLocation":"72298:6:15","nodeType":"VariableDeclaration","scope":15222,"src":"72290:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15219,"name":"uint256","nodeType":"ElementaryTypeName","src":"72290:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72289:16:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15232,"nodeType":"FunctionDefinition","src":"72413:103:15","nodes":[],"documentation":{"id":15223,"nodeType":"StructuredDocumentation","src":"72312:96:15","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"72422:10:15","parameters":{"id":15228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15225,"mutability":"mutable","name":"urlOrAlias","nameLocation":"72449:10:15","nodeType":"VariableDeclaration","scope":15232,"src":"72433:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15224,"name":"string","nodeType":"ElementaryTypeName","src":"72433:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15227,"mutability":"mutable","name":"blockNumber","nameLocation":"72469:11:15","nodeType":"VariableDeclaration","scope":15232,"src":"72461:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15226,"name":"uint256","nodeType":"ElementaryTypeName","src":"72461:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72432:49:15"},"returnParameters":{"id":15231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15230,"mutability":"mutable","name":"forkId","nameLocation":"72508:6:15","nodeType":"VariableDeclaration","scope":15232,"src":"72500:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15229,"name":"uint256","nodeType":"ElementaryTypeName","src":"72500:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72499:16:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15242,"nodeType":"FunctionDefinition","src":"72741:98:15","nodes":[],"documentation":{"id":15233,"nodeType":"StructuredDocumentation","src":"72522:214:15","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"72750:10:15","parameters":{"id":15238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15235,"mutability":"mutable","name":"urlOrAlias","nameLocation":"72777:10:15","nodeType":"VariableDeclaration","scope":15242,"src":"72761:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15234,"name":"string","nodeType":"ElementaryTypeName","src":"72761:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15237,"mutability":"mutable","name":"txHash","nameLocation":"72797:6:15","nodeType":"VariableDeclaration","scope":15242,"src":"72789:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15236,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72789:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"72760:44:15"},"returnParameters":{"id":15241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15240,"mutability":"mutable","name":"forkId","nameLocation":"72831:6:15","nodeType":"VariableDeclaration","scope":15242,"src":"72823:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15239,"name":"uint256","nodeType":"ElementaryTypeName","src":"72823:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"72822:16:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15250,"nodeType":"FunctionDefinition","src":"72974:88:15","nodes":[],"documentation":{"id":15243,"nodeType":"StructuredDocumentation","src":"72845:124:15","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"72983:16:15","parameters":{"id":15246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15245,"mutability":"mutable","name":"urlOrAlias","nameLocation":"73016:10:15","nodeType":"VariableDeclaration","scope":15250,"src":"73000:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15244,"name":"string","nodeType":"ElementaryTypeName","src":"73000:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72999:28:15"},"returnParameters":{"id":15249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15248,"mutability":"mutable","name":"forkId","nameLocation":"73054:6:15","nodeType":"VariableDeclaration","scope":15250,"src":"73046:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15247,"name":"uint256","nodeType":"ElementaryTypeName","src":"73046:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73045:16:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15260,"nodeType":"FunctionDefinition","src":"73186:109:15","nodes":[],"documentation":{"id":15251,"nodeType":"StructuredDocumentation","src":"73068:113:15","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"73195:16:15","parameters":{"id":15256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15253,"mutability":"mutable","name":"urlOrAlias","nameLocation":"73228:10:15","nodeType":"VariableDeclaration","scope":15260,"src":"73212:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15252,"name":"string","nodeType":"ElementaryTypeName","src":"73212:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15255,"mutability":"mutable","name":"blockNumber","nameLocation":"73248:11:15","nodeType":"VariableDeclaration","scope":15260,"src":"73240:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15254,"name":"uint256","nodeType":"ElementaryTypeName","src":"73240:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73211:49:15"},"returnParameters":{"id":15259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15258,"mutability":"mutable","name":"forkId","nameLocation":"73287:6:15","nodeType":"VariableDeclaration","scope":15260,"src":"73279:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15257,"name":"uint256","nodeType":"ElementaryTypeName","src":"73279:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73278:16:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15270,"nodeType":"FunctionDefinition","src":"73531:104:15","nodes":[],"documentation":{"id":15261,"nodeType":"StructuredDocumentation","src":"73301:225:15","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"73540:16:15","parameters":{"id":15266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15263,"mutability":"mutable","name":"urlOrAlias","nameLocation":"73573:10:15","nodeType":"VariableDeclaration","scope":15270,"src":"73557:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15262,"name":"string","nodeType":"ElementaryTypeName","src":"73557:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15265,"mutability":"mutable","name":"txHash","nameLocation":"73593:6:15","nodeType":"VariableDeclaration","scope":15270,"src":"73585:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"73585:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"73556:44:15"},"returnParameters":{"id":15269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15268,"mutability":"mutable","name":"forkId","nameLocation":"73627:6:15","nodeType":"VariableDeclaration","scope":15270,"src":"73619:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15267,"name":"uint256","nodeType":"ElementaryTypeName","src":"73619:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73618:16:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15278,"nodeType":"FunctionDefinition","src":"73675:60:15","nodes":[],"documentation":{"id":15271,"nodeType":"StructuredDocumentation","src":"73641:29:15","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"73684:4:15","parameters":{"id":15276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15273,"mutability":"mutable","name":"account","nameLocation":"73697:7:15","nodeType":"VariableDeclaration","scope":15278,"src":"73689:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15272,"name":"address","nodeType":"ElementaryTypeName","src":"73689:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15275,"mutability":"mutable","name":"newBalance","nameLocation":"73714:10:15","nodeType":"VariableDeclaration","scope":15278,"src":"73706:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15274,"name":"uint256","nodeType":"ElementaryTypeName","src":"73706:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73688:37:15"},"returnParameters":{"id":15277,"nodeType":"ParameterList","parameters":[],"src":"73734:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15286,"nodeType":"FunctionDefinition","src":"73973:76:15","nodes":[],"documentation":{"id":15279,"nodeType":"StructuredDocumentation","src":"73741:227:15","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"73982:14:15","parameters":{"id":15282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15281,"mutability":"mutable","name":"snapshotId","nameLocation":"74005:10:15","nodeType":"VariableDeclaration","scope":15286,"src":"73997:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15280,"name":"uint256","nodeType":"ElementaryTypeName","src":"73997:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73996:20:15"},"returnParameters":{"id":15285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15284,"mutability":"mutable","name":"success","nameLocation":"74040:7:15","nodeType":"VariableDeclaration","scope":15286,"src":"74035:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15283,"name":"bool","nodeType":"ElementaryTypeName","src":"74035:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74034:14:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15290,"nodeType":"FunctionDefinition","src":"74121:36:15","nodes":[],"documentation":{"id":15287,"nodeType":"StructuredDocumentation","src":"74055:61:15","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"74130:15:15","parameters":{"id":15288,"nodeType":"ParameterList","parameters":[],"src":"74145:2:15"},"returnParameters":{"id":15289,"nodeType":"ParameterList","parameters":[],"src":"74156:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15296,"nodeType":"FunctionDefinition","src":"74333:52:15","nodes":[],"documentation":{"id":15291,"nodeType":"StructuredDocumentation","src":"74163:165:15","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"74342:10:15","parameters":{"id":15294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15293,"mutability":"mutable","name":"newDifficulty","nameLocation":"74361:13:15","nodeType":"VariableDeclaration","scope":15296,"src":"74353:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15292,"name":"uint256","nodeType":"ElementaryTypeName","src":"74353:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74352:23:15"},"returnParameters":{"id":15295,"nodeType":"ParameterList","parameters":[],"src":"74384:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15302,"nodeType":"FunctionDefinition","src":"74444:61:15","nodes":[],"documentation":{"id":15297,"nodeType":"StructuredDocumentation","src":"74391:48:15","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"74453:9:15","parameters":{"id":15300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15299,"mutability":"mutable","name":"pathToStateJson","nameLocation":"74479:15:15","nodeType":"VariableDeclaration","scope":15302,"src":"74463:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15298,"name":"string","nodeType":"ElementaryTypeName","src":"74463:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74462:33:15"},"returnParameters":{"id":15301,"nodeType":"ParameterList","parameters":[],"src":"74504:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15310,"nodeType":"FunctionDefinition","src":"74542:74:15","nodes":[],"documentation":{"id":15303,"nodeType":"StructuredDocumentation","src":"74511:26:15","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"74551:4:15","parameters":{"id":15308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15305,"mutability":"mutable","name":"target","nameLocation":"74564:6:15","nodeType":"VariableDeclaration","scope":15310,"src":"74556:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15304,"name":"address","nodeType":"ElementaryTypeName","src":"74556:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15307,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"74587:18:15","nodeType":"VariableDeclaration","scope":15310,"src":"74572:33:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15306,"name":"bytes","nodeType":"ElementaryTypeName","src":"74572:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"74555:51:15"},"returnParameters":{"id":15309,"nodeType":"ParameterList","parameters":[],"src":"74615:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15316,"nodeType":"FunctionDefinition","src":"74652:42:15","nodes":[],"documentation":{"id":15311,"nodeType":"StructuredDocumentation","src":"74622:25:15","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"74661:3:15","parameters":{"id":15314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15313,"mutability":"mutable","name":"newBasefee","nameLocation":"74673:10:15","nodeType":"VariableDeclaration","scope":15316,"src":"74665:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15312,"name":"uint256","nodeType":"ElementaryTypeName","src":"74665:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"74664:20:15"},"returnParameters":{"id":15315,"nodeType":"ParameterList","parameters":[],"src":"74693:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15324,"nodeType":"FunctionDefinition","src":"74761:79:15","nodes":[],"documentation":{"id":15317,"nodeType":"StructuredDocumentation","src":"74700:56:15","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"74770:12:15","parameters":{"id":15320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15319,"mutability":"mutable","name":"account","nameLocation":"74791:7:15","nodeType":"VariableDeclaration","scope":15324,"src":"74783:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15318,"name":"address","nodeType":"ElementaryTypeName","src":"74783:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"74782:17:15"},"returnParameters":{"id":15323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15322,"mutability":"mutable","name":"persistent","nameLocation":"74828:10:15","nodeType":"VariableDeclaration","scope":15324,"src":"74823:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15321,"name":"bool","nodeType":"ElementaryTypeName","src":"74823:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"74822:17:15"},"scope":15758,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15330,"nodeType":"FunctionDefinition","src":"74921:63:15","nodes":[],"documentation":{"id":15325,"nodeType":"StructuredDocumentation","src":"74846:70:15","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"74930:10:15","parameters":{"id":15328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15327,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"74957:16:15","nodeType":"VariableDeclaration","scope":15330,"src":"74941:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15326,"name":"string","nodeType":"ElementaryTypeName","src":"74941:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74940:34:15"},"returnParameters":{"id":15329,"nodeType":"ParameterList","parameters":[],"src":"74983:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15336,"nodeType":"FunctionDefinition","src":"75187:50:15","nodes":[],"documentation":{"id":15331,"nodeType":"StructuredDocumentation","src":"74990:192:15","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"75196:14:15","parameters":{"id":15334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15333,"mutability":"mutable","name":"account","nameLocation":"75219:7:15","nodeType":"VariableDeclaration","scope":15336,"src":"75211:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15332,"name":"address","nodeType":"ElementaryTypeName","src":"75211:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75210:17:15"},"returnParameters":{"id":15335,"nodeType":"ParameterList","parameters":[],"src":"75236:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15344,"nodeType":"FunctionDefinition","src":"75282:69:15","nodes":[],"documentation":{"id":15337,"nodeType":"StructuredDocumentation","src":"75243:34:15","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"75291:14:15","parameters":{"id":15342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15339,"mutability":"mutable","name":"account0","nameLocation":"75314:8:15","nodeType":"VariableDeclaration","scope":15344,"src":"75306:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15338,"name":"address","nodeType":"ElementaryTypeName","src":"75306:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15341,"mutability":"mutable","name":"account1","nameLocation":"75332:8:15","nodeType":"VariableDeclaration","scope":15344,"src":"75324:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15340,"name":"address","nodeType":"ElementaryTypeName","src":"75324:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75305:36:15"},"returnParameters":{"id":15343,"nodeType":"ParameterList","parameters":[],"src":"75350:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15354,"nodeType":"FunctionDefinition","src":"75396:87:15","nodes":[],"documentation":{"id":15345,"nodeType":"StructuredDocumentation","src":"75357:34:15","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"75405:14:15","parameters":{"id":15352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15347,"mutability":"mutable","name":"account0","nameLocation":"75428:8:15","nodeType":"VariableDeclaration","scope":15354,"src":"75420:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15346,"name":"address","nodeType":"ElementaryTypeName","src":"75420:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15349,"mutability":"mutable","name":"account1","nameLocation":"75446:8:15","nodeType":"VariableDeclaration","scope":15354,"src":"75438:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15348,"name":"address","nodeType":"ElementaryTypeName","src":"75438:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15351,"mutability":"mutable","name":"account2","nameLocation":"75464:8:15","nodeType":"VariableDeclaration","scope":15354,"src":"75456:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15350,"name":"address","nodeType":"ElementaryTypeName","src":"75456:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75419:54:15"},"returnParameters":{"id":15353,"nodeType":"ParameterList","parameters":[],"src":"75482:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15361,"nodeType":"FunctionDefinition","src":"75528:62:15","nodes":[],"documentation":{"id":15355,"nodeType":"StructuredDocumentation","src":"75489:34:15","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"75537:14:15","parameters":{"id":15359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15358,"mutability":"mutable","name":"accounts","nameLocation":"75571:8:15","nodeType":"VariableDeclaration","scope":15361,"src":"75552:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15356,"name":"address","nodeType":"ElementaryTypeName","src":"75552:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15357,"nodeType":"ArrayTypeName","src":"75552:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"75551:29:15"},"returnParameters":{"id":15360,"nodeType":"ParameterList","parameters":[],"src":"75589:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15371,"nodeType":"FunctionDefinition","src":"75661:97:15","nodes":[],"documentation":{"id":15362,"nodeType":"StructuredDocumentation","src":"75596:60:15","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"75670:14:15","parameters":{"id":15369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15364,"mutability":"mutable","name":"callee","nameLocation":"75693:6:15","nodeType":"VariableDeclaration","scope":15371,"src":"75685:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15363,"name":"address","nodeType":"ElementaryTypeName","src":"75685:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15366,"mutability":"mutable","name":"data","nameLocation":"75716:4:15","nodeType":"VariableDeclaration","scope":15371,"src":"75701:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15365,"name":"bytes","nodeType":"ElementaryTypeName","src":"75701:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15368,"mutability":"mutable","name":"revertData","nameLocation":"75737:10:15","nodeType":"VariableDeclaration","scope":15371,"src":"75722:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15367,"name":"bytes","nodeType":"ElementaryTypeName","src":"75722:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"75684:64:15"},"returnParameters":{"id":15370,"nodeType":"ParameterList","parameters":[],"src":"75757:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15383,"nodeType":"FunctionDefinition","src":"75858:123:15","nodes":[],"documentation":{"id":15372,"nodeType":"StructuredDocumentation","src":"75764:89:15","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"75867:14:15","parameters":{"id":15381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15374,"mutability":"mutable","name":"callee","nameLocation":"75890:6:15","nodeType":"VariableDeclaration","scope":15383,"src":"75882:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15373,"name":"address","nodeType":"ElementaryTypeName","src":"75882:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15376,"mutability":"mutable","name":"msgValue","nameLocation":"75906:8:15","nodeType":"VariableDeclaration","scope":15383,"src":"75898:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15375,"name":"uint256","nodeType":"ElementaryTypeName","src":"75898:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15378,"mutability":"mutable","name":"data","nameLocation":"75931:4:15","nodeType":"VariableDeclaration","scope":15383,"src":"75916:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15377,"name":"bytes","nodeType":"ElementaryTypeName","src":"75916:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15380,"mutability":"mutable","name":"revertData","nameLocation":"75952:10:15","nodeType":"VariableDeclaration","scope":15383,"src":"75937:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15379,"name":"bytes","nodeType":"ElementaryTypeName","src":"75937:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"75881:82:15"},"returnParameters":{"id":15382,"nodeType":"ParameterList","parameters":[],"src":"75980:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15393,"nodeType":"FunctionDefinition","src":"76241:91:15","nodes":[],"documentation":{"id":15384,"nodeType":"StructuredDocumentation","src":"75987:249:15","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"76250:8:15","parameters":{"id":15391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15386,"mutability":"mutable","name":"callee","nameLocation":"76267:6:15","nodeType":"VariableDeclaration","scope":15393,"src":"76259:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15385,"name":"address","nodeType":"ElementaryTypeName","src":"76259:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15388,"mutability":"mutable","name":"data","nameLocation":"76290:4:15","nodeType":"VariableDeclaration","scope":15393,"src":"76275:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15387,"name":"bytes","nodeType":"ElementaryTypeName","src":"76275:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15390,"mutability":"mutable","name":"returnData","nameLocation":"76311:10:15","nodeType":"VariableDeclaration","scope":15393,"src":"76296:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15389,"name":"bytes","nodeType":"ElementaryTypeName","src":"76296:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"76258:64:15"},"returnParameters":{"id":15392,"nodeType":"ParameterList","parameters":[],"src":"76331:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15405,"nodeType":"FunctionDefinition","src":"76507:109:15","nodes":[],"documentation":{"id":15394,"nodeType":"StructuredDocumentation","src":"76338:164:15","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"76516:8:15","parameters":{"id":15403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15396,"mutability":"mutable","name":"callee","nameLocation":"76533:6:15","nodeType":"VariableDeclaration","scope":15405,"src":"76525:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15395,"name":"address","nodeType":"ElementaryTypeName","src":"76525:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15398,"mutability":"mutable","name":"msgValue","nameLocation":"76549:8:15","nodeType":"VariableDeclaration","scope":15405,"src":"76541:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15397,"name":"uint256","nodeType":"ElementaryTypeName","src":"76541:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15400,"mutability":"mutable","name":"data","nameLocation":"76574:4:15","nodeType":"VariableDeclaration","scope":15405,"src":"76559:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15399,"name":"bytes","nodeType":"ElementaryTypeName","src":"76559:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15402,"mutability":"mutable","name":"returnData","nameLocation":"76595:10:15","nodeType":"VariableDeclaration","scope":15405,"src":"76580:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15401,"name":"bytes","nodeType":"ElementaryTypeName","src":"76580:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"76524:82:15"},"returnParameters":{"id":15404,"nodeType":"ParameterList","parameters":[],"src":"76615:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15411,"nodeType":"FunctionDefinition","src":"76691:43:15","nodes":[],"documentation":{"id":15406,"nodeType":"StructuredDocumentation","src":"76622:64:15","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"76700:5:15","parameters":{"id":15409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15408,"mutability":"mutable","name":"msgSender","nameLocation":"76714:9:15","nodeType":"VariableDeclaration","scope":15411,"src":"76706:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15407,"name":"address","nodeType":"ElementaryTypeName","src":"76706:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76705:19:15"},"returnParameters":{"id":15410,"nodeType":"ParameterList","parameters":[],"src":"76733:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15419,"nodeType":"FunctionDefinition","src":"76853:61:15","nodes":[],"documentation":{"id":15412,"nodeType":"StructuredDocumentation","src":"76740:108:15","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"76862:5:15","parameters":{"id":15417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15414,"mutability":"mutable","name":"msgSender","nameLocation":"76876:9:15","nodeType":"VariableDeclaration","scope":15419,"src":"76868:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15413,"name":"address","nodeType":"ElementaryTypeName","src":"76868:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15416,"mutability":"mutable","name":"txOrigin","nameLocation":"76895:8:15","nodeType":"VariableDeclaration","scope":15419,"src":"76887:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15415,"name":"address","nodeType":"ElementaryTypeName","src":"76887:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"76867:37:15"},"returnParameters":{"id":15418,"nodeType":"ParameterList","parameters":[],"src":"76913:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15425,"nodeType":"FunctionDefinition","src":"77091:52:15","nodes":[],"documentation":{"id":15420,"nodeType":"StructuredDocumentation","src":"76920:166:15","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"77100:10:15","parameters":{"id":15423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15422,"mutability":"mutable","name":"newPrevrandao","nameLocation":"77119:13:15","nodeType":"VariableDeclaration","scope":15425,"src":"77111:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77111:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77110:23:15"},"returnParameters":{"id":15424,"nodeType":"ParameterList","parameters":[],"src":"77142:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15436,"nodeType":"FunctionDefinition","src":"77271:101:15","nodes":[],"documentation":{"id":15426,"nodeType":"StructuredDocumentation","src":"77149:117:15","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"77280:11:15","parameters":{"id":15427,"nodeType":"ParameterList","parameters":[],"src":"77291:2:15"},"returnParameters":{"id":15435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15430,"mutability":"mutable","name":"callerMode","nameLocation":"77323:10:15","nodeType":"VariableDeclaration","scope":15436,"src":"77312:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12123","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":15429,"nodeType":"UserDefinedTypeName","pathNode":{"id":15428,"name":"CallerMode","nameLocations":["77312:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":12123,"src":"77312:10:15"},"referencedDeclaration":12123,"src":"77312:10:15","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12123","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":15432,"mutability":"mutable","name":"msgSender","nameLocation":"77343:9:15","nodeType":"VariableDeclaration","scope":15436,"src":"77335:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15431,"name":"address","nodeType":"ElementaryTypeName","src":"77335:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15434,"mutability":"mutable","name":"txOrigin","nameLocation":"77362:8:15","nodeType":"VariableDeclaration","scope":15436,"src":"77354:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15433,"name":"address","nodeType":"ElementaryTypeName","src":"77354:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77311:60:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15442,"nodeType":"FunctionDefinition","src":"77460:46:15","nodes":[],"documentation":{"id":15437,"nodeType":"StructuredDocumentation","src":"77378:77:15","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"77469:10:15","parameters":{"id":15440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15439,"mutability":"mutable","name":"account","nameLocation":"77488:7:15","nodeType":"VariableDeclaration","scope":15442,"src":"77480:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15438,"name":"address","nodeType":"ElementaryTypeName","src":"77480:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77479:17:15"},"returnParameters":{"id":15441,"nodeType":"ParameterList","parameters":[],"src":"77505:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15450,"nodeType":"FunctionDefinition","src":"77849:70:15","nodes":[],"documentation":{"id":15443,"nodeType":"StructuredDocumentation","src":"77512:332:15","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"77858:8:15","parameters":{"id":15446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15445,"mutability":"mutable","name":"snapshotId","nameLocation":"77875:10:15","nodeType":"VariableDeclaration","scope":15450,"src":"77867:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15444,"name":"uint256","nodeType":"ElementaryTypeName","src":"77867:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77866:20:15"},"returnParameters":{"id":15449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15448,"mutability":"mutable","name":"success","nameLocation":"77910:7:15","nodeType":"VariableDeclaration","scope":15450,"src":"77905:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15447,"name":"bool","nodeType":"ElementaryTypeName","src":"77905:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"77904:14:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15458,"nodeType":"FunctionDefinition","src":"78202:79:15","nodes":[],"documentation":{"id":15451,"nodeType":"StructuredDocumentation","src":"77925:272:15","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"78211:17:15","parameters":{"id":15454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15453,"mutability":"mutable","name":"snapshotId","nameLocation":"78237:10:15","nodeType":"VariableDeclaration","scope":15458,"src":"78229:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15452,"name":"uint256","nodeType":"ElementaryTypeName","src":"78229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78228:20:15"},"returnParameters":{"id":15457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15456,"mutability":"mutable","name":"success","nameLocation":"78272:7:15","nodeType":"VariableDeclaration","scope":15458,"src":"78267:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15455,"name":"bool","nodeType":"ElementaryTypeName","src":"78267:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"78266:14:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15464,"nodeType":"FunctionDefinition","src":"78378:52:15","nodes":[],"documentation":{"id":15459,"nodeType":"StructuredDocumentation","src":"78287:86:15","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"78387:16:15","parameters":{"id":15462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15461,"mutability":"mutable","name":"account","nameLocation":"78412:7:15","nodeType":"VariableDeclaration","scope":15464,"src":"78404:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15460,"name":"address","nodeType":"ElementaryTypeName","src":"78404:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"78403:17:15"},"returnParameters":{"id":15463,"nodeType":"ParameterList","parameters":[],"src":"78429:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15471,"nodeType":"FunctionDefinition","src":"78477:64:15","nodes":[],"documentation":{"id":15465,"nodeType":"StructuredDocumentation","src":"78436:36:15","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"78486:16:15","parameters":{"id":15469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15468,"mutability":"mutable","name":"accounts","nameLocation":"78522:8:15","nodeType":"VariableDeclaration","scope":15471,"src":"78503:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15466,"name":"address","nodeType":"ElementaryTypeName","src":"78503:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15467,"nodeType":"ArrayTypeName","src":"78503:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"78502:29:15"},"returnParameters":{"id":15470,"nodeType":"ParameterList","parameters":[],"src":"78540:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15477,"nodeType":"FunctionDefinition","src":"78576:42:15","nodes":[],"documentation":{"id":15472,"nodeType":"StructuredDocumentation","src":"78547:24:15","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"78585:4:15","parameters":{"id":15475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15474,"mutability":"mutable","name":"newHeight","nameLocation":"78598:9:15","nodeType":"VariableDeclaration","scope":15477,"src":"78590:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15473,"name":"uint256","nodeType":"ElementaryTypeName","src":"78590:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78589:19:15"},"returnParameters":{"id":15476,"nodeType":"ParameterList","parameters":[],"src":"78617:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15483,"nodeType":"FunctionDefinition","src":"78757:48:15","nodes":[],"documentation":{"id":15478,"nodeType":"StructuredDocumentation","src":"78624:128:15","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"78766:8:15","parameters":{"id":15481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15480,"mutability":"mutable","name":"blockNumber","nameLocation":"78783:11:15","nodeType":"VariableDeclaration","scope":15483,"src":"78775:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15479,"name":"uint256","nodeType":"ElementaryTypeName","src":"78775:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78774:21:15"},"returnParameters":{"id":15482,"nodeType":"ParameterList","parameters":[],"src":"78804:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15489,"nodeType":"FunctionDefinition","src":"79020:43:15","nodes":[],"documentation":{"id":15484,"nodeType":"StructuredDocumentation","src":"78811:204:15","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"79029:8:15","parameters":{"id":15487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15486,"mutability":"mutable","name":"txHash","nameLocation":"79046:6:15","nodeType":"VariableDeclaration","scope":15489,"src":"79038:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15485,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79038:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"79037:16:15"},"returnParameters":{"id":15488,"nodeType":"ParameterList","parameters":[],"src":"79062:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15497,"nodeType":"FunctionDefinition","src":"79123:64:15","nodes":[],"documentation":{"id":15490,"nodeType":"StructuredDocumentation","src":"79069:49:15","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"79132:8:15","parameters":{"id":15495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15492,"mutability":"mutable","name":"forkId","nameLocation":"79149:6:15","nodeType":"VariableDeclaration","scope":15497,"src":"79141:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15491,"name":"uint256","nodeType":"ElementaryTypeName","src":"79141:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15494,"mutability":"mutable","name":"blockNumber","nameLocation":"79165:11:15","nodeType":"VariableDeclaration","scope":15497,"src":"79157:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15493,"name":"uint256","nodeType":"ElementaryTypeName","src":"79157:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79140:37:15"},"returnParameters":{"id":15496,"nodeType":"ParameterList","parameters":[],"src":"79186:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15505,"nodeType":"FunctionDefinition","src":"79323:59:15","nodes":[],"documentation":{"id":15498,"nodeType":"StructuredDocumentation","src":"79193:125:15","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"79332:8:15","parameters":{"id":15503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15500,"mutability":"mutable","name":"forkId","nameLocation":"79349:6:15","nodeType":"VariableDeclaration","scope":15505,"src":"79341:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15499,"name":"uint256","nodeType":"ElementaryTypeName","src":"79341:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15502,"mutability":"mutable","name":"txHash","nameLocation":"79365:6:15","nodeType":"VariableDeclaration","scope":15505,"src":"79357:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15501,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79357:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"79340:32:15"},"returnParameters":{"id":15504,"nodeType":"ParameterList","parameters":[],"src":"79381:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15511,"nodeType":"FunctionDefinition","src":"79495:45:15","nodes":[],"documentation":{"id":15506,"nodeType":"StructuredDocumentation","src":"79388:102:15","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"79504:10:15","parameters":{"id":15509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15508,"mutability":"mutable","name":"forkId","nameLocation":"79523:6:15","nodeType":"VariableDeclaration","scope":15511,"src":"79515:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15507,"name":"uint256","nodeType":"ElementaryTypeName","src":"79515:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79514:16:15"},"returnParameters":{"id":15510,"nodeType":"ParameterList","parameters":[],"src":"79539:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15519,"nodeType":"FunctionDefinition","src":"79638:61:15","nodes":[],"documentation":{"id":15512,"nodeType":"StructuredDocumentation","src":"79546:87:15","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"79647:8:15","parameters":{"id":15517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15514,"mutability":"mutable","name":"account","nameLocation":"79664:7:15","nodeType":"VariableDeclaration","scope":15519,"src":"79656:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15513,"name":"address","nodeType":"ElementaryTypeName","src":"79656:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15516,"mutability":"mutable","name":"newNonce","nameLocation":"79680:8:15","nodeType":"VariableDeclaration","scope":15519,"src":"79673:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15515,"name":"uint64","nodeType":"ElementaryTypeName","src":"79673:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"79655:34:15"},"returnParameters":{"id":15518,"nodeType":"ParameterList","parameters":[],"src":"79698:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15527,"nodeType":"FunctionDefinition","src":"79765:67:15","nodes":[],"documentation":{"id":15520,"nodeType":"StructuredDocumentation","src":"79705:55:15","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"79774:14:15","parameters":{"id":15525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15522,"mutability":"mutable","name":"account","nameLocation":"79797:7:15","nodeType":"VariableDeclaration","scope":15527,"src":"79789:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15521,"name":"address","nodeType":"ElementaryTypeName","src":"79789:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15524,"mutability":"mutable","name":"newNonce","nameLocation":"79813:8:15","nodeType":"VariableDeclaration","scope":15527,"src":"79806:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15523,"name":"uint64","nodeType":"ElementaryTypeName","src":"79806:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"79788:34:15"},"returnParameters":{"id":15526,"nodeType":"ParameterList","parameters":[],"src":"79831:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15533,"nodeType":"FunctionDefinition","src":"79987:58:15","nodes":[],"documentation":{"id":15528,"nodeType":"StructuredDocumentation","src":"79838:144:15","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"79996:8:15","parameters":{"id":15529,"nodeType":"ParameterList","parameters":[],"src":"80004:2:15"},"returnParameters":{"id":15532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15531,"mutability":"mutable","name":"snapshotId","nameLocation":"80033:10:15","nodeType":"VariableDeclaration","scope":15533,"src":"80025:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15530,"name":"uint256","nodeType":"ElementaryTypeName","src":"80025:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80024:20:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15539,"nodeType":"FunctionDefinition","src":"80152:48:15","nodes":[],"documentation":{"id":15534,"nodeType":"StructuredDocumentation","src":"80051:96:15","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"80161:10:15","parameters":{"id":15537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15536,"mutability":"mutable","name":"msgSender","nameLocation":"80180:9:15","nodeType":"VariableDeclaration","scope":15539,"src":"80172:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15535,"name":"address","nodeType":"ElementaryTypeName","src":"80172:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80171:19:15"},"returnParameters":{"id":15538,"nodeType":"ParameterList","parameters":[],"src":"80199:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15547,"nodeType":"FunctionDefinition","src":"80351:66:15","nodes":[],"documentation":{"id":15540,"nodeType":"StructuredDocumentation","src":"80206:140:15","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"80360:10:15","parameters":{"id":15545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15542,"mutability":"mutable","name":"msgSender","nameLocation":"80379:9:15","nodeType":"VariableDeclaration","scope":15547,"src":"80371:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15541,"name":"address","nodeType":"ElementaryTypeName","src":"80371:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15544,"mutability":"mutable","name":"txOrigin","nameLocation":"80398:8:15","nodeType":"VariableDeclaration","scope":15547,"src":"80390:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15543,"name":"address","nodeType":"ElementaryTypeName","src":"80390:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80370:37:15"},"returnParameters":{"id":15546,"nodeType":"ParameterList","parameters":[],"src":"80416:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15551,"nodeType":"FunctionDefinition","src":"80492:30:15","nodes":[],"documentation":{"id":15548,"nodeType":"StructuredDocumentation","src":"80423:64:15","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"80501:9:15","parameters":{"id":15549,"nodeType":"ParameterList","parameters":[],"src":"80510:2:15"},"returnParameters":{"id":15550,"nodeType":"ParameterList","parameters":[],"src":"80521:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15561,"nodeType":"FunctionDefinition","src":"80580:69:15","nodes":[],"documentation":{"id":15552,"nodeType":"StructuredDocumentation","src":"80528:47:15","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"80589:5:15","parameters":{"id":15559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15554,"mutability":"mutable","name":"target","nameLocation":"80603:6:15","nodeType":"VariableDeclaration","scope":15561,"src":"80595:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15553,"name":"address","nodeType":"ElementaryTypeName","src":"80595:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15556,"mutability":"mutable","name":"slot","nameLocation":"80619:4:15","nodeType":"VariableDeclaration","scope":15561,"src":"80611:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80611:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15558,"mutability":"mutable","name":"value","nameLocation":"80633:5:15","nodeType":"VariableDeclaration","scope":15561,"src":"80625:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80625:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80594:45:15"},"returnParameters":{"id":15560,"nodeType":"ParameterList","parameters":[],"src":"80648:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15567,"nodeType":"FunctionDefinition","src":"80752:43:15","nodes":[],"documentation":{"id":15562,"nodeType":"StructuredDocumentation","src":"80655:92:15","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"80761:8:15","parameters":{"id":15565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15564,"mutability":"mutable","name":"txHash","nameLocation":"80778:6:15","nodeType":"VariableDeclaration","scope":15567,"src":"80770:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80770:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80769:16:15"},"returnParameters":{"id":15566,"nodeType":"ParameterList","parameters":[],"src":"80794:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15575,"nodeType":"FunctionDefinition","src":"80897:59:15","nodes":[],"documentation":{"id":15568,"nodeType":"StructuredDocumentation","src":"80801:91:15","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"80906:8:15","parameters":{"id":15573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15570,"mutability":"mutable","name":"forkId","nameLocation":"80923:6:15","nodeType":"VariableDeclaration","scope":15575,"src":"80915:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15569,"name":"uint256","nodeType":"ElementaryTypeName","src":"80915:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15572,"mutability":"mutable","name":"txHash","nameLocation":"80939:6:15","nodeType":"VariableDeclaration","scope":15575,"src":"80931:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80931:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80914:32:15"},"returnParameters":{"id":15574,"nodeType":"ParameterList","parameters":[],"src":"80955:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15581,"nodeType":"FunctionDefinition","src":"80990:50:15","nodes":[],"documentation":{"id":15576,"nodeType":"StructuredDocumentation","src":"80962:23:15","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"80999:10:15","parameters":{"id":15579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15578,"mutability":"mutable","name":"newGasPrice","nameLocation":"81018:11:15","nodeType":"VariableDeclaration","scope":15581,"src":"81010:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15577,"name":"uint256","nodeType":"ElementaryTypeName","src":"81010:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81009:21:15"},"returnParameters":{"id":15580,"nodeType":"ParameterList","parameters":[],"src":"81039:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15587,"nodeType":"FunctionDefinition","src":"81078:45:15","nodes":[],"documentation":{"id":15582,"nodeType":"StructuredDocumentation","src":"81046:27:15","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"81087:4:15","parameters":{"id":15585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15584,"mutability":"mutable","name":"newTimestamp","nameLocation":"81100:12:15","nodeType":"VariableDeclaration","scope":15587,"src":"81092:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15583,"name":"uint256","nodeType":"ElementaryTypeName","src":"81092:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81091:22:15"},"returnParameters":{"id":15586,"nodeType":"ParameterList","parameters":[],"src":"81122:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15599,"nodeType":"FunctionDefinition","src":"81275:105:15","nodes":[],"documentation":{"id":15588,"nodeType":"StructuredDocumentation","src":"81163:107:15","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"81284:16:15","parameters":{"id":15597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15590,"mutability":"mutable","name":"callee","nameLocation":"81309:6:15","nodeType":"VariableDeclaration","scope":15599,"src":"81301:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15589,"name":"address","nodeType":"ElementaryTypeName","src":"81301:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15592,"mutability":"mutable","name":"msgValue","nameLocation":"81325:8:15","nodeType":"VariableDeclaration","scope":15599,"src":"81317:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15591,"name":"uint256","nodeType":"ElementaryTypeName","src":"81317:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15594,"mutability":"mutable","name":"minGas","nameLocation":"81342:6:15","nodeType":"VariableDeclaration","scope":15599,"src":"81335:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15593,"name":"uint64","nodeType":"ElementaryTypeName","src":"81335:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15596,"mutability":"mutable","name":"data","nameLocation":"81365:4:15","nodeType":"VariableDeclaration","scope":15599,"src":"81350:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15595,"name":"bytes","nodeType":"ElementaryTypeName","src":"81350:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81300:70:15"},"returnParameters":{"id":15598,"nodeType":"ParameterList","parameters":[],"src":"81379:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15613,"nodeType":"FunctionDefinition","src":"81513:127:15","nodes":[],"documentation":{"id":15600,"nodeType":"StructuredDocumentation","src":"81386:122:15","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"81522:16:15","parameters":{"id":15611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15602,"mutability":"mutable","name":"callee","nameLocation":"81547:6:15","nodeType":"VariableDeclaration","scope":15613,"src":"81539:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15601,"name":"address","nodeType":"ElementaryTypeName","src":"81539:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15604,"mutability":"mutable","name":"msgValue","nameLocation":"81563:8:15","nodeType":"VariableDeclaration","scope":15613,"src":"81555:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15603,"name":"uint256","nodeType":"ElementaryTypeName","src":"81555:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15606,"mutability":"mutable","name":"minGas","nameLocation":"81580:6:15","nodeType":"VariableDeclaration","scope":15613,"src":"81573:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15605,"name":"uint64","nodeType":"ElementaryTypeName","src":"81573:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15608,"mutability":"mutable","name":"data","nameLocation":"81603:4:15","nodeType":"VariableDeclaration","scope":15613,"src":"81588:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15607,"name":"bytes","nodeType":"ElementaryTypeName","src":"81588:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15610,"mutability":"mutable","name":"count","nameLocation":"81616:5:15","nodeType":"VariableDeclaration","scope":15613,"src":"81609:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15609,"name":"uint64","nodeType":"ElementaryTypeName","src":"81609:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"81538:84:15"},"returnParameters":{"id":15612,"nodeType":"ParameterList","parameters":[],"src":"81639:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15621,"nodeType":"FunctionDefinition","src":"81772:66:15","nodes":[],"documentation":{"id":15614,"nodeType":"StructuredDocumentation","src":"81646:121:15","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"81781:10:15","parameters":{"id":15619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15616,"mutability":"mutable","name":"callee","nameLocation":"81800:6:15","nodeType":"VariableDeclaration","scope":15621,"src":"81792:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15615,"name":"address","nodeType":"ElementaryTypeName","src":"81792:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15618,"mutability":"mutable","name":"data","nameLocation":"81823:4:15","nodeType":"VariableDeclaration","scope":15621,"src":"81808:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15617,"name":"bytes","nodeType":"ElementaryTypeName","src":"81808:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"81791:37:15"},"returnParameters":{"id":15620,"nodeType":"ParameterList","parameters":[],"src":"81837:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15631,"nodeType":"FunctionDefinition","src":"81925:80:15","nodes":[],"documentation":{"id":15622,"nodeType":"StructuredDocumentation","src":"81844:76:15","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"81934:10:15","parameters":{"id":15629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15624,"mutability":"mutable","name":"callee","nameLocation":"81953:6:15","nodeType":"VariableDeclaration","scope":15631,"src":"81945:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15623,"name":"address","nodeType":"ElementaryTypeName","src":"81945:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15626,"mutability":"mutable","name":"data","nameLocation":"81976:4:15","nodeType":"VariableDeclaration","scope":15631,"src":"81961:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15625,"name":"bytes","nodeType":"ElementaryTypeName","src":"81961:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15628,"mutability":"mutable","name":"count","nameLocation":"81989:5:15","nodeType":"VariableDeclaration","scope":15631,"src":"81982:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15627,"name":"uint64","nodeType":"ElementaryTypeName","src":"81982:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"81944:51:15"},"returnParameters":{"id":15630,"nodeType":"ParameterList","parameters":[],"src":"82004:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15641,"nodeType":"FunctionDefinition","src":"82093:84:15","nodes":[],"documentation":{"id":15632,"nodeType":"StructuredDocumentation","src":"82011:77:15","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"82102:10:15","parameters":{"id":15639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15634,"mutability":"mutable","name":"callee","nameLocation":"82121:6:15","nodeType":"VariableDeclaration","scope":15641,"src":"82113:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15633,"name":"address","nodeType":"ElementaryTypeName","src":"82113:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15636,"mutability":"mutable","name":"msgValue","nameLocation":"82137:8:15","nodeType":"VariableDeclaration","scope":15641,"src":"82129:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15635,"name":"uint256","nodeType":"ElementaryTypeName","src":"82129:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15638,"mutability":"mutable","name":"data","nameLocation":"82162:4:15","nodeType":"VariableDeclaration","scope":15641,"src":"82147:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15637,"name":"bytes","nodeType":"ElementaryTypeName","src":"82147:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82112:55:15"},"returnParameters":{"id":15640,"nodeType":"ParameterList","parameters":[],"src":"82176:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15653,"nodeType":"FunctionDefinition","src":"82280:98:15","nodes":[],"documentation":{"id":15642,"nodeType":"StructuredDocumentation","src":"82183:92:15","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"82289:10:15","parameters":{"id":15651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15644,"mutability":"mutable","name":"callee","nameLocation":"82308:6:15","nodeType":"VariableDeclaration","scope":15653,"src":"82300:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15643,"name":"address","nodeType":"ElementaryTypeName","src":"82300:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15646,"mutability":"mutable","name":"msgValue","nameLocation":"82324:8:15","nodeType":"VariableDeclaration","scope":15653,"src":"82316:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15645,"name":"uint256","nodeType":"ElementaryTypeName","src":"82316:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15648,"mutability":"mutable","name":"data","nameLocation":"82349:4:15","nodeType":"VariableDeclaration","scope":15653,"src":"82334:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15647,"name":"bytes","nodeType":"ElementaryTypeName","src":"82334:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15650,"mutability":"mutable","name":"count","nameLocation":"82362:5:15","nodeType":"VariableDeclaration","scope":15653,"src":"82355:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15649,"name":"uint64","nodeType":"ElementaryTypeName","src":"82355:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"82299:69:15"},"returnParameters":{"id":15652,"nodeType":"ParameterList","parameters":[],"src":"82377:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15665,"nodeType":"FunctionDefinition","src":"82471:96:15","nodes":[],"documentation":{"id":15654,"nodeType":"StructuredDocumentation","src":"82384:82:15","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"82480:10:15","parameters":{"id":15663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15656,"mutability":"mutable","name":"callee","nameLocation":"82499:6:15","nodeType":"VariableDeclaration","scope":15665,"src":"82491:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15655,"name":"address","nodeType":"ElementaryTypeName","src":"82491:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15658,"mutability":"mutable","name":"msgValue","nameLocation":"82515:8:15","nodeType":"VariableDeclaration","scope":15665,"src":"82507:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15657,"name":"uint256","nodeType":"ElementaryTypeName","src":"82507:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15660,"mutability":"mutable","name":"gas","nameLocation":"82532:3:15","nodeType":"VariableDeclaration","scope":15665,"src":"82525:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15659,"name":"uint64","nodeType":"ElementaryTypeName","src":"82525:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15662,"mutability":"mutable","name":"data","nameLocation":"82552:4:15","nodeType":"VariableDeclaration","scope":15665,"src":"82537:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15661,"name":"bytes","nodeType":"ElementaryTypeName","src":"82537:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82490:67:15"},"returnParameters":{"id":15664,"nodeType":"ParameterList","parameters":[],"src":"82566:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15679,"nodeType":"FunctionDefinition","src":"82676:110:15","nodes":[],"documentation":{"id":15666,"nodeType":"StructuredDocumentation","src":"82573:98:15","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"82685:10:15","parameters":{"id":15677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15668,"mutability":"mutable","name":"callee","nameLocation":"82704:6:15","nodeType":"VariableDeclaration","scope":15679,"src":"82696:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15667,"name":"address","nodeType":"ElementaryTypeName","src":"82696:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15670,"mutability":"mutable","name":"msgValue","nameLocation":"82720:8:15","nodeType":"VariableDeclaration","scope":15679,"src":"82712:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15669,"name":"uint256","nodeType":"ElementaryTypeName","src":"82712:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15672,"mutability":"mutable","name":"gas","nameLocation":"82737:3:15","nodeType":"VariableDeclaration","scope":15679,"src":"82730:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15671,"name":"uint64","nodeType":"ElementaryTypeName","src":"82730:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15674,"mutability":"mutable","name":"data","nameLocation":"82757:4:15","nodeType":"VariableDeclaration","scope":15679,"src":"82742:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15673,"name":"bytes","nodeType":"ElementaryTypeName","src":"82742:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15676,"mutability":"mutable","name":"count","nameLocation":"82770:5:15","nodeType":"VariableDeclaration","scope":15679,"src":"82763:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15675,"name":"uint64","nodeType":"ElementaryTypeName","src":"82763:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"82695:81:15"},"returnParameters":{"id":15678,"nodeType":"ParameterList","parameters":[],"src":"82785:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15691,"nodeType":"FunctionDefinition","src":"83125:99:15","nodes":[],"documentation":{"id":15680,"nodeType":"StructuredDocumentation","src":"82792:328:15","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"83134:10:15","parameters":{"id":15689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15682,"mutability":"mutable","name":"checkTopic1","nameLocation":"83150:11:15","nodeType":"VariableDeclaration","scope":15691,"src":"83145:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15681,"name":"bool","nodeType":"ElementaryTypeName","src":"83145:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15684,"mutability":"mutable","name":"checkTopic2","nameLocation":"83168:11:15","nodeType":"VariableDeclaration","scope":15691,"src":"83163:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15683,"name":"bool","nodeType":"ElementaryTypeName","src":"83163:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15686,"mutability":"mutable","name":"checkTopic3","nameLocation":"83186:11:15","nodeType":"VariableDeclaration","scope":15691,"src":"83181:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15685,"name":"bool","nodeType":"ElementaryTypeName","src":"83181:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15688,"mutability":"mutable","name":"checkData","nameLocation":"83204:9:15","nodeType":"VariableDeclaration","scope":15691,"src":"83199:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15687,"name":"bool","nodeType":"ElementaryTypeName","src":"83199:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83144:70:15"},"returnParameters":{"id":15690,"nodeType":"ParameterList","parameters":[],"src":"83223:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15705,"nodeType":"FunctionDefinition","src":"83327:124:15","nodes":[],"documentation":{"id":15692,"nodeType":"StructuredDocumentation","src":"83230:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"83336:10:15","parameters":{"id":15703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15694,"mutability":"mutable","name":"checkTopic1","nameLocation":"83352:11:15","nodeType":"VariableDeclaration","scope":15705,"src":"83347:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15693,"name":"bool","nodeType":"ElementaryTypeName","src":"83347:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15696,"mutability":"mutable","name":"checkTopic2","nameLocation":"83370:11:15","nodeType":"VariableDeclaration","scope":15705,"src":"83365:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15695,"name":"bool","nodeType":"ElementaryTypeName","src":"83365:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15698,"mutability":"mutable","name":"checkTopic3","nameLocation":"83388:11:15","nodeType":"VariableDeclaration","scope":15705,"src":"83383:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15697,"name":"bool","nodeType":"ElementaryTypeName","src":"83383:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15700,"mutability":"mutable","name":"checkData","nameLocation":"83406:9:15","nodeType":"VariableDeclaration","scope":15705,"src":"83401:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15699,"name":"bool","nodeType":"ElementaryTypeName","src":"83401:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15702,"mutability":"mutable","name":"emitter","nameLocation":"83425:7:15","nodeType":"VariableDeclaration","scope":15705,"src":"83417:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15701,"name":"address","nodeType":"ElementaryTypeName","src":"83417:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83346:87:15"},"returnParameters":{"id":15704,"nodeType":"ParameterList","parameters":[],"src":"83450:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15709,"nodeType":"FunctionDefinition","src":"83721:31:15","nodes":[],"documentation":{"id":15706,"nodeType":"StructuredDocumentation","src":"83457:259:15","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"83730:10:15","parameters":{"id":15707,"nodeType":"ParameterList","parameters":[],"src":"83740:2:15"},"returnParameters":{"id":15708,"nodeType":"ParameterList","parameters":[],"src":"83751:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15715,"nodeType":"FunctionDefinition","src":"83855:46:15","nodes":[],"documentation":{"id":15710,"nodeType":"StructuredDocumentation","src":"83758:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"83864:10:15","parameters":{"id":15713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15712,"mutability":"mutable","name":"emitter","nameLocation":"83883:7:15","nodeType":"VariableDeclaration","scope":15715,"src":"83875:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15711,"name":"address","nodeType":"ElementaryTypeName","src":"83875:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83874:17:15"},"returnParameters":{"id":15714,"nodeType":"ParameterList","parameters":[],"src":"83900:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15719,"nodeType":"FunctionDefinition","src":"83967:33:15","nodes":[],"documentation":{"id":15716,"nodeType":"StructuredDocumentation","src":"83907:55:15","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"83976:12:15","parameters":{"id":15717,"nodeType":"ParameterList","parameters":[],"src":"83988:2:15"},"returnParameters":{"id":15718,"nodeType":"ParameterList","parameters":[],"src":"83999:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15725,"nodeType":"FunctionDefinition","src":"84078:50:15","nodes":[],"documentation":{"id":15720,"nodeType":"StructuredDocumentation","src":"84006:67:15","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"84087:12:15","parameters":{"id":15723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15722,"mutability":"mutable","name":"revertData","nameLocation":"84107:10:15","nodeType":"VariableDeclaration","scope":15725,"src":"84100:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":15721,"name":"bytes4","nodeType":"ElementaryTypeName","src":"84100:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"84099:19:15"},"returnParameters":{"id":15724,"nodeType":"ParameterList","parameters":[],"src":"84127:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15731,"nodeType":"FunctionDefinition","src":"84210:58:15","nodes":[],"documentation":{"id":15726,"nodeType":"StructuredDocumentation","src":"84134:71:15","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"84219:12:15","parameters":{"id":15729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15728,"mutability":"mutable","name":"revertData","nameLocation":"84247:10:15","nodeType":"VariableDeclaration","scope":15731,"src":"84232:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15727,"name":"bytes","nodeType":"ElementaryTypeName","src":"84232:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84231:27:15"},"returnParameters":{"id":15730,"nodeType":"ParameterList","parameters":[],"src":"84267:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15739,"nodeType":"FunctionDefinition","src":"84497:59:15","nodes":[],"documentation":{"id":15732,"nodeType":"StructuredDocumentation","src":"84274:218:15","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"84506:16:15","parameters":{"id":15737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15734,"mutability":"mutable","name":"min","nameLocation":"84530:3:15","nodeType":"VariableDeclaration","scope":15739,"src":"84523:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15733,"name":"uint64","nodeType":"ElementaryTypeName","src":"84523:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15736,"mutability":"mutable","name":"max","nameLocation":"84542:3:15","nodeType":"VariableDeclaration","scope":15739,"src":"84535:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15735,"name":"uint64","nodeType":"ElementaryTypeName","src":"84535:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"84522:24:15"},"returnParameters":{"id":15738,"nodeType":"ParameterList","parameters":[],"src":"84555:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15747,"nodeType":"FunctionDefinition","src":"84798:63:15","nodes":[],"documentation":{"id":15740,"nodeType":"StructuredDocumentation","src":"84562:231:15","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"84807:20:15","parameters":{"id":15745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15742,"mutability":"mutable","name":"min","nameLocation":"84835:3:15","nodeType":"VariableDeclaration","scope":15747,"src":"84828:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15741,"name":"uint64","nodeType":"ElementaryTypeName","src":"84828:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":15744,"mutability":"mutable","name":"max","nameLocation":"84847:3:15","nodeType":"VariableDeclaration","scope":15747,"src":"84840:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":15743,"name":"uint64","nodeType":"ElementaryTypeName","src":"84840:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"84827:24:15"},"returnParameters":{"id":15746,"nodeType":"ParameterList","parameters":[],"src":"84860:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15753,"nodeType":"FunctionDefinition","src":"84939:38:15","nodes":[],"documentation":{"id":15748,"nodeType":"StructuredDocumentation","src":"84867:67:15","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"84948:4:15","parameters":{"id":15751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15750,"mutability":"mutable","name":"skipTest","nameLocation":"84958:8:15","nodeType":"VariableDeclaration","scope":15753,"src":"84953:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15749,"name":"bool","nodeType":"ElementaryTypeName","src":"84953:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"84952:15:15"},"returnParameters":{"id":15752,"nodeType":"ParameterList","parameters":[],"src":"84976:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15757,"nodeType":"FunctionDefinition","src":"85052:41:15","nodes":[],"documentation":{"id":15754,"nodeType":"StructuredDocumentation","src":"84983:64:15","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"85061:20:15","parameters":{"id":15755,"nodeType":"ParameterList","parameters":[],"src":"85081:2:15"},"returnParameters":{"id":15756,"nodeType":"ParameterList","parameters":[],"src":"85092:0:15"},"scope":15758,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":15185,"name":"VmSafe","nameLocations":["71521:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":15183,"src":"71521:6:15"},"id":15186,"nodeType":"InheritanceSpecifier","src":"71521:6:15"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":15184,"nodeType":"StructuredDocumentation","src":"71334:171:15","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[15758,15183],"name":"Vm","nameLocation":"71515:2:15","scope":15759,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":15}